
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/index';
declare const prisma: unique symbol
export type PrismaPromise<A> = Promise<A> & {[prisma]: true}
type UnwrapPromise<P extends any> = P extends Promise<infer R> ? R : P
type UnwrapTuple<Tuple extends readonly unknown[]> = {
  [K in keyof Tuple]: K extends `${number}` ? Tuple[K] extends PrismaPromise<infer X> ? X : UnwrapPromise<Tuple[K]> : UnwrapPromise<Tuple[K]>
};


/**
 * Model users
 * 
 */
export type users = {
  id: number
  firebase_uid: string
  email: string | null
  name: string | null
  last_name: string | null
  score: Prisma.Decimal | null
  image_reference: string | null
  image_url: string | null
  image_type: string | null
  image_size_wh: string | null
}

/**
 * Model menu_main_activity
 * 
 */
export type menu_main_activity = {
  id: number
  title: string
  name_icon: string | null
  color_icon: string | null
  color_title: string | null
  color_background: string | null
}

/**
 * Model activity
 * 
 */
export type activity = {
  id: number
  author_uid: string
  title: string
  with_password: number
  password: string | null
  type_activity: string | null
  excluded: number | null
  created: Date | null
  image_reference: string | null
  image_url: string | null
  image_type: string | null
  image_size_wh: string | null
  difficulty_level: string | null
}

/**
 * Model activity_question_response
 * 
 */
export type activity_question_response = {
  id: number
  activity_id: number | null
  number_question: number
  answer_one: string
  answer_two: string
  answer_tree: string
  answer_four: string
  right_answer: string
  question: string | null
}

/**
 * Model activity_question_users
 * 
 */
export type activity_question_users = {
  id: number
  activity_id: number | null
  user_uid: string | null
  value: Prisma.Decimal | null
  processed: number | null
  created: Date | null
  display_to_user: number | null
  evaluated: number | null
}

/**
 * Model activity_question_users_response
 * 
 */
export type activity_question_users_response = {
  id: number
  activity_id: number | null
  user_uid: string | null
  number_question: number
  answer: string
  comments: string | null
}

/**
 * Model reward
 * 
 */
export type reward = {
  id: number
  type: number
  name: string
  description: string
  value: Prisma.Decimal
  picture: string | null
}

/**
 * Model reward_users
 * 
 */
export type reward_users = {
  id: number
  user_uid: string | null
  reward_id: number | null
  amount: number
}

/**
 * Model activity_sentences
 * 
 */
export type activity_sentences = {
  id: number
  activity_id: number
  number_sentence: number
  complete_sentence: string
  marked_sentence: string
  hidden_words: string
  words_help: string
}

/**
 * Model activity_sentences_users
 * 
 */
export type activity_sentences_users = {
  id: number
  activity_id: number | null
  user_uid: string | null
  value: Prisma.Decimal | null
  processed: number | null
}

/**
 * Model activity_sentences_users_response
 * 
 */
export type activity_sentences_users_response = {
  id: number
  activity_id: number | null
  user_uid: string | null
  number_sentence: number
  sentences_informed: string
  comments: string | null
}

/**
 * Model notification
 * 
 */
export type notification = {
  id: number
  sender_uid: string
  recipient_uid: string
  notification_text: string
  notification_date: Date
  image_reference: string | null
  image_url: string | null
  image_type: string | null
  image_size_wh: string | null
}

/**
 * Model eduvida
 * 
 */
export type eduvida = {
  id: number
  author_uid: string
  title: string
  help_text: string
  help_type: string | null
  help_close: number
  created: Date
  image_reference: string | null
  image_url: string | null
  image_type: string | null
  image_size_wh: string | null
}

/**
 * Model eduvida_comment
 * 
 */
export type eduvida_comment = {
  id: number
  eduvida_id: number | null
  user_uid: string | null
  comment: string
  created: Date
  image_reference: string | null
  image_url: string | null
  image_type: string | null
  image_size_wh: string | null
}


/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.users.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  T extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof T ? T['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<T['log']> : never : never,
  GlobalReject = 'rejectOnNotFound' extends keyof T
    ? T['rejectOnNotFound']
    : false
      > {
      /**
       * @private
       */
      private fetcher;
      /**
       * @private
       */
      private readonly dmmf;
      /**
       * @private
       */
      private connectionPromise?;
      /**
       * @private
       */
      private disconnectionPromise?;
      /**
       * @private
       */
      private readonly engineConfig;
      /**
       * @private
       */
      private readonly measurePerformance;

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users
   * const users = await prisma.users.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<T, Prisma.PrismaClientOptions>);
  $on<V extends (U | 'beforeExit')>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : V extends 'beforeExit' ? () => Promise<void> : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): Promise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): Promise<void>;

  /**
   * Add a middleware
   */
  $use(cb: Prisma.Middleware): void

  /**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends PrismaPromise<any>[]>(arg: [...P]): Promise<UnwrapTuple<P>>;


      /**
   * `prisma.users`: Exposes CRUD operations for the **users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.users.findMany()
    * ```
    */
  get users(): Prisma.usersDelegate<GlobalReject>;

  /**
   * `prisma.menu_main_activity`: Exposes CRUD operations for the **menu_main_activity** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Menu_main_activities
    * const menu_main_activities = await prisma.menu_main_activity.findMany()
    * ```
    */
  get menu_main_activity(): Prisma.menu_main_activityDelegate<GlobalReject>;

  /**
   * `prisma.activity`: Exposes CRUD operations for the **activity** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Activities
    * const activities = await prisma.activity.findMany()
    * ```
    */
  get activity(): Prisma.activityDelegate<GlobalReject>;

  /**
   * `prisma.activity_question_response`: Exposes CRUD operations for the **activity_question_response** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Activity_question_responses
    * const activity_question_responses = await prisma.activity_question_response.findMany()
    * ```
    */
  get activity_question_response(): Prisma.activity_question_responseDelegate<GlobalReject>;

  /**
   * `prisma.activity_question_users`: Exposes CRUD operations for the **activity_question_users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Activity_question_users
    * const activity_question_users = await prisma.activity_question_users.findMany()
    * ```
    */
  get activity_question_users(): Prisma.activity_question_usersDelegate<GlobalReject>;

  /**
   * `prisma.activity_question_users_response`: Exposes CRUD operations for the **activity_question_users_response** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Activity_question_users_responses
    * const activity_question_users_responses = await prisma.activity_question_users_response.findMany()
    * ```
    */
  get activity_question_users_response(): Prisma.activity_question_users_responseDelegate<GlobalReject>;

  /**
   * `prisma.reward`: Exposes CRUD operations for the **reward** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Rewards
    * const rewards = await prisma.reward.findMany()
    * ```
    */
  get reward(): Prisma.rewardDelegate<GlobalReject>;

  /**
   * `prisma.reward_users`: Exposes CRUD operations for the **reward_users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Reward_users
    * const reward_users = await prisma.reward_users.findMany()
    * ```
    */
  get reward_users(): Prisma.reward_usersDelegate<GlobalReject>;

  /**
   * `prisma.activity_sentences`: Exposes CRUD operations for the **activity_sentences** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Activity_sentences
    * const activity_sentences = await prisma.activity_sentences.findMany()
    * ```
    */
  get activity_sentences(): Prisma.activity_sentencesDelegate<GlobalReject>;

  /**
   * `prisma.activity_sentences_users`: Exposes CRUD operations for the **activity_sentences_users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Activity_sentences_users
    * const activity_sentences_users = await prisma.activity_sentences_users.findMany()
    * ```
    */
  get activity_sentences_users(): Prisma.activity_sentences_usersDelegate<GlobalReject>;

  /**
   * `prisma.activity_sentences_users_response`: Exposes CRUD operations for the **activity_sentences_users_response** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Activity_sentences_users_responses
    * const activity_sentences_users_responses = await prisma.activity_sentences_users_response.findMany()
    * ```
    */
  get activity_sentences_users_response(): Prisma.activity_sentences_users_responseDelegate<GlobalReject>;

  /**
   * `prisma.notification`: Exposes CRUD operations for the **notification** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Notifications
    * const notifications = await prisma.notification.findMany()
    * ```
    */
  get notification(): Prisma.notificationDelegate<GlobalReject>;

  /**
   * `prisma.eduvida`: Exposes CRUD operations for the **eduvida** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Eduvidas
    * const eduvidas = await prisma.eduvida.findMany()
    * ```
    */
  get eduvida(): Prisma.eduvidaDelegate<GlobalReject>;

  /**
   * `prisma.eduvida_comment`: Exposes CRUD operations for the **eduvida_comment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Eduvida_comments
    * const eduvida_comments = await prisma.eduvida_comment.findMany()
    * ```
    */
  get eduvida_comment(): Prisma.eduvida_commentDelegate<GlobalReject>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  /**
   * Prisma Client JS version: 3.8.1
   * Query Engine version: 461d6a05159055555eb7dfb337c9fb271cbd4d7e
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Matches a JSON object.
   * Unlike `JsonObject`, this type allows undefined and read-only properties.
   */
  export type InputJsonObject = {readonly [Key in string]?: InputJsonValue | null}

  /**
   * Matches a JSON array.
   * Unlike `JsonArray`, readonly arrays are assignable to this type.
   */
  export interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {}

  /**
   * Matches any valid value that can be used as an input for operations like
   * create and update as the value of a JSON field. Unlike `JsonValue`, this
   * type allows read-only arrays and read-only object properties and disallows
   * `null` at the top level.
   *
   * `null` cannot be used as the value of a JSON field because its meaning
   * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
   * `Prisma.DbNull` to clear the JSON value and set the field to the database
   * NULL value instead.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
   */
  export type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: 'DbNull'

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: 'JsonNull'

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: 'AnyNull'

  type SelectAndInclude = {
    select: any
    include: any
  }
  type HasSelect = {
    select: any
  }
  type HasInclude = {
    include: any
  }
  type CheckSelect<T, S, U> = T extends SelectAndInclude
    ? 'Please either choose `select` or `include`'
    : T extends HasSelect
    ? U
    : T extends HasInclude
    ? U
    : S

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => Promise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = {
    [key in keyof T]: T[key] extends false | undefined | null ? never : key
  }[keyof T]

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> = (T | U) extends object ? (Without<T, U> & U) | (Without<U, T> & T) : T | U;


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Buffer
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Exact<A, W = unknown> = 
  W extends unknown ? A extends Narrowable ? Cast<A, W> : Cast<
  {[K in keyof A]: K extends keyof W ? Exact<A[K], W[K]> : never},
  {[K in keyof W]: K extends keyof A ? Exact<A[K], W[K]> : W[K]}>
  : never;

  type Narrowable = string | number | boolean | bigint;

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;

  export function validator<V>(): <S>(select: Exact<S, V>) => S;

  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but with an array
   */
  type PickArray<T, K extends Array<keyof T>> = Prisma__Pick<T, TupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T

  class PrismaClientFetcher {
    private readonly prisma;
    private readonly debug;
    private readonly hooks?;
    constructor(prisma: PrismaClient<any, any>, debug?: boolean, hooks?: Hooks | undefined);
    request<T>(document: any, dataPath?: string[], rootField?: string, typeName?: string, isList?: boolean, callsite?: string): Promise<T>;
    sanitizeMessage(message: string): string;
    protected unpack(document: any, data: any, path: string[], rootField?: string, isList?: boolean): any;
  }

  export const ModelName: {
    users: 'users',
    menu_main_activity: 'menu_main_activity',
    activity: 'activity',
    activity_question_response: 'activity_question_response',
    activity_question_users: 'activity_question_users',
    activity_question_users_response: 'activity_question_users_response',
    reward: 'reward',
    reward_users: 'reward_users',
    activity_sentences: 'activity_sentences',
    activity_sentences_users: 'activity_sentences_users',
    activity_sentences_users_response: 'activity_sentences_users_response',
    notification: 'notification',
    eduvida: 'eduvida',
    eduvida_comment: 'eduvida_comment'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  export type RejectOnNotFound = boolean | ((error: Error) => Error)
  export type RejectPerModel = { [P in ModelName]?: RejectOnNotFound }
  export type RejectPerOperation =  { [P in "findUnique" | "findFirst"]?: RejectPerModel | RejectOnNotFound } 
  type IsReject<T> = T extends true ? True : T extends (err: Error) => Error ? True : False
  export type HasReject<
    GlobalRejectSettings extends Prisma.PrismaClientOptions['rejectOnNotFound'],
    LocalRejectSettings,
    Action extends PrismaAction,
    Model extends ModelName
  > = LocalRejectSettings extends RejectOnNotFound
    ? IsReject<LocalRejectSettings>
    : GlobalRejectSettings extends RejectPerOperation
    ? Action extends keyof GlobalRejectSettings
      ? GlobalRejectSettings[Action] extends boolean
        ? IsReject<GlobalRejectSettings[Action]>
        : GlobalRejectSettings[Action] extends RejectPerModel
        ? Model extends keyof GlobalRejectSettings[Action]
          ? IsReject<GlobalRejectSettings[Action][Model]>
          : False
        : False
      : False
    : IsReject<GlobalRejectSettings>
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'

  export interface PrismaClientOptions {
    /**
     * Configure findUnique/findFirst to throw an error if the query returns null. 
     *  * @example
     * ```
     * // Reject on both findUnique/findFirst
     * rejectOnNotFound: true
     * // Reject only on findFirst with a custom error
     * rejectOnNotFound: { findFirst: (err) => new Error("Custom Error")}
     * // Reject on user.findUnique with a custom error
     * rejectOnNotFound: { findUnique: {User: (err) => new Error("User not found")}}
     * ```
     */
    rejectOnNotFound?: RejectOnNotFound | RejectPerOperation
    /**
     * Overwrites the datasource url from your prisma.schema file
     */
    datasources?: Datasources

    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat

    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: Array<LogLevel | LogDefinition>
  }

  export type Hooks = {
    beforeRequest?: (options: { query: string, path: string[], rootField?: string, typeName?: string, document: any }) => any
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findMany'
    | 'findFirst'
    | 'create'
    | 'createMany'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'

  /**
   * These options are being passed in to the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => Promise<T>,
  ) => Promise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined; 
  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UsersCountOutputType
   */


  export type UsersCountOutputType = {
    activity: number
    activity_question_users: number
    activity_question_users_response: number
    activity_sentences_users: number
    activity_sentences_users_response: number
    eduvida: number
    eduvida_comment: number
    notification: number
    reward_users: number
  }

  export type UsersCountOutputTypeSelect = {
    activity?: boolean
    activity_question_users?: boolean
    activity_question_users_response?: boolean
    activity_sentences_users?: boolean
    activity_sentences_users_response?: boolean
    eduvida?: boolean
    eduvida_comment?: boolean
    notification?: boolean
    reward_users?: boolean
  }

  export type UsersCountOutputTypeGetPayload<
    S extends boolean | null | undefined | UsersCountOutputTypeArgs,
    U = keyof S
      > = S extends true
        ? UsersCountOutputType
    : S extends undefined
    ? never
    : S extends UsersCountOutputTypeArgs
    ?'include' extends U
    ? UsersCountOutputType 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof UsersCountOutputType ?UsersCountOutputType [P]
  : 
     never
  } 
    : UsersCountOutputType
  : UsersCountOutputType




  // Custom InputTypes

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the UsersCountOutputType
     * 
    **/
    select?: UsersCountOutputTypeSelect | null
  }



  /**
   * Count Type ActivityCountOutputType
   */


  export type ActivityCountOutputType = {
    activity_question_response: number
    activity_question_users: number
    activity_question_users_response: number
    activity_sentences_users: number
    activity_sentences_users_response: number
  }

  export type ActivityCountOutputTypeSelect = {
    activity_question_response?: boolean
    activity_question_users?: boolean
    activity_question_users_response?: boolean
    activity_sentences_users?: boolean
    activity_sentences_users_response?: boolean
  }

  export type ActivityCountOutputTypeGetPayload<
    S extends boolean | null | undefined | ActivityCountOutputTypeArgs,
    U = keyof S
      > = S extends true
        ? ActivityCountOutputType
    : S extends undefined
    ? never
    : S extends ActivityCountOutputTypeArgs
    ?'include' extends U
    ? ActivityCountOutputType 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof ActivityCountOutputType ?ActivityCountOutputType [P]
  : 
     never
  } 
    : ActivityCountOutputType
  : ActivityCountOutputType




  // Custom InputTypes

  /**
   * ActivityCountOutputType without action
   */
  export type ActivityCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the ActivityCountOutputType
     * 
    **/
    select?: ActivityCountOutputTypeSelect | null
  }



  /**
   * Count Type RewardCountOutputType
   */


  export type RewardCountOutputType = {
    reward_users: number
  }

  export type RewardCountOutputTypeSelect = {
    reward_users?: boolean
  }

  export type RewardCountOutputTypeGetPayload<
    S extends boolean | null | undefined | RewardCountOutputTypeArgs,
    U = keyof S
      > = S extends true
        ? RewardCountOutputType
    : S extends undefined
    ? never
    : S extends RewardCountOutputTypeArgs
    ?'include' extends U
    ? RewardCountOutputType 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof RewardCountOutputType ?RewardCountOutputType [P]
  : 
     never
  } 
    : RewardCountOutputType
  : RewardCountOutputType




  // Custom InputTypes

  /**
   * RewardCountOutputType without action
   */
  export type RewardCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the RewardCountOutputType
     * 
    **/
    select?: RewardCountOutputTypeSelect | null
  }



  /**
   * Count Type EduvidaCountOutputType
   */


  export type EduvidaCountOutputType = {
    eduvida_comment: number
  }

  export type EduvidaCountOutputTypeSelect = {
    eduvida_comment?: boolean
  }

  export type EduvidaCountOutputTypeGetPayload<
    S extends boolean | null | undefined | EduvidaCountOutputTypeArgs,
    U = keyof S
      > = S extends true
        ? EduvidaCountOutputType
    : S extends undefined
    ? never
    : S extends EduvidaCountOutputTypeArgs
    ?'include' extends U
    ? EduvidaCountOutputType 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof EduvidaCountOutputType ?EduvidaCountOutputType [P]
  : 
     never
  } 
    : EduvidaCountOutputType
  : EduvidaCountOutputType




  // Custom InputTypes

  /**
   * EduvidaCountOutputType without action
   */
  export type EduvidaCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the EduvidaCountOutputType
     * 
    **/
    select?: EduvidaCountOutputTypeSelect | null
  }



  /**
   * Models
   */

  /**
   * Model users
   */


  export type AggregateUsers = {
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  export type UsersAvgAggregateOutputType = {
    id: number | null
    score: Decimal | null
  }

  export type UsersSumAggregateOutputType = {
    id: number | null
    score: Decimal | null
  }

  export type UsersMinAggregateOutputType = {
    id: number | null
    firebase_uid: string | null
    email: string | null
    name: string | null
    last_name: string | null
    score: Decimal | null
    image_reference: string | null
    image_url: string | null
    image_type: string | null
    image_size_wh: string | null
  }

  export type UsersMaxAggregateOutputType = {
    id: number | null
    firebase_uid: string | null
    email: string | null
    name: string | null
    last_name: string | null
    score: Decimal | null
    image_reference: string | null
    image_url: string | null
    image_type: string | null
    image_size_wh: string | null
  }

  export type UsersCountAggregateOutputType = {
    id: number
    firebase_uid: number
    email: number
    name: number
    last_name: number
    score: number
    image_reference: number
    image_url: number
    image_type: number
    image_size_wh: number
    _all: number
  }


  export type UsersAvgAggregateInputType = {
    id?: true
    score?: true
  }

  export type UsersSumAggregateInputType = {
    id?: true
    score?: true
  }

  export type UsersMinAggregateInputType = {
    id?: true
    firebase_uid?: true
    email?: true
    name?: true
    last_name?: true
    score?: true
    image_reference?: true
    image_url?: true
    image_type?: true
    image_size_wh?: true
  }

  export type UsersMaxAggregateInputType = {
    id?: true
    firebase_uid?: true
    email?: true
    name?: true
    last_name?: true
    score?: true
    image_reference?: true
    image_url?: true
    image_type?: true
    image_size_wh?: true
  }

  export type UsersCountAggregateInputType = {
    id?: true
    firebase_uid?: true
    email?: true
    name?: true
    last_name?: true
    score?: true
    image_reference?: true
    image_url?: true
    image_type?: true
    image_size_wh?: true
    _all?: true
  }

  export type UsersAggregateArgs = {
    /**
     * Filter which users to aggregate.
     * 
    **/
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     * 
    **/
    orderBy?: Enumerable<usersOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned users
    **/
    _count?: true | UsersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsersMaxAggregateInputType
  }

  export type GetUsersAggregateType<T extends UsersAggregateArgs> = {
        [P in keyof T & keyof AggregateUsers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsers[P]>
      : GetScalarType<T[P], AggregateUsers[P]>
  }




  export type UsersGroupByArgs = {
    where?: usersWhereInput
    orderBy?: Enumerable<usersOrderByWithAggregationInput>
    by: Array<UsersScalarFieldEnum>
    having?: usersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsersCountAggregateInputType | true
    _avg?: UsersAvgAggregateInputType
    _sum?: UsersSumAggregateInputType
    _min?: UsersMinAggregateInputType
    _max?: UsersMaxAggregateInputType
  }


  export type UsersGroupByOutputType = {
    id: number
    firebase_uid: string
    email: string | null
    name: string | null
    last_name: string | null
    score: Decimal | null
    image_reference: string | null
    image_url: string | null
    image_type: string | null
    image_size_wh: string | null
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  type GetUsersGroupByPayload<T extends UsersGroupByArgs> = Promise<
    Array<
      PickArray<UsersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsersGroupByOutputType[P]>
            : GetScalarType<T[P], UsersGroupByOutputType[P]>
        }
      >
    >


  export type usersSelect = {
    id?: boolean
    firebase_uid?: boolean
    email?: boolean
    name?: boolean
    last_name?: boolean
    score?: boolean
    image_reference?: boolean
    image_url?: boolean
    image_type?: boolean
    image_size_wh?: boolean
    activity?: boolean | activityFindManyArgs
    activity_question_users?: boolean | activity_question_usersFindManyArgs
    activity_question_users_response?: boolean | activity_question_users_responseFindManyArgs
    activity_sentences_users?: boolean | activity_sentences_usersFindManyArgs
    activity_sentences_users_response?: boolean | activity_sentences_users_responseFindManyArgs
    eduvida?: boolean | eduvidaFindManyArgs
    eduvida_comment?: boolean | eduvida_commentFindManyArgs
    notification?: boolean | notificationFindManyArgs
    reward_users?: boolean | reward_usersFindManyArgs
    _count?: boolean | UsersCountOutputTypeArgs
  }

  export type usersInclude = {
    activity?: boolean | activityFindManyArgs
    activity_question_users?: boolean | activity_question_usersFindManyArgs
    activity_question_users_response?: boolean | activity_question_users_responseFindManyArgs
    activity_sentences_users?: boolean | activity_sentences_usersFindManyArgs
    activity_sentences_users_response?: boolean | activity_sentences_users_responseFindManyArgs
    eduvida?: boolean | eduvidaFindManyArgs
    eduvida_comment?: boolean | eduvida_commentFindManyArgs
    notification?: boolean | notificationFindManyArgs
    reward_users?: boolean | reward_usersFindManyArgs
    _count?: boolean | UsersCountOutputTypeArgs
  }

  export type usersGetPayload<
    S extends boolean | null | undefined | usersArgs,
    U = keyof S
      > = S extends true
        ? users
    : S extends undefined
    ? never
    : S extends usersArgs | usersFindManyArgs
    ?'include' extends U
    ? users  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'activity'
        ? Array < activityGetPayload<S['include'][P]>>  :
        P extends 'activity_question_users'
        ? Array < activity_question_usersGetPayload<S['include'][P]>>  :
        P extends 'activity_question_users_response'
        ? Array < activity_question_users_responseGetPayload<S['include'][P]>>  :
        P extends 'activity_sentences_users'
        ? Array < activity_sentences_usersGetPayload<S['include'][P]>>  :
        P extends 'activity_sentences_users_response'
        ? Array < activity_sentences_users_responseGetPayload<S['include'][P]>>  :
        P extends 'eduvida'
        ? Array < eduvidaGetPayload<S['include'][P]>>  :
        P extends 'eduvida_comment'
        ? Array < eduvida_commentGetPayload<S['include'][P]>>  :
        P extends 'notification'
        ? Array < notificationGetPayload<S['include'][P]>>  :
        P extends 'reward_users'
        ? Array < reward_usersGetPayload<S['include'][P]>>  :
        P extends '_count'
        ? UsersCountOutputTypeGetPayload<S['include'][P]> : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof users ?users [P]
  : 
          P extends 'activity'
        ? Array < activityGetPayload<S['select'][P]>>  :
        P extends 'activity_question_users'
        ? Array < activity_question_usersGetPayload<S['select'][P]>>  :
        P extends 'activity_question_users_response'
        ? Array < activity_question_users_responseGetPayload<S['select'][P]>>  :
        P extends 'activity_sentences_users'
        ? Array < activity_sentences_usersGetPayload<S['select'][P]>>  :
        P extends 'activity_sentences_users_response'
        ? Array < activity_sentences_users_responseGetPayload<S['select'][P]>>  :
        P extends 'eduvida'
        ? Array < eduvidaGetPayload<S['select'][P]>>  :
        P extends 'eduvida_comment'
        ? Array < eduvida_commentGetPayload<S['select'][P]>>  :
        P extends 'notification'
        ? Array < notificationGetPayload<S['select'][P]>>  :
        P extends 'reward_users'
        ? Array < reward_usersGetPayload<S['select'][P]>>  :
        P extends '_count'
        ? UsersCountOutputTypeGetPayload<S['select'][P]> : never
  } 
    : users
  : users


  type usersCountArgs = Merge<
    Omit<usersFindManyArgs, 'select' | 'include'> & {
      select?: UsersCountAggregateInputType | true
    }
  >

  export interface usersDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Users that matches the filter.
     * @param {usersFindUniqueArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends usersFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, usersFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'users'> extends True ? CheckSelect<T, Prisma__usersClient<users>, Prisma__usersClient<usersGetPayload<T>>> : CheckSelect<T, Prisma__usersClient<users | null >, Prisma__usersClient<usersGetPayload<T> | null >>

    /**
     * Find the first Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends usersFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, usersFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'users'> extends True ? CheckSelect<T, Prisma__usersClient<users>, Prisma__usersClient<usersGetPayload<T>>> : CheckSelect<T, Prisma__usersClient<users | null >, Prisma__usersClient<usersGetPayload<T> | null >>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.users.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.users.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const usersWithIdOnly = await prisma.users.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends usersFindManyArgs>(
      args?: SelectSubset<T, usersFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<users>>, PrismaPromise<Array<usersGetPayload<T>>>>

    /**
     * Create a Users.
     * @param {usersCreateArgs} args - Arguments to create a Users.
     * @example
     * // Create one Users
     * const Users = await prisma.users.create({
     *   data: {
     *     // ... data to create a Users
     *   }
     * })
     * 
    **/
    create<T extends usersCreateArgs>(
      args: SelectSubset<T, usersCreateArgs>
    ): CheckSelect<T, Prisma__usersClient<users>, Prisma__usersClient<usersGetPayload<T>>>

    /**
     * Create many Users.
     *     @param {usersCreateManyArgs} args - Arguments to create many Users.
     *     @example
     *     // Create many Users
     *     const users = await prisma.users.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends usersCreateManyArgs>(
      args?: SelectSubset<T, usersCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Users.
     * @param {usersDeleteArgs} args - Arguments to delete one Users.
     * @example
     * // Delete one Users
     * const Users = await prisma.users.delete({
     *   where: {
     *     // ... filter to delete one Users
     *   }
     * })
     * 
    **/
    delete<T extends usersDeleteArgs>(
      args: SelectSubset<T, usersDeleteArgs>
    ): CheckSelect<T, Prisma__usersClient<users>, Prisma__usersClient<usersGetPayload<T>>>

    /**
     * Update one Users.
     * @param {usersUpdateArgs} args - Arguments to update one Users.
     * @example
     * // Update one Users
     * const users = await prisma.users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends usersUpdateArgs>(
      args: SelectSubset<T, usersUpdateArgs>
    ): CheckSelect<T, Prisma__usersClient<users>, Prisma__usersClient<usersGetPayload<T>>>

    /**
     * Delete zero or more Users.
     * @param {usersDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends usersDeleteManyArgs>(
      args?: SelectSubset<T, usersDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends usersUpdateManyArgs>(
      args: SelectSubset<T, usersUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Users.
     * @param {usersUpsertArgs} args - Arguments to update or create a Users.
     * @example
     * // Update or create a Users
     * const users = await prisma.users.upsert({
     *   create: {
     *     // ... data to create a Users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Users we want to update
     *   }
     * })
    **/
    upsert<T extends usersUpsertArgs>(
      args: SelectSubset<T, usersUpsertArgs>
    ): CheckSelect<T, Prisma__usersClient<users>, Prisma__usersClient<usersGetPayload<T>>>

    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.users.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends usersCountArgs>(
      args?: Subset<T, usersCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsersAggregateArgs>(args: Subset<T, UsersAggregateArgs>): PrismaPromise<GetUsersAggregateType<T>>

    /**
     * Group by Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UsersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UsersGroupByArgs['orderBy'] }
        : { orderBy?: UsersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UsersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsersGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__usersClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    activity<T extends activityFindManyArgs = {}>(args?: Subset<T, activityFindManyArgs>): CheckSelect<T, PrismaPromise<Array<activity>>, PrismaPromise<Array<activityGetPayload<T>>>>;

    activity_question_users<T extends activity_question_usersFindManyArgs = {}>(args?: Subset<T, activity_question_usersFindManyArgs>): CheckSelect<T, PrismaPromise<Array<activity_question_users>>, PrismaPromise<Array<activity_question_usersGetPayload<T>>>>;

    activity_question_users_response<T extends activity_question_users_responseFindManyArgs = {}>(args?: Subset<T, activity_question_users_responseFindManyArgs>): CheckSelect<T, PrismaPromise<Array<activity_question_users_response>>, PrismaPromise<Array<activity_question_users_responseGetPayload<T>>>>;

    activity_sentences_users<T extends activity_sentences_usersFindManyArgs = {}>(args?: Subset<T, activity_sentences_usersFindManyArgs>): CheckSelect<T, PrismaPromise<Array<activity_sentences_users>>, PrismaPromise<Array<activity_sentences_usersGetPayload<T>>>>;

    activity_sentences_users_response<T extends activity_sentences_users_responseFindManyArgs = {}>(args?: Subset<T, activity_sentences_users_responseFindManyArgs>): CheckSelect<T, PrismaPromise<Array<activity_sentences_users_response>>, PrismaPromise<Array<activity_sentences_users_responseGetPayload<T>>>>;

    eduvida<T extends eduvidaFindManyArgs = {}>(args?: Subset<T, eduvidaFindManyArgs>): CheckSelect<T, PrismaPromise<Array<eduvida>>, PrismaPromise<Array<eduvidaGetPayload<T>>>>;

    eduvida_comment<T extends eduvida_commentFindManyArgs = {}>(args?: Subset<T, eduvida_commentFindManyArgs>): CheckSelect<T, PrismaPromise<Array<eduvida_comment>>, PrismaPromise<Array<eduvida_commentGetPayload<T>>>>;

    notification<T extends notificationFindManyArgs = {}>(args?: Subset<T, notificationFindManyArgs>): CheckSelect<T, PrismaPromise<Array<notification>>, PrismaPromise<Array<notificationGetPayload<T>>>>;

    reward_users<T extends reward_usersFindManyArgs = {}>(args?: Subset<T, reward_usersFindManyArgs>): CheckSelect<T, PrismaPromise<Array<reward_users>>, PrismaPromise<Array<reward_usersGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * users findUnique
   */
  export type usersFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the users
     * 
    **/
    select?: usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: usersInclude | null
    /**
     * Throw an Error if a users can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which users to fetch.
     * 
    **/
    where: usersWhereUniqueInput
  }


  /**
   * users findFirst
   */
  export type usersFindFirstArgs = {
    /**
     * Select specific fields to fetch from the users
     * 
    **/
    select?: usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: usersInclude | null
    /**
     * Throw an Error if a users can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which users to fetch.
     * 
    **/
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     * 
    **/
    orderBy?: Enumerable<usersOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     * 
    **/
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     * 
    **/
    distinct?: Enumerable<UsersScalarFieldEnum>
  }


  /**
   * users findMany
   */
  export type usersFindManyArgs = {
    /**
     * Select specific fields to fetch from the users
     * 
    **/
    select?: usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: usersInclude | null
    /**
     * Filter, which users to fetch.
     * 
    **/
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     * 
    **/
    orderBy?: Enumerable<usersOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing users.
     * 
    **/
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     * 
    **/
    skip?: number
    distinct?: Enumerable<UsersScalarFieldEnum>
  }


  /**
   * users create
   */
  export type usersCreateArgs = {
    /**
     * Select specific fields to fetch from the users
     * 
    **/
    select?: usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: usersInclude | null
    /**
     * The data needed to create a users.
     * 
    **/
    data: XOR<usersCreateInput, usersUncheckedCreateInput>
  }


  /**
   * users createMany
   */
  export type usersCreateManyArgs = {
    data: Enumerable<usersCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * users update
   */
  export type usersUpdateArgs = {
    /**
     * Select specific fields to fetch from the users
     * 
    **/
    select?: usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: usersInclude | null
    /**
     * The data needed to update a users.
     * 
    **/
    data: XOR<usersUpdateInput, usersUncheckedUpdateInput>
    /**
     * Choose, which users to update.
     * 
    **/
    where: usersWhereUniqueInput
  }


  /**
   * users updateMany
   */
  export type usersUpdateManyArgs = {
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyInput>
    where?: usersWhereInput
  }


  /**
   * users upsert
   */
  export type usersUpsertArgs = {
    /**
     * Select specific fields to fetch from the users
     * 
    **/
    select?: usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: usersInclude | null
    /**
     * The filter to search for the users to update in case it exists.
     * 
    **/
    where: usersWhereUniqueInput
    /**
     * In case the users found by the `where` argument doesn't exist, create a new users with this data.
     * 
    **/
    create: XOR<usersCreateInput, usersUncheckedCreateInput>
    /**
     * In case the users was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<usersUpdateInput, usersUncheckedUpdateInput>
  }


  /**
   * users delete
   */
  export type usersDeleteArgs = {
    /**
     * Select specific fields to fetch from the users
     * 
    **/
    select?: usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: usersInclude | null
    /**
     * Filter which users to delete.
     * 
    **/
    where: usersWhereUniqueInput
  }


  /**
   * users deleteMany
   */
  export type usersDeleteManyArgs = {
    where?: usersWhereInput
  }


  /**
   * users without action
   */
  export type usersArgs = {
    /**
     * Select specific fields to fetch from the users
     * 
    **/
    select?: usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: usersInclude | null
  }



  /**
   * Model menu_main_activity
   */


  export type AggregateMenu_main_activity = {
    _count: Menu_main_activityCountAggregateOutputType | null
    _avg: Menu_main_activityAvgAggregateOutputType | null
    _sum: Menu_main_activitySumAggregateOutputType | null
    _min: Menu_main_activityMinAggregateOutputType | null
    _max: Menu_main_activityMaxAggregateOutputType | null
  }

  export type Menu_main_activityAvgAggregateOutputType = {
    id: number | null
  }

  export type Menu_main_activitySumAggregateOutputType = {
    id: number | null
  }

  export type Menu_main_activityMinAggregateOutputType = {
    id: number | null
    title: string | null
    name_icon: string | null
    color_icon: string | null
    color_title: string | null
    color_background: string | null
  }

  export type Menu_main_activityMaxAggregateOutputType = {
    id: number | null
    title: string | null
    name_icon: string | null
    color_icon: string | null
    color_title: string | null
    color_background: string | null
  }

  export type Menu_main_activityCountAggregateOutputType = {
    id: number
    title: number
    name_icon: number
    color_icon: number
    color_title: number
    color_background: number
    _all: number
  }


  export type Menu_main_activityAvgAggregateInputType = {
    id?: true
  }

  export type Menu_main_activitySumAggregateInputType = {
    id?: true
  }

  export type Menu_main_activityMinAggregateInputType = {
    id?: true
    title?: true
    name_icon?: true
    color_icon?: true
    color_title?: true
    color_background?: true
  }

  export type Menu_main_activityMaxAggregateInputType = {
    id?: true
    title?: true
    name_icon?: true
    color_icon?: true
    color_title?: true
    color_background?: true
  }

  export type Menu_main_activityCountAggregateInputType = {
    id?: true
    title?: true
    name_icon?: true
    color_icon?: true
    color_title?: true
    color_background?: true
    _all?: true
  }

  export type Menu_main_activityAggregateArgs = {
    /**
     * Filter which menu_main_activity to aggregate.
     * 
    **/
    where?: menu_main_activityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of menu_main_activities to fetch.
     * 
    **/
    orderBy?: Enumerable<menu_main_activityOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: menu_main_activityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` menu_main_activities from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` menu_main_activities.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned menu_main_activities
    **/
    _count?: true | Menu_main_activityCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Menu_main_activityAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Menu_main_activitySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Menu_main_activityMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Menu_main_activityMaxAggregateInputType
  }

  export type GetMenu_main_activityAggregateType<T extends Menu_main_activityAggregateArgs> = {
        [P in keyof T & keyof AggregateMenu_main_activity]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMenu_main_activity[P]>
      : GetScalarType<T[P], AggregateMenu_main_activity[P]>
  }




  export type Menu_main_activityGroupByArgs = {
    where?: menu_main_activityWhereInput
    orderBy?: Enumerable<menu_main_activityOrderByWithAggregationInput>
    by: Array<Menu_main_activityScalarFieldEnum>
    having?: menu_main_activityScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Menu_main_activityCountAggregateInputType | true
    _avg?: Menu_main_activityAvgAggregateInputType
    _sum?: Menu_main_activitySumAggregateInputType
    _min?: Menu_main_activityMinAggregateInputType
    _max?: Menu_main_activityMaxAggregateInputType
  }


  export type Menu_main_activityGroupByOutputType = {
    id: number
    title: string
    name_icon: string | null
    color_icon: string | null
    color_title: string | null
    color_background: string | null
    _count: Menu_main_activityCountAggregateOutputType | null
    _avg: Menu_main_activityAvgAggregateOutputType | null
    _sum: Menu_main_activitySumAggregateOutputType | null
    _min: Menu_main_activityMinAggregateOutputType | null
    _max: Menu_main_activityMaxAggregateOutputType | null
  }

  type GetMenu_main_activityGroupByPayload<T extends Menu_main_activityGroupByArgs> = Promise<
    Array<
      PickArray<Menu_main_activityGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Menu_main_activityGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Menu_main_activityGroupByOutputType[P]>
            : GetScalarType<T[P], Menu_main_activityGroupByOutputType[P]>
        }
      >
    >


  export type menu_main_activitySelect = {
    id?: boolean
    title?: boolean
    name_icon?: boolean
    color_icon?: boolean
    color_title?: boolean
    color_background?: boolean
  }

  export type menu_main_activityGetPayload<
    S extends boolean | null | undefined | menu_main_activityArgs,
    U = keyof S
      > = S extends true
        ? menu_main_activity
    : S extends undefined
    ? never
    : S extends menu_main_activityArgs | menu_main_activityFindManyArgs
    ?'include' extends U
    ? menu_main_activity 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof menu_main_activity ?menu_main_activity [P]
  : 
     never
  } 
    : menu_main_activity
  : menu_main_activity


  type menu_main_activityCountArgs = Merge<
    Omit<menu_main_activityFindManyArgs, 'select' | 'include'> & {
      select?: Menu_main_activityCountAggregateInputType | true
    }
  >

  export interface menu_main_activityDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Menu_main_activity that matches the filter.
     * @param {menu_main_activityFindUniqueArgs} args - Arguments to find a Menu_main_activity
     * @example
     * // Get one Menu_main_activity
     * const menu_main_activity = await prisma.menu_main_activity.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends menu_main_activityFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, menu_main_activityFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'menu_main_activity'> extends True ? CheckSelect<T, Prisma__menu_main_activityClient<menu_main_activity>, Prisma__menu_main_activityClient<menu_main_activityGetPayload<T>>> : CheckSelect<T, Prisma__menu_main_activityClient<menu_main_activity | null >, Prisma__menu_main_activityClient<menu_main_activityGetPayload<T> | null >>

    /**
     * Find the first Menu_main_activity that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {menu_main_activityFindFirstArgs} args - Arguments to find a Menu_main_activity
     * @example
     * // Get one Menu_main_activity
     * const menu_main_activity = await prisma.menu_main_activity.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends menu_main_activityFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, menu_main_activityFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'menu_main_activity'> extends True ? CheckSelect<T, Prisma__menu_main_activityClient<menu_main_activity>, Prisma__menu_main_activityClient<menu_main_activityGetPayload<T>>> : CheckSelect<T, Prisma__menu_main_activityClient<menu_main_activity | null >, Prisma__menu_main_activityClient<menu_main_activityGetPayload<T> | null >>

    /**
     * Find zero or more Menu_main_activities that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {menu_main_activityFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Menu_main_activities
     * const menu_main_activities = await prisma.menu_main_activity.findMany()
     * 
     * // Get first 10 Menu_main_activities
     * const menu_main_activities = await prisma.menu_main_activity.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const menu_main_activityWithIdOnly = await prisma.menu_main_activity.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends menu_main_activityFindManyArgs>(
      args?: SelectSubset<T, menu_main_activityFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<menu_main_activity>>, PrismaPromise<Array<menu_main_activityGetPayload<T>>>>

    /**
     * Create a Menu_main_activity.
     * @param {menu_main_activityCreateArgs} args - Arguments to create a Menu_main_activity.
     * @example
     * // Create one Menu_main_activity
     * const Menu_main_activity = await prisma.menu_main_activity.create({
     *   data: {
     *     // ... data to create a Menu_main_activity
     *   }
     * })
     * 
    **/
    create<T extends menu_main_activityCreateArgs>(
      args: SelectSubset<T, menu_main_activityCreateArgs>
    ): CheckSelect<T, Prisma__menu_main_activityClient<menu_main_activity>, Prisma__menu_main_activityClient<menu_main_activityGetPayload<T>>>

    /**
     * Create many Menu_main_activities.
     *     @param {menu_main_activityCreateManyArgs} args - Arguments to create many Menu_main_activities.
     *     @example
     *     // Create many Menu_main_activities
     *     const menu_main_activity = await prisma.menu_main_activity.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends menu_main_activityCreateManyArgs>(
      args?: SelectSubset<T, menu_main_activityCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Menu_main_activity.
     * @param {menu_main_activityDeleteArgs} args - Arguments to delete one Menu_main_activity.
     * @example
     * // Delete one Menu_main_activity
     * const Menu_main_activity = await prisma.menu_main_activity.delete({
     *   where: {
     *     // ... filter to delete one Menu_main_activity
     *   }
     * })
     * 
    **/
    delete<T extends menu_main_activityDeleteArgs>(
      args: SelectSubset<T, menu_main_activityDeleteArgs>
    ): CheckSelect<T, Prisma__menu_main_activityClient<menu_main_activity>, Prisma__menu_main_activityClient<menu_main_activityGetPayload<T>>>

    /**
     * Update one Menu_main_activity.
     * @param {menu_main_activityUpdateArgs} args - Arguments to update one Menu_main_activity.
     * @example
     * // Update one Menu_main_activity
     * const menu_main_activity = await prisma.menu_main_activity.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends menu_main_activityUpdateArgs>(
      args: SelectSubset<T, menu_main_activityUpdateArgs>
    ): CheckSelect<T, Prisma__menu_main_activityClient<menu_main_activity>, Prisma__menu_main_activityClient<menu_main_activityGetPayload<T>>>

    /**
     * Delete zero or more Menu_main_activities.
     * @param {menu_main_activityDeleteManyArgs} args - Arguments to filter Menu_main_activities to delete.
     * @example
     * // Delete a few Menu_main_activities
     * const { count } = await prisma.menu_main_activity.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends menu_main_activityDeleteManyArgs>(
      args?: SelectSubset<T, menu_main_activityDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Menu_main_activities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {menu_main_activityUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Menu_main_activities
     * const menu_main_activity = await prisma.menu_main_activity.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends menu_main_activityUpdateManyArgs>(
      args: SelectSubset<T, menu_main_activityUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Menu_main_activity.
     * @param {menu_main_activityUpsertArgs} args - Arguments to update or create a Menu_main_activity.
     * @example
     * // Update or create a Menu_main_activity
     * const menu_main_activity = await prisma.menu_main_activity.upsert({
     *   create: {
     *     // ... data to create a Menu_main_activity
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Menu_main_activity we want to update
     *   }
     * })
    **/
    upsert<T extends menu_main_activityUpsertArgs>(
      args: SelectSubset<T, menu_main_activityUpsertArgs>
    ): CheckSelect<T, Prisma__menu_main_activityClient<menu_main_activity>, Prisma__menu_main_activityClient<menu_main_activityGetPayload<T>>>

    /**
     * Count the number of Menu_main_activities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {menu_main_activityCountArgs} args - Arguments to filter Menu_main_activities to count.
     * @example
     * // Count the number of Menu_main_activities
     * const count = await prisma.menu_main_activity.count({
     *   where: {
     *     // ... the filter for the Menu_main_activities we want to count
     *   }
     * })
    **/
    count<T extends menu_main_activityCountArgs>(
      args?: Subset<T, menu_main_activityCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Menu_main_activityCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Menu_main_activity.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Menu_main_activityAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Menu_main_activityAggregateArgs>(args: Subset<T, Menu_main_activityAggregateArgs>): PrismaPromise<GetMenu_main_activityAggregateType<T>>

    /**
     * Group by Menu_main_activity.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Menu_main_activityGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Menu_main_activityGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Menu_main_activityGroupByArgs['orderBy'] }
        : { orderBy?: Menu_main_activityGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Menu_main_activityGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMenu_main_activityGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for menu_main_activity.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__menu_main_activityClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * menu_main_activity findUnique
   */
  export type menu_main_activityFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the menu_main_activity
     * 
    **/
    select?: menu_main_activitySelect | null
    /**
     * Throw an Error if a menu_main_activity can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which menu_main_activity to fetch.
     * 
    **/
    where: menu_main_activityWhereUniqueInput
  }


  /**
   * menu_main_activity findFirst
   */
  export type menu_main_activityFindFirstArgs = {
    /**
     * Select specific fields to fetch from the menu_main_activity
     * 
    **/
    select?: menu_main_activitySelect | null
    /**
     * Throw an Error if a menu_main_activity can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which menu_main_activity to fetch.
     * 
    **/
    where?: menu_main_activityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of menu_main_activities to fetch.
     * 
    **/
    orderBy?: Enumerable<menu_main_activityOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for menu_main_activities.
     * 
    **/
    cursor?: menu_main_activityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` menu_main_activities from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` menu_main_activities.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of menu_main_activities.
     * 
    **/
    distinct?: Enumerable<Menu_main_activityScalarFieldEnum>
  }


  /**
   * menu_main_activity findMany
   */
  export type menu_main_activityFindManyArgs = {
    /**
     * Select specific fields to fetch from the menu_main_activity
     * 
    **/
    select?: menu_main_activitySelect | null
    /**
     * Filter, which menu_main_activities to fetch.
     * 
    **/
    where?: menu_main_activityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of menu_main_activities to fetch.
     * 
    **/
    orderBy?: Enumerable<menu_main_activityOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing menu_main_activities.
     * 
    **/
    cursor?: menu_main_activityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` menu_main_activities from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` menu_main_activities.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Menu_main_activityScalarFieldEnum>
  }


  /**
   * menu_main_activity create
   */
  export type menu_main_activityCreateArgs = {
    /**
     * Select specific fields to fetch from the menu_main_activity
     * 
    **/
    select?: menu_main_activitySelect | null
    /**
     * The data needed to create a menu_main_activity.
     * 
    **/
    data: XOR<menu_main_activityCreateInput, menu_main_activityUncheckedCreateInput>
  }


  /**
   * menu_main_activity createMany
   */
  export type menu_main_activityCreateManyArgs = {
    data: Enumerable<menu_main_activityCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * menu_main_activity update
   */
  export type menu_main_activityUpdateArgs = {
    /**
     * Select specific fields to fetch from the menu_main_activity
     * 
    **/
    select?: menu_main_activitySelect | null
    /**
     * The data needed to update a menu_main_activity.
     * 
    **/
    data: XOR<menu_main_activityUpdateInput, menu_main_activityUncheckedUpdateInput>
    /**
     * Choose, which menu_main_activity to update.
     * 
    **/
    where: menu_main_activityWhereUniqueInput
  }


  /**
   * menu_main_activity updateMany
   */
  export type menu_main_activityUpdateManyArgs = {
    data: XOR<menu_main_activityUpdateManyMutationInput, menu_main_activityUncheckedUpdateManyInput>
    where?: menu_main_activityWhereInput
  }


  /**
   * menu_main_activity upsert
   */
  export type menu_main_activityUpsertArgs = {
    /**
     * Select specific fields to fetch from the menu_main_activity
     * 
    **/
    select?: menu_main_activitySelect | null
    /**
     * The filter to search for the menu_main_activity to update in case it exists.
     * 
    **/
    where: menu_main_activityWhereUniqueInput
    /**
     * In case the menu_main_activity found by the `where` argument doesn't exist, create a new menu_main_activity with this data.
     * 
    **/
    create: XOR<menu_main_activityCreateInput, menu_main_activityUncheckedCreateInput>
    /**
     * In case the menu_main_activity was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<menu_main_activityUpdateInput, menu_main_activityUncheckedUpdateInput>
  }


  /**
   * menu_main_activity delete
   */
  export type menu_main_activityDeleteArgs = {
    /**
     * Select specific fields to fetch from the menu_main_activity
     * 
    **/
    select?: menu_main_activitySelect | null
    /**
     * Filter which menu_main_activity to delete.
     * 
    **/
    where: menu_main_activityWhereUniqueInput
  }


  /**
   * menu_main_activity deleteMany
   */
  export type menu_main_activityDeleteManyArgs = {
    where?: menu_main_activityWhereInput
  }


  /**
   * menu_main_activity without action
   */
  export type menu_main_activityArgs = {
    /**
     * Select specific fields to fetch from the menu_main_activity
     * 
    **/
    select?: menu_main_activitySelect | null
  }



  /**
   * Model activity
   */


  export type AggregateActivity = {
    _count: ActivityCountAggregateOutputType | null
    _avg: ActivityAvgAggregateOutputType | null
    _sum: ActivitySumAggregateOutputType | null
    _min: ActivityMinAggregateOutputType | null
    _max: ActivityMaxAggregateOutputType | null
  }

  export type ActivityAvgAggregateOutputType = {
    id: number | null
    with_password: number | null
    excluded: number | null
  }

  export type ActivitySumAggregateOutputType = {
    id: number | null
    with_password: number | null
    excluded: number | null
  }

  export type ActivityMinAggregateOutputType = {
    id: number | null
    author_uid: string | null
    title: string | null
    with_password: number | null
    password: string | null
    type_activity: string | null
    excluded: number | null
    created: Date | null
    image_reference: string | null
    image_url: string | null
    image_type: string | null
    image_size_wh: string | null
    difficulty_level: string | null
  }

  export type ActivityMaxAggregateOutputType = {
    id: number | null
    author_uid: string | null
    title: string | null
    with_password: number | null
    password: string | null
    type_activity: string | null
    excluded: number | null
    created: Date | null
    image_reference: string | null
    image_url: string | null
    image_type: string | null
    image_size_wh: string | null
    difficulty_level: string | null
  }

  export type ActivityCountAggregateOutputType = {
    id: number
    author_uid: number
    title: number
    with_password: number
    password: number
    type_activity: number
    excluded: number
    created: number
    image_reference: number
    image_url: number
    image_type: number
    image_size_wh: number
    difficulty_level: number
    _all: number
  }


  export type ActivityAvgAggregateInputType = {
    id?: true
    with_password?: true
    excluded?: true
  }

  export type ActivitySumAggregateInputType = {
    id?: true
    with_password?: true
    excluded?: true
  }

  export type ActivityMinAggregateInputType = {
    id?: true
    author_uid?: true
    title?: true
    with_password?: true
    password?: true
    type_activity?: true
    excluded?: true
    created?: true
    image_reference?: true
    image_url?: true
    image_type?: true
    image_size_wh?: true
    difficulty_level?: true
  }

  export type ActivityMaxAggregateInputType = {
    id?: true
    author_uid?: true
    title?: true
    with_password?: true
    password?: true
    type_activity?: true
    excluded?: true
    created?: true
    image_reference?: true
    image_url?: true
    image_type?: true
    image_size_wh?: true
    difficulty_level?: true
  }

  export type ActivityCountAggregateInputType = {
    id?: true
    author_uid?: true
    title?: true
    with_password?: true
    password?: true
    type_activity?: true
    excluded?: true
    created?: true
    image_reference?: true
    image_url?: true
    image_type?: true
    image_size_wh?: true
    difficulty_level?: true
    _all?: true
  }

  export type ActivityAggregateArgs = {
    /**
     * Filter which activity to aggregate.
     * 
    **/
    where?: activityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of activities to fetch.
     * 
    **/
    orderBy?: Enumerable<activityOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: activityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` activities from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` activities.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned activities
    **/
    _count?: true | ActivityCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ActivityAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ActivitySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ActivityMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ActivityMaxAggregateInputType
  }

  export type GetActivityAggregateType<T extends ActivityAggregateArgs> = {
        [P in keyof T & keyof AggregateActivity]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateActivity[P]>
      : GetScalarType<T[P], AggregateActivity[P]>
  }




  export type ActivityGroupByArgs = {
    where?: activityWhereInput
    orderBy?: Enumerable<activityOrderByWithAggregationInput>
    by: Array<ActivityScalarFieldEnum>
    having?: activityScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ActivityCountAggregateInputType | true
    _avg?: ActivityAvgAggregateInputType
    _sum?: ActivitySumAggregateInputType
    _min?: ActivityMinAggregateInputType
    _max?: ActivityMaxAggregateInputType
  }


  export type ActivityGroupByOutputType = {
    id: number
    author_uid: string
    title: string
    with_password: number
    password: string | null
    type_activity: string | null
    excluded: number | null
    created: Date | null
    image_reference: string | null
    image_url: string | null
    image_type: string | null
    image_size_wh: string | null
    difficulty_level: string | null
    _count: ActivityCountAggregateOutputType | null
    _avg: ActivityAvgAggregateOutputType | null
    _sum: ActivitySumAggregateOutputType | null
    _min: ActivityMinAggregateOutputType | null
    _max: ActivityMaxAggregateOutputType | null
  }

  type GetActivityGroupByPayload<T extends ActivityGroupByArgs> = Promise<
    Array<
      PickArray<ActivityGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ActivityGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ActivityGroupByOutputType[P]>
            : GetScalarType<T[P], ActivityGroupByOutputType[P]>
        }
      >
    >


  export type activitySelect = {
    id?: boolean
    author_uid?: boolean
    title?: boolean
    with_password?: boolean
    password?: boolean
    type_activity?: boolean
    excluded?: boolean
    created?: boolean
    image_reference?: boolean
    image_url?: boolean
    image_type?: boolean
    image_size_wh?: boolean
    difficulty_level?: boolean
    users?: boolean | usersArgs
    activity_question_response?: boolean | activity_question_responseFindManyArgs
    activity_question_users?: boolean | activity_question_usersFindManyArgs
    activity_question_users_response?: boolean | activity_question_users_responseFindManyArgs
    activity_sentences_users?: boolean | activity_sentences_usersFindManyArgs
    activity_sentences_users_response?: boolean | activity_sentences_users_responseFindManyArgs
    _count?: boolean | ActivityCountOutputTypeArgs
  }

  export type activityInclude = {
    users?: boolean | usersArgs
    activity_question_response?: boolean | activity_question_responseFindManyArgs
    activity_question_users?: boolean | activity_question_usersFindManyArgs
    activity_question_users_response?: boolean | activity_question_users_responseFindManyArgs
    activity_sentences_users?: boolean | activity_sentences_usersFindManyArgs
    activity_sentences_users_response?: boolean | activity_sentences_users_responseFindManyArgs
    _count?: boolean | ActivityCountOutputTypeArgs
  }

  export type activityGetPayload<
    S extends boolean | null | undefined | activityArgs,
    U = keyof S
      > = S extends true
        ? activity
    : S extends undefined
    ? never
    : S extends activityArgs | activityFindManyArgs
    ?'include' extends U
    ? activity  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'users'
        ? usersGetPayload<S['include'][P]> :
        P extends 'activity_question_response'
        ? Array < activity_question_responseGetPayload<S['include'][P]>>  :
        P extends 'activity_question_users'
        ? Array < activity_question_usersGetPayload<S['include'][P]>>  :
        P extends 'activity_question_users_response'
        ? Array < activity_question_users_responseGetPayload<S['include'][P]>>  :
        P extends 'activity_sentences_users'
        ? Array < activity_sentences_usersGetPayload<S['include'][P]>>  :
        P extends 'activity_sentences_users_response'
        ? Array < activity_sentences_users_responseGetPayload<S['include'][P]>>  :
        P extends '_count'
        ? ActivityCountOutputTypeGetPayload<S['include'][P]> : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof activity ?activity [P]
  : 
          P extends 'users'
        ? usersGetPayload<S['select'][P]> :
        P extends 'activity_question_response'
        ? Array < activity_question_responseGetPayload<S['select'][P]>>  :
        P extends 'activity_question_users'
        ? Array < activity_question_usersGetPayload<S['select'][P]>>  :
        P extends 'activity_question_users_response'
        ? Array < activity_question_users_responseGetPayload<S['select'][P]>>  :
        P extends 'activity_sentences_users'
        ? Array < activity_sentences_usersGetPayload<S['select'][P]>>  :
        P extends 'activity_sentences_users_response'
        ? Array < activity_sentences_users_responseGetPayload<S['select'][P]>>  :
        P extends '_count'
        ? ActivityCountOutputTypeGetPayload<S['select'][P]> : never
  } 
    : activity
  : activity


  type activityCountArgs = Merge<
    Omit<activityFindManyArgs, 'select' | 'include'> & {
      select?: ActivityCountAggregateInputType | true
    }
  >

  export interface activityDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Activity that matches the filter.
     * @param {activityFindUniqueArgs} args - Arguments to find a Activity
     * @example
     * // Get one Activity
     * const activity = await prisma.activity.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends activityFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, activityFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'activity'> extends True ? CheckSelect<T, Prisma__activityClient<activity>, Prisma__activityClient<activityGetPayload<T>>> : CheckSelect<T, Prisma__activityClient<activity | null >, Prisma__activityClient<activityGetPayload<T> | null >>

    /**
     * Find the first Activity that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {activityFindFirstArgs} args - Arguments to find a Activity
     * @example
     * // Get one Activity
     * const activity = await prisma.activity.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends activityFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, activityFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'activity'> extends True ? CheckSelect<T, Prisma__activityClient<activity>, Prisma__activityClient<activityGetPayload<T>>> : CheckSelect<T, Prisma__activityClient<activity | null >, Prisma__activityClient<activityGetPayload<T> | null >>

    /**
     * Find zero or more Activities that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {activityFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Activities
     * const activities = await prisma.activity.findMany()
     * 
     * // Get first 10 Activities
     * const activities = await prisma.activity.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const activityWithIdOnly = await prisma.activity.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends activityFindManyArgs>(
      args?: SelectSubset<T, activityFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<activity>>, PrismaPromise<Array<activityGetPayload<T>>>>

    /**
     * Create a Activity.
     * @param {activityCreateArgs} args - Arguments to create a Activity.
     * @example
     * // Create one Activity
     * const Activity = await prisma.activity.create({
     *   data: {
     *     // ... data to create a Activity
     *   }
     * })
     * 
    **/
    create<T extends activityCreateArgs>(
      args: SelectSubset<T, activityCreateArgs>
    ): CheckSelect<T, Prisma__activityClient<activity>, Prisma__activityClient<activityGetPayload<T>>>

    /**
     * Create many Activities.
     *     @param {activityCreateManyArgs} args - Arguments to create many Activities.
     *     @example
     *     // Create many Activities
     *     const activity = await prisma.activity.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends activityCreateManyArgs>(
      args?: SelectSubset<T, activityCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Activity.
     * @param {activityDeleteArgs} args - Arguments to delete one Activity.
     * @example
     * // Delete one Activity
     * const Activity = await prisma.activity.delete({
     *   where: {
     *     // ... filter to delete one Activity
     *   }
     * })
     * 
    **/
    delete<T extends activityDeleteArgs>(
      args: SelectSubset<T, activityDeleteArgs>
    ): CheckSelect<T, Prisma__activityClient<activity>, Prisma__activityClient<activityGetPayload<T>>>

    /**
     * Update one Activity.
     * @param {activityUpdateArgs} args - Arguments to update one Activity.
     * @example
     * // Update one Activity
     * const activity = await prisma.activity.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends activityUpdateArgs>(
      args: SelectSubset<T, activityUpdateArgs>
    ): CheckSelect<T, Prisma__activityClient<activity>, Prisma__activityClient<activityGetPayload<T>>>

    /**
     * Delete zero or more Activities.
     * @param {activityDeleteManyArgs} args - Arguments to filter Activities to delete.
     * @example
     * // Delete a few Activities
     * const { count } = await prisma.activity.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends activityDeleteManyArgs>(
      args?: SelectSubset<T, activityDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Activities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {activityUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Activities
     * const activity = await prisma.activity.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends activityUpdateManyArgs>(
      args: SelectSubset<T, activityUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Activity.
     * @param {activityUpsertArgs} args - Arguments to update or create a Activity.
     * @example
     * // Update or create a Activity
     * const activity = await prisma.activity.upsert({
     *   create: {
     *     // ... data to create a Activity
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Activity we want to update
     *   }
     * })
    **/
    upsert<T extends activityUpsertArgs>(
      args: SelectSubset<T, activityUpsertArgs>
    ): CheckSelect<T, Prisma__activityClient<activity>, Prisma__activityClient<activityGetPayload<T>>>

    /**
     * Count the number of Activities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {activityCountArgs} args - Arguments to filter Activities to count.
     * @example
     * // Count the number of Activities
     * const count = await prisma.activity.count({
     *   where: {
     *     // ... the filter for the Activities we want to count
     *   }
     * })
    **/
    count<T extends activityCountArgs>(
      args?: Subset<T, activityCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ActivityCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Activity.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ActivityAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ActivityAggregateArgs>(args: Subset<T, ActivityAggregateArgs>): PrismaPromise<GetActivityAggregateType<T>>

    /**
     * Group by Activity.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ActivityGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ActivityGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ActivityGroupByArgs['orderBy'] }
        : { orderBy?: ActivityGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ActivityGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetActivityGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for activity.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__activityClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    users<T extends usersArgs = {}>(args?: Subset<T, usersArgs>): CheckSelect<T, Prisma__usersClient<users | null >, Prisma__usersClient<usersGetPayload<T> | null >>;

    activity_question_response<T extends activity_question_responseFindManyArgs = {}>(args?: Subset<T, activity_question_responseFindManyArgs>): CheckSelect<T, PrismaPromise<Array<activity_question_response>>, PrismaPromise<Array<activity_question_responseGetPayload<T>>>>;

    activity_question_users<T extends activity_question_usersFindManyArgs = {}>(args?: Subset<T, activity_question_usersFindManyArgs>): CheckSelect<T, PrismaPromise<Array<activity_question_users>>, PrismaPromise<Array<activity_question_usersGetPayload<T>>>>;

    activity_question_users_response<T extends activity_question_users_responseFindManyArgs = {}>(args?: Subset<T, activity_question_users_responseFindManyArgs>): CheckSelect<T, PrismaPromise<Array<activity_question_users_response>>, PrismaPromise<Array<activity_question_users_responseGetPayload<T>>>>;

    activity_sentences_users<T extends activity_sentences_usersFindManyArgs = {}>(args?: Subset<T, activity_sentences_usersFindManyArgs>): CheckSelect<T, PrismaPromise<Array<activity_sentences_users>>, PrismaPromise<Array<activity_sentences_usersGetPayload<T>>>>;

    activity_sentences_users_response<T extends activity_sentences_users_responseFindManyArgs = {}>(args?: Subset<T, activity_sentences_users_responseFindManyArgs>): CheckSelect<T, PrismaPromise<Array<activity_sentences_users_response>>, PrismaPromise<Array<activity_sentences_users_responseGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * activity findUnique
   */
  export type activityFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the activity
     * 
    **/
    select?: activitySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: activityInclude | null
    /**
     * Throw an Error if a activity can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which activity to fetch.
     * 
    **/
    where: activityWhereUniqueInput
  }


  /**
   * activity findFirst
   */
  export type activityFindFirstArgs = {
    /**
     * Select specific fields to fetch from the activity
     * 
    **/
    select?: activitySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: activityInclude | null
    /**
     * Throw an Error if a activity can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which activity to fetch.
     * 
    **/
    where?: activityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of activities to fetch.
     * 
    **/
    orderBy?: Enumerable<activityOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for activities.
     * 
    **/
    cursor?: activityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` activities from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` activities.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of activities.
     * 
    **/
    distinct?: Enumerable<ActivityScalarFieldEnum>
  }


  /**
   * activity findMany
   */
  export type activityFindManyArgs = {
    /**
     * Select specific fields to fetch from the activity
     * 
    **/
    select?: activitySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: activityInclude | null
    /**
     * Filter, which activities to fetch.
     * 
    **/
    where?: activityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of activities to fetch.
     * 
    **/
    orderBy?: Enumerable<activityOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing activities.
     * 
    **/
    cursor?: activityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` activities from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` activities.
     * 
    **/
    skip?: number
    distinct?: Enumerable<ActivityScalarFieldEnum>
  }


  /**
   * activity create
   */
  export type activityCreateArgs = {
    /**
     * Select specific fields to fetch from the activity
     * 
    **/
    select?: activitySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: activityInclude | null
    /**
     * The data needed to create a activity.
     * 
    **/
    data: XOR<activityCreateInput, activityUncheckedCreateInput>
  }


  /**
   * activity createMany
   */
  export type activityCreateManyArgs = {
    data: Enumerable<activityCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * activity update
   */
  export type activityUpdateArgs = {
    /**
     * Select specific fields to fetch from the activity
     * 
    **/
    select?: activitySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: activityInclude | null
    /**
     * The data needed to update a activity.
     * 
    **/
    data: XOR<activityUpdateInput, activityUncheckedUpdateInput>
    /**
     * Choose, which activity to update.
     * 
    **/
    where: activityWhereUniqueInput
  }


  /**
   * activity updateMany
   */
  export type activityUpdateManyArgs = {
    data: XOR<activityUpdateManyMutationInput, activityUncheckedUpdateManyInput>
    where?: activityWhereInput
  }


  /**
   * activity upsert
   */
  export type activityUpsertArgs = {
    /**
     * Select specific fields to fetch from the activity
     * 
    **/
    select?: activitySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: activityInclude | null
    /**
     * The filter to search for the activity to update in case it exists.
     * 
    **/
    where: activityWhereUniqueInput
    /**
     * In case the activity found by the `where` argument doesn't exist, create a new activity with this data.
     * 
    **/
    create: XOR<activityCreateInput, activityUncheckedCreateInput>
    /**
     * In case the activity was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<activityUpdateInput, activityUncheckedUpdateInput>
  }


  /**
   * activity delete
   */
  export type activityDeleteArgs = {
    /**
     * Select specific fields to fetch from the activity
     * 
    **/
    select?: activitySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: activityInclude | null
    /**
     * Filter which activity to delete.
     * 
    **/
    where: activityWhereUniqueInput
  }


  /**
   * activity deleteMany
   */
  export type activityDeleteManyArgs = {
    where?: activityWhereInput
  }


  /**
   * activity without action
   */
  export type activityArgs = {
    /**
     * Select specific fields to fetch from the activity
     * 
    **/
    select?: activitySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: activityInclude | null
  }



  /**
   * Model activity_question_response
   */


  export type AggregateActivity_question_response = {
    _count: Activity_question_responseCountAggregateOutputType | null
    _avg: Activity_question_responseAvgAggregateOutputType | null
    _sum: Activity_question_responseSumAggregateOutputType | null
    _min: Activity_question_responseMinAggregateOutputType | null
    _max: Activity_question_responseMaxAggregateOutputType | null
  }

  export type Activity_question_responseAvgAggregateOutputType = {
    id: number | null
    activity_id: number | null
    number_question: number | null
  }

  export type Activity_question_responseSumAggregateOutputType = {
    id: number | null
    activity_id: number | null
    number_question: number | null
  }

  export type Activity_question_responseMinAggregateOutputType = {
    id: number | null
    activity_id: number | null
    number_question: number | null
    answer_one: string | null
    answer_two: string | null
    answer_tree: string | null
    answer_four: string | null
    right_answer: string | null
    question: string | null
  }

  export type Activity_question_responseMaxAggregateOutputType = {
    id: number | null
    activity_id: number | null
    number_question: number | null
    answer_one: string | null
    answer_two: string | null
    answer_tree: string | null
    answer_four: string | null
    right_answer: string | null
    question: string | null
  }

  export type Activity_question_responseCountAggregateOutputType = {
    id: number
    activity_id: number
    number_question: number
    answer_one: number
    answer_two: number
    answer_tree: number
    answer_four: number
    right_answer: number
    question: number
    _all: number
  }


  export type Activity_question_responseAvgAggregateInputType = {
    id?: true
    activity_id?: true
    number_question?: true
  }

  export type Activity_question_responseSumAggregateInputType = {
    id?: true
    activity_id?: true
    number_question?: true
  }

  export type Activity_question_responseMinAggregateInputType = {
    id?: true
    activity_id?: true
    number_question?: true
    answer_one?: true
    answer_two?: true
    answer_tree?: true
    answer_four?: true
    right_answer?: true
    question?: true
  }

  export type Activity_question_responseMaxAggregateInputType = {
    id?: true
    activity_id?: true
    number_question?: true
    answer_one?: true
    answer_two?: true
    answer_tree?: true
    answer_four?: true
    right_answer?: true
    question?: true
  }

  export type Activity_question_responseCountAggregateInputType = {
    id?: true
    activity_id?: true
    number_question?: true
    answer_one?: true
    answer_two?: true
    answer_tree?: true
    answer_four?: true
    right_answer?: true
    question?: true
    _all?: true
  }

  export type Activity_question_responseAggregateArgs = {
    /**
     * Filter which activity_question_response to aggregate.
     * 
    **/
    where?: activity_question_responseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of activity_question_responses to fetch.
     * 
    **/
    orderBy?: Enumerable<activity_question_responseOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: activity_question_responseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` activity_question_responses from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` activity_question_responses.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned activity_question_responses
    **/
    _count?: true | Activity_question_responseCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Activity_question_responseAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Activity_question_responseSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Activity_question_responseMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Activity_question_responseMaxAggregateInputType
  }

  export type GetActivity_question_responseAggregateType<T extends Activity_question_responseAggregateArgs> = {
        [P in keyof T & keyof AggregateActivity_question_response]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateActivity_question_response[P]>
      : GetScalarType<T[P], AggregateActivity_question_response[P]>
  }




  export type Activity_question_responseGroupByArgs = {
    where?: activity_question_responseWhereInput
    orderBy?: Enumerable<activity_question_responseOrderByWithAggregationInput>
    by: Array<Activity_question_responseScalarFieldEnum>
    having?: activity_question_responseScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Activity_question_responseCountAggregateInputType | true
    _avg?: Activity_question_responseAvgAggregateInputType
    _sum?: Activity_question_responseSumAggregateInputType
    _min?: Activity_question_responseMinAggregateInputType
    _max?: Activity_question_responseMaxAggregateInputType
  }


  export type Activity_question_responseGroupByOutputType = {
    id: number
    activity_id: number | null
    number_question: number
    answer_one: string
    answer_two: string
    answer_tree: string
    answer_four: string
    right_answer: string
    question: string | null
    _count: Activity_question_responseCountAggregateOutputType | null
    _avg: Activity_question_responseAvgAggregateOutputType | null
    _sum: Activity_question_responseSumAggregateOutputType | null
    _min: Activity_question_responseMinAggregateOutputType | null
    _max: Activity_question_responseMaxAggregateOutputType | null
  }

  type GetActivity_question_responseGroupByPayload<T extends Activity_question_responseGroupByArgs> = Promise<
    Array<
      PickArray<Activity_question_responseGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Activity_question_responseGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Activity_question_responseGroupByOutputType[P]>
            : GetScalarType<T[P], Activity_question_responseGroupByOutputType[P]>
        }
      >
    >


  export type activity_question_responseSelect = {
    id?: boolean
    activity_id?: boolean
    number_question?: boolean
    answer_one?: boolean
    answer_two?: boolean
    answer_tree?: boolean
    answer_four?: boolean
    right_answer?: boolean
    question?: boolean
    activity?: boolean | activityArgs
  }

  export type activity_question_responseInclude = {
    activity?: boolean | activityArgs
  }

  export type activity_question_responseGetPayload<
    S extends boolean | null | undefined | activity_question_responseArgs,
    U = keyof S
      > = S extends true
        ? activity_question_response
    : S extends undefined
    ? never
    : S extends activity_question_responseArgs | activity_question_responseFindManyArgs
    ?'include' extends U
    ? activity_question_response  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'activity'
        ? activityGetPayload<S['include'][P]> | null : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof activity_question_response ?activity_question_response [P]
  : 
          P extends 'activity'
        ? activityGetPayload<S['select'][P]> | null : never
  } 
    : activity_question_response
  : activity_question_response


  type activity_question_responseCountArgs = Merge<
    Omit<activity_question_responseFindManyArgs, 'select' | 'include'> & {
      select?: Activity_question_responseCountAggregateInputType | true
    }
  >

  export interface activity_question_responseDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Activity_question_response that matches the filter.
     * @param {activity_question_responseFindUniqueArgs} args - Arguments to find a Activity_question_response
     * @example
     * // Get one Activity_question_response
     * const activity_question_response = await prisma.activity_question_response.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends activity_question_responseFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, activity_question_responseFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'activity_question_response'> extends True ? CheckSelect<T, Prisma__activity_question_responseClient<activity_question_response>, Prisma__activity_question_responseClient<activity_question_responseGetPayload<T>>> : CheckSelect<T, Prisma__activity_question_responseClient<activity_question_response | null >, Prisma__activity_question_responseClient<activity_question_responseGetPayload<T> | null >>

    /**
     * Find the first Activity_question_response that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {activity_question_responseFindFirstArgs} args - Arguments to find a Activity_question_response
     * @example
     * // Get one Activity_question_response
     * const activity_question_response = await prisma.activity_question_response.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends activity_question_responseFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, activity_question_responseFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'activity_question_response'> extends True ? CheckSelect<T, Prisma__activity_question_responseClient<activity_question_response>, Prisma__activity_question_responseClient<activity_question_responseGetPayload<T>>> : CheckSelect<T, Prisma__activity_question_responseClient<activity_question_response | null >, Prisma__activity_question_responseClient<activity_question_responseGetPayload<T> | null >>

    /**
     * Find zero or more Activity_question_responses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {activity_question_responseFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Activity_question_responses
     * const activity_question_responses = await prisma.activity_question_response.findMany()
     * 
     * // Get first 10 Activity_question_responses
     * const activity_question_responses = await prisma.activity_question_response.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const activity_question_responseWithIdOnly = await prisma.activity_question_response.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends activity_question_responseFindManyArgs>(
      args?: SelectSubset<T, activity_question_responseFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<activity_question_response>>, PrismaPromise<Array<activity_question_responseGetPayload<T>>>>

    /**
     * Create a Activity_question_response.
     * @param {activity_question_responseCreateArgs} args - Arguments to create a Activity_question_response.
     * @example
     * // Create one Activity_question_response
     * const Activity_question_response = await prisma.activity_question_response.create({
     *   data: {
     *     // ... data to create a Activity_question_response
     *   }
     * })
     * 
    **/
    create<T extends activity_question_responseCreateArgs>(
      args: SelectSubset<T, activity_question_responseCreateArgs>
    ): CheckSelect<T, Prisma__activity_question_responseClient<activity_question_response>, Prisma__activity_question_responseClient<activity_question_responseGetPayload<T>>>

    /**
     * Create many Activity_question_responses.
     *     @param {activity_question_responseCreateManyArgs} args - Arguments to create many Activity_question_responses.
     *     @example
     *     // Create many Activity_question_responses
     *     const activity_question_response = await prisma.activity_question_response.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends activity_question_responseCreateManyArgs>(
      args?: SelectSubset<T, activity_question_responseCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Activity_question_response.
     * @param {activity_question_responseDeleteArgs} args - Arguments to delete one Activity_question_response.
     * @example
     * // Delete one Activity_question_response
     * const Activity_question_response = await prisma.activity_question_response.delete({
     *   where: {
     *     // ... filter to delete one Activity_question_response
     *   }
     * })
     * 
    **/
    delete<T extends activity_question_responseDeleteArgs>(
      args: SelectSubset<T, activity_question_responseDeleteArgs>
    ): CheckSelect<T, Prisma__activity_question_responseClient<activity_question_response>, Prisma__activity_question_responseClient<activity_question_responseGetPayload<T>>>

    /**
     * Update one Activity_question_response.
     * @param {activity_question_responseUpdateArgs} args - Arguments to update one Activity_question_response.
     * @example
     * // Update one Activity_question_response
     * const activity_question_response = await prisma.activity_question_response.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends activity_question_responseUpdateArgs>(
      args: SelectSubset<T, activity_question_responseUpdateArgs>
    ): CheckSelect<T, Prisma__activity_question_responseClient<activity_question_response>, Prisma__activity_question_responseClient<activity_question_responseGetPayload<T>>>

    /**
     * Delete zero or more Activity_question_responses.
     * @param {activity_question_responseDeleteManyArgs} args - Arguments to filter Activity_question_responses to delete.
     * @example
     * // Delete a few Activity_question_responses
     * const { count } = await prisma.activity_question_response.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends activity_question_responseDeleteManyArgs>(
      args?: SelectSubset<T, activity_question_responseDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Activity_question_responses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {activity_question_responseUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Activity_question_responses
     * const activity_question_response = await prisma.activity_question_response.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends activity_question_responseUpdateManyArgs>(
      args: SelectSubset<T, activity_question_responseUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Activity_question_response.
     * @param {activity_question_responseUpsertArgs} args - Arguments to update or create a Activity_question_response.
     * @example
     * // Update or create a Activity_question_response
     * const activity_question_response = await prisma.activity_question_response.upsert({
     *   create: {
     *     // ... data to create a Activity_question_response
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Activity_question_response we want to update
     *   }
     * })
    **/
    upsert<T extends activity_question_responseUpsertArgs>(
      args: SelectSubset<T, activity_question_responseUpsertArgs>
    ): CheckSelect<T, Prisma__activity_question_responseClient<activity_question_response>, Prisma__activity_question_responseClient<activity_question_responseGetPayload<T>>>

    /**
     * Count the number of Activity_question_responses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {activity_question_responseCountArgs} args - Arguments to filter Activity_question_responses to count.
     * @example
     * // Count the number of Activity_question_responses
     * const count = await prisma.activity_question_response.count({
     *   where: {
     *     // ... the filter for the Activity_question_responses we want to count
     *   }
     * })
    **/
    count<T extends activity_question_responseCountArgs>(
      args?: Subset<T, activity_question_responseCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Activity_question_responseCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Activity_question_response.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Activity_question_responseAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Activity_question_responseAggregateArgs>(args: Subset<T, Activity_question_responseAggregateArgs>): PrismaPromise<GetActivity_question_responseAggregateType<T>>

    /**
     * Group by Activity_question_response.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Activity_question_responseGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Activity_question_responseGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Activity_question_responseGroupByArgs['orderBy'] }
        : { orderBy?: Activity_question_responseGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Activity_question_responseGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetActivity_question_responseGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for activity_question_response.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__activity_question_responseClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    activity<T extends activityArgs = {}>(args?: Subset<T, activityArgs>): CheckSelect<T, Prisma__activityClient<activity | null >, Prisma__activityClient<activityGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * activity_question_response findUnique
   */
  export type activity_question_responseFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the activity_question_response
     * 
    **/
    select?: activity_question_responseSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: activity_question_responseInclude | null
    /**
     * Throw an Error if a activity_question_response can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which activity_question_response to fetch.
     * 
    **/
    where: activity_question_responseWhereUniqueInput
  }


  /**
   * activity_question_response findFirst
   */
  export type activity_question_responseFindFirstArgs = {
    /**
     * Select specific fields to fetch from the activity_question_response
     * 
    **/
    select?: activity_question_responseSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: activity_question_responseInclude | null
    /**
     * Throw an Error if a activity_question_response can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which activity_question_response to fetch.
     * 
    **/
    where?: activity_question_responseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of activity_question_responses to fetch.
     * 
    **/
    orderBy?: Enumerable<activity_question_responseOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for activity_question_responses.
     * 
    **/
    cursor?: activity_question_responseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` activity_question_responses from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` activity_question_responses.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of activity_question_responses.
     * 
    **/
    distinct?: Enumerable<Activity_question_responseScalarFieldEnum>
  }


  /**
   * activity_question_response findMany
   */
  export type activity_question_responseFindManyArgs = {
    /**
     * Select specific fields to fetch from the activity_question_response
     * 
    **/
    select?: activity_question_responseSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: activity_question_responseInclude | null
    /**
     * Filter, which activity_question_responses to fetch.
     * 
    **/
    where?: activity_question_responseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of activity_question_responses to fetch.
     * 
    **/
    orderBy?: Enumerable<activity_question_responseOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing activity_question_responses.
     * 
    **/
    cursor?: activity_question_responseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` activity_question_responses from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` activity_question_responses.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Activity_question_responseScalarFieldEnum>
  }


  /**
   * activity_question_response create
   */
  export type activity_question_responseCreateArgs = {
    /**
     * Select specific fields to fetch from the activity_question_response
     * 
    **/
    select?: activity_question_responseSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: activity_question_responseInclude | null
    /**
     * The data needed to create a activity_question_response.
     * 
    **/
    data: XOR<activity_question_responseCreateInput, activity_question_responseUncheckedCreateInput>
  }


  /**
   * activity_question_response createMany
   */
  export type activity_question_responseCreateManyArgs = {
    data: Enumerable<activity_question_responseCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * activity_question_response update
   */
  export type activity_question_responseUpdateArgs = {
    /**
     * Select specific fields to fetch from the activity_question_response
     * 
    **/
    select?: activity_question_responseSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: activity_question_responseInclude | null
    /**
     * The data needed to update a activity_question_response.
     * 
    **/
    data: XOR<activity_question_responseUpdateInput, activity_question_responseUncheckedUpdateInput>
    /**
     * Choose, which activity_question_response to update.
     * 
    **/
    where: activity_question_responseWhereUniqueInput
  }


  /**
   * activity_question_response updateMany
   */
  export type activity_question_responseUpdateManyArgs = {
    data: XOR<activity_question_responseUpdateManyMutationInput, activity_question_responseUncheckedUpdateManyInput>
    where?: activity_question_responseWhereInput
  }


  /**
   * activity_question_response upsert
   */
  export type activity_question_responseUpsertArgs = {
    /**
     * Select specific fields to fetch from the activity_question_response
     * 
    **/
    select?: activity_question_responseSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: activity_question_responseInclude | null
    /**
     * The filter to search for the activity_question_response to update in case it exists.
     * 
    **/
    where: activity_question_responseWhereUniqueInput
    /**
     * In case the activity_question_response found by the `where` argument doesn't exist, create a new activity_question_response with this data.
     * 
    **/
    create: XOR<activity_question_responseCreateInput, activity_question_responseUncheckedCreateInput>
    /**
     * In case the activity_question_response was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<activity_question_responseUpdateInput, activity_question_responseUncheckedUpdateInput>
  }


  /**
   * activity_question_response delete
   */
  export type activity_question_responseDeleteArgs = {
    /**
     * Select specific fields to fetch from the activity_question_response
     * 
    **/
    select?: activity_question_responseSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: activity_question_responseInclude | null
    /**
     * Filter which activity_question_response to delete.
     * 
    **/
    where: activity_question_responseWhereUniqueInput
  }


  /**
   * activity_question_response deleteMany
   */
  export type activity_question_responseDeleteManyArgs = {
    where?: activity_question_responseWhereInput
  }


  /**
   * activity_question_response without action
   */
  export type activity_question_responseArgs = {
    /**
     * Select specific fields to fetch from the activity_question_response
     * 
    **/
    select?: activity_question_responseSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: activity_question_responseInclude | null
  }



  /**
   * Model activity_question_users
   */


  export type AggregateActivity_question_users = {
    _count: Activity_question_usersCountAggregateOutputType | null
    _avg: Activity_question_usersAvgAggregateOutputType | null
    _sum: Activity_question_usersSumAggregateOutputType | null
    _min: Activity_question_usersMinAggregateOutputType | null
    _max: Activity_question_usersMaxAggregateOutputType | null
  }

  export type Activity_question_usersAvgAggregateOutputType = {
    id: number | null
    activity_id: number | null
    value: Decimal | null
    processed: number | null
    display_to_user: number | null
    evaluated: number | null
  }

  export type Activity_question_usersSumAggregateOutputType = {
    id: number | null
    activity_id: number | null
    value: Decimal | null
    processed: number | null
    display_to_user: number | null
    evaluated: number | null
  }

  export type Activity_question_usersMinAggregateOutputType = {
    id: number | null
    activity_id: number | null
    user_uid: string | null
    value: Decimal | null
    processed: number | null
    created: Date | null
    display_to_user: number | null
    evaluated: number | null
  }

  export type Activity_question_usersMaxAggregateOutputType = {
    id: number | null
    activity_id: number | null
    user_uid: string | null
    value: Decimal | null
    processed: number | null
    created: Date | null
    display_to_user: number | null
    evaluated: number | null
  }

  export type Activity_question_usersCountAggregateOutputType = {
    id: number
    activity_id: number
    user_uid: number
    value: number
    processed: number
    created: number
    display_to_user: number
    evaluated: number
    _all: number
  }


  export type Activity_question_usersAvgAggregateInputType = {
    id?: true
    activity_id?: true
    value?: true
    processed?: true
    display_to_user?: true
    evaluated?: true
  }

  export type Activity_question_usersSumAggregateInputType = {
    id?: true
    activity_id?: true
    value?: true
    processed?: true
    display_to_user?: true
    evaluated?: true
  }

  export type Activity_question_usersMinAggregateInputType = {
    id?: true
    activity_id?: true
    user_uid?: true
    value?: true
    processed?: true
    created?: true
    display_to_user?: true
    evaluated?: true
  }

  export type Activity_question_usersMaxAggregateInputType = {
    id?: true
    activity_id?: true
    user_uid?: true
    value?: true
    processed?: true
    created?: true
    display_to_user?: true
    evaluated?: true
  }

  export type Activity_question_usersCountAggregateInputType = {
    id?: true
    activity_id?: true
    user_uid?: true
    value?: true
    processed?: true
    created?: true
    display_to_user?: true
    evaluated?: true
    _all?: true
  }

  export type Activity_question_usersAggregateArgs = {
    /**
     * Filter which activity_question_users to aggregate.
     * 
    **/
    where?: activity_question_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of activity_question_users to fetch.
     * 
    **/
    orderBy?: Enumerable<activity_question_usersOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: activity_question_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` activity_question_users from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` activity_question_users.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned activity_question_users
    **/
    _count?: true | Activity_question_usersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Activity_question_usersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Activity_question_usersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Activity_question_usersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Activity_question_usersMaxAggregateInputType
  }

  export type GetActivity_question_usersAggregateType<T extends Activity_question_usersAggregateArgs> = {
        [P in keyof T & keyof AggregateActivity_question_users]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateActivity_question_users[P]>
      : GetScalarType<T[P], AggregateActivity_question_users[P]>
  }




  export type Activity_question_usersGroupByArgs = {
    where?: activity_question_usersWhereInput
    orderBy?: Enumerable<activity_question_usersOrderByWithAggregationInput>
    by: Array<Activity_question_usersScalarFieldEnum>
    having?: activity_question_usersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Activity_question_usersCountAggregateInputType | true
    _avg?: Activity_question_usersAvgAggregateInputType
    _sum?: Activity_question_usersSumAggregateInputType
    _min?: Activity_question_usersMinAggregateInputType
    _max?: Activity_question_usersMaxAggregateInputType
  }


  export type Activity_question_usersGroupByOutputType = {
    id: number
    activity_id: number | null
    user_uid: string | null
    value: Decimal | null
    processed: number | null
    created: Date | null
    display_to_user: number | null
    evaluated: number | null
    _count: Activity_question_usersCountAggregateOutputType | null
    _avg: Activity_question_usersAvgAggregateOutputType | null
    _sum: Activity_question_usersSumAggregateOutputType | null
    _min: Activity_question_usersMinAggregateOutputType | null
    _max: Activity_question_usersMaxAggregateOutputType | null
  }

  type GetActivity_question_usersGroupByPayload<T extends Activity_question_usersGroupByArgs> = Promise<
    Array<
      PickArray<Activity_question_usersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Activity_question_usersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Activity_question_usersGroupByOutputType[P]>
            : GetScalarType<T[P], Activity_question_usersGroupByOutputType[P]>
        }
      >
    >


  export type activity_question_usersSelect = {
    id?: boolean
    activity_id?: boolean
    user_uid?: boolean
    value?: boolean
    processed?: boolean
    created?: boolean
    display_to_user?: boolean
    evaluated?: boolean
    activity?: boolean | activityArgs
    users?: boolean | usersArgs
  }

  export type activity_question_usersInclude = {
    activity?: boolean | activityArgs
    users?: boolean | usersArgs
  }

  export type activity_question_usersGetPayload<
    S extends boolean | null | undefined | activity_question_usersArgs,
    U = keyof S
      > = S extends true
        ? activity_question_users
    : S extends undefined
    ? never
    : S extends activity_question_usersArgs | activity_question_usersFindManyArgs
    ?'include' extends U
    ? activity_question_users  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'activity'
        ? activityGetPayload<S['include'][P]> | null :
        P extends 'users'
        ? usersGetPayload<S['include'][P]> | null : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof activity_question_users ?activity_question_users [P]
  : 
          P extends 'activity'
        ? activityGetPayload<S['select'][P]> | null :
        P extends 'users'
        ? usersGetPayload<S['select'][P]> | null : never
  } 
    : activity_question_users
  : activity_question_users


  type activity_question_usersCountArgs = Merge<
    Omit<activity_question_usersFindManyArgs, 'select' | 'include'> & {
      select?: Activity_question_usersCountAggregateInputType | true
    }
  >

  export interface activity_question_usersDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Activity_question_users that matches the filter.
     * @param {activity_question_usersFindUniqueArgs} args - Arguments to find a Activity_question_users
     * @example
     * // Get one Activity_question_users
     * const activity_question_users = await prisma.activity_question_users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends activity_question_usersFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, activity_question_usersFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'activity_question_users'> extends True ? CheckSelect<T, Prisma__activity_question_usersClient<activity_question_users>, Prisma__activity_question_usersClient<activity_question_usersGetPayload<T>>> : CheckSelect<T, Prisma__activity_question_usersClient<activity_question_users | null >, Prisma__activity_question_usersClient<activity_question_usersGetPayload<T> | null >>

    /**
     * Find the first Activity_question_users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {activity_question_usersFindFirstArgs} args - Arguments to find a Activity_question_users
     * @example
     * // Get one Activity_question_users
     * const activity_question_users = await prisma.activity_question_users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends activity_question_usersFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, activity_question_usersFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'activity_question_users'> extends True ? CheckSelect<T, Prisma__activity_question_usersClient<activity_question_users>, Prisma__activity_question_usersClient<activity_question_usersGetPayload<T>>> : CheckSelect<T, Prisma__activity_question_usersClient<activity_question_users | null >, Prisma__activity_question_usersClient<activity_question_usersGetPayload<T> | null >>

    /**
     * Find zero or more Activity_question_users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {activity_question_usersFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Activity_question_users
     * const activity_question_users = await prisma.activity_question_users.findMany()
     * 
     * // Get first 10 Activity_question_users
     * const activity_question_users = await prisma.activity_question_users.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const activity_question_usersWithIdOnly = await prisma.activity_question_users.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends activity_question_usersFindManyArgs>(
      args?: SelectSubset<T, activity_question_usersFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<activity_question_users>>, PrismaPromise<Array<activity_question_usersGetPayload<T>>>>

    /**
     * Create a Activity_question_users.
     * @param {activity_question_usersCreateArgs} args - Arguments to create a Activity_question_users.
     * @example
     * // Create one Activity_question_users
     * const Activity_question_users = await prisma.activity_question_users.create({
     *   data: {
     *     // ... data to create a Activity_question_users
     *   }
     * })
     * 
    **/
    create<T extends activity_question_usersCreateArgs>(
      args: SelectSubset<T, activity_question_usersCreateArgs>
    ): CheckSelect<T, Prisma__activity_question_usersClient<activity_question_users>, Prisma__activity_question_usersClient<activity_question_usersGetPayload<T>>>

    /**
     * Create many Activity_question_users.
     *     @param {activity_question_usersCreateManyArgs} args - Arguments to create many Activity_question_users.
     *     @example
     *     // Create many Activity_question_users
     *     const activity_question_users = await prisma.activity_question_users.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends activity_question_usersCreateManyArgs>(
      args?: SelectSubset<T, activity_question_usersCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Activity_question_users.
     * @param {activity_question_usersDeleteArgs} args - Arguments to delete one Activity_question_users.
     * @example
     * // Delete one Activity_question_users
     * const Activity_question_users = await prisma.activity_question_users.delete({
     *   where: {
     *     // ... filter to delete one Activity_question_users
     *   }
     * })
     * 
    **/
    delete<T extends activity_question_usersDeleteArgs>(
      args: SelectSubset<T, activity_question_usersDeleteArgs>
    ): CheckSelect<T, Prisma__activity_question_usersClient<activity_question_users>, Prisma__activity_question_usersClient<activity_question_usersGetPayload<T>>>

    /**
     * Update one Activity_question_users.
     * @param {activity_question_usersUpdateArgs} args - Arguments to update one Activity_question_users.
     * @example
     * // Update one Activity_question_users
     * const activity_question_users = await prisma.activity_question_users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends activity_question_usersUpdateArgs>(
      args: SelectSubset<T, activity_question_usersUpdateArgs>
    ): CheckSelect<T, Prisma__activity_question_usersClient<activity_question_users>, Prisma__activity_question_usersClient<activity_question_usersGetPayload<T>>>

    /**
     * Delete zero or more Activity_question_users.
     * @param {activity_question_usersDeleteManyArgs} args - Arguments to filter Activity_question_users to delete.
     * @example
     * // Delete a few Activity_question_users
     * const { count } = await prisma.activity_question_users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends activity_question_usersDeleteManyArgs>(
      args?: SelectSubset<T, activity_question_usersDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Activity_question_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {activity_question_usersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Activity_question_users
     * const activity_question_users = await prisma.activity_question_users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends activity_question_usersUpdateManyArgs>(
      args: SelectSubset<T, activity_question_usersUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Activity_question_users.
     * @param {activity_question_usersUpsertArgs} args - Arguments to update or create a Activity_question_users.
     * @example
     * // Update or create a Activity_question_users
     * const activity_question_users = await prisma.activity_question_users.upsert({
     *   create: {
     *     // ... data to create a Activity_question_users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Activity_question_users we want to update
     *   }
     * })
    **/
    upsert<T extends activity_question_usersUpsertArgs>(
      args: SelectSubset<T, activity_question_usersUpsertArgs>
    ): CheckSelect<T, Prisma__activity_question_usersClient<activity_question_users>, Prisma__activity_question_usersClient<activity_question_usersGetPayload<T>>>

    /**
     * Count the number of Activity_question_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {activity_question_usersCountArgs} args - Arguments to filter Activity_question_users to count.
     * @example
     * // Count the number of Activity_question_users
     * const count = await prisma.activity_question_users.count({
     *   where: {
     *     // ... the filter for the Activity_question_users we want to count
     *   }
     * })
    **/
    count<T extends activity_question_usersCountArgs>(
      args?: Subset<T, activity_question_usersCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Activity_question_usersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Activity_question_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Activity_question_usersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Activity_question_usersAggregateArgs>(args: Subset<T, Activity_question_usersAggregateArgs>): PrismaPromise<GetActivity_question_usersAggregateType<T>>

    /**
     * Group by Activity_question_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Activity_question_usersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Activity_question_usersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Activity_question_usersGroupByArgs['orderBy'] }
        : { orderBy?: Activity_question_usersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Activity_question_usersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetActivity_question_usersGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for activity_question_users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__activity_question_usersClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    activity<T extends activityArgs = {}>(args?: Subset<T, activityArgs>): CheckSelect<T, Prisma__activityClient<activity | null >, Prisma__activityClient<activityGetPayload<T> | null >>;

    users<T extends usersArgs = {}>(args?: Subset<T, usersArgs>): CheckSelect<T, Prisma__usersClient<users | null >, Prisma__usersClient<usersGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * activity_question_users findUnique
   */
  export type activity_question_usersFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the activity_question_users
     * 
    **/
    select?: activity_question_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: activity_question_usersInclude | null
    /**
     * Throw an Error if a activity_question_users can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which activity_question_users to fetch.
     * 
    **/
    where: activity_question_usersWhereUniqueInput
  }


  /**
   * activity_question_users findFirst
   */
  export type activity_question_usersFindFirstArgs = {
    /**
     * Select specific fields to fetch from the activity_question_users
     * 
    **/
    select?: activity_question_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: activity_question_usersInclude | null
    /**
     * Throw an Error if a activity_question_users can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which activity_question_users to fetch.
     * 
    **/
    where?: activity_question_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of activity_question_users to fetch.
     * 
    **/
    orderBy?: Enumerable<activity_question_usersOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for activity_question_users.
     * 
    **/
    cursor?: activity_question_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` activity_question_users from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` activity_question_users.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of activity_question_users.
     * 
    **/
    distinct?: Enumerable<Activity_question_usersScalarFieldEnum>
  }


  /**
   * activity_question_users findMany
   */
  export type activity_question_usersFindManyArgs = {
    /**
     * Select specific fields to fetch from the activity_question_users
     * 
    **/
    select?: activity_question_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: activity_question_usersInclude | null
    /**
     * Filter, which activity_question_users to fetch.
     * 
    **/
    where?: activity_question_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of activity_question_users to fetch.
     * 
    **/
    orderBy?: Enumerable<activity_question_usersOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing activity_question_users.
     * 
    **/
    cursor?: activity_question_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` activity_question_users from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` activity_question_users.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Activity_question_usersScalarFieldEnum>
  }


  /**
   * activity_question_users create
   */
  export type activity_question_usersCreateArgs = {
    /**
     * Select specific fields to fetch from the activity_question_users
     * 
    **/
    select?: activity_question_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: activity_question_usersInclude | null
    /**
     * The data needed to create a activity_question_users.
     * 
    **/
    data: XOR<activity_question_usersCreateInput, activity_question_usersUncheckedCreateInput>
  }


  /**
   * activity_question_users createMany
   */
  export type activity_question_usersCreateManyArgs = {
    data: Enumerable<activity_question_usersCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * activity_question_users update
   */
  export type activity_question_usersUpdateArgs = {
    /**
     * Select specific fields to fetch from the activity_question_users
     * 
    **/
    select?: activity_question_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: activity_question_usersInclude | null
    /**
     * The data needed to update a activity_question_users.
     * 
    **/
    data: XOR<activity_question_usersUpdateInput, activity_question_usersUncheckedUpdateInput>
    /**
     * Choose, which activity_question_users to update.
     * 
    **/
    where: activity_question_usersWhereUniqueInput
  }


  /**
   * activity_question_users updateMany
   */
  export type activity_question_usersUpdateManyArgs = {
    data: XOR<activity_question_usersUpdateManyMutationInput, activity_question_usersUncheckedUpdateManyInput>
    where?: activity_question_usersWhereInput
  }


  /**
   * activity_question_users upsert
   */
  export type activity_question_usersUpsertArgs = {
    /**
     * Select specific fields to fetch from the activity_question_users
     * 
    **/
    select?: activity_question_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: activity_question_usersInclude | null
    /**
     * The filter to search for the activity_question_users to update in case it exists.
     * 
    **/
    where: activity_question_usersWhereUniqueInput
    /**
     * In case the activity_question_users found by the `where` argument doesn't exist, create a new activity_question_users with this data.
     * 
    **/
    create: XOR<activity_question_usersCreateInput, activity_question_usersUncheckedCreateInput>
    /**
     * In case the activity_question_users was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<activity_question_usersUpdateInput, activity_question_usersUncheckedUpdateInput>
  }


  /**
   * activity_question_users delete
   */
  export type activity_question_usersDeleteArgs = {
    /**
     * Select specific fields to fetch from the activity_question_users
     * 
    **/
    select?: activity_question_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: activity_question_usersInclude | null
    /**
     * Filter which activity_question_users to delete.
     * 
    **/
    where: activity_question_usersWhereUniqueInput
  }


  /**
   * activity_question_users deleteMany
   */
  export type activity_question_usersDeleteManyArgs = {
    where?: activity_question_usersWhereInput
  }


  /**
   * activity_question_users without action
   */
  export type activity_question_usersArgs = {
    /**
     * Select specific fields to fetch from the activity_question_users
     * 
    **/
    select?: activity_question_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: activity_question_usersInclude | null
  }



  /**
   * Model activity_question_users_response
   */


  export type AggregateActivity_question_users_response = {
    _count: Activity_question_users_responseCountAggregateOutputType | null
    _avg: Activity_question_users_responseAvgAggregateOutputType | null
    _sum: Activity_question_users_responseSumAggregateOutputType | null
    _min: Activity_question_users_responseMinAggregateOutputType | null
    _max: Activity_question_users_responseMaxAggregateOutputType | null
  }

  export type Activity_question_users_responseAvgAggregateOutputType = {
    id: number | null
    activity_id: number | null
    number_question: number | null
  }

  export type Activity_question_users_responseSumAggregateOutputType = {
    id: number | null
    activity_id: number | null
    number_question: number | null
  }

  export type Activity_question_users_responseMinAggregateOutputType = {
    id: number | null
    activity_id: number | null
    user_uid: string | null
    number_question: number | null
    answer: string | null
    comments: string | null
  }

  export type Activity_question_users_responseMaxAggregateOutputType = {
    id: number | null
    activity_id: number | null
    user_uid: string | null
    number_question: number | null
    answer: string | null
    comments: string | null
  }

  export type Activity_question_users_responseCountAggregateOutputType = {
    id: number
    activity_id: number
    user_uid: number
    number_question: number
    answer: number
    comments: number
    _all: number
  }


  export type Activity_question_users_responseAvgAggregateInputType = {
    id?: true
    activity_id?: true
    number_question?: true
  }

  export type Activity_question_users_responseSumAggregateInputType = {
    id?: true
    activity_id?: true
    number_question?: true
  }

  export type Activity_question_users_responseMinAggregateInputType = {
    id?: true
    activity_id?: true
    user_uid?: true
    number_question?: true
    answer?: true
    comments?: true
  }

  export type Activity_question_users_responseMaxAggregateInputType = {
    id?: true
    activity_id?: true
    user_uid?: true
    number_question?: true
    answer?: true
    comments?: true
  }

  export type Activity_question_users_responseCountAggregateInputType = {
    id?: true
    activity_id?: true
    user_uid?: true
    number_question?: true
    answer?: true
    comments?: true
    _all?: true
  }

  export type Activity_question_users_responseAggregateArgs = {
    /**
     * Filter which activity_question_users_response to aggregate.
     * 
    **/
    where?: activity_question_users_responseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of activity_question_users_responses to fetch.
     * 
    **/
    orderBy?: Enumerable<activity_question_users_responseOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: activity_question_users_responseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` activity_question_users_responses from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` activity_question_users_responses.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned activity_question_users_responses
    **/
    _count?: true | Activity_question_users_responseCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Activity_question_users_responseAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Activity_question_users_responseSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Activity_question_users_responseMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Activity_question_users_responseMaxAggregateInputType
  }

  export type GetActivity_question_users_responseAggregateType<T extends Activity_question_users_responseAggregateArgs> = {
        [P in keyof T & keyof AggregateActivity_question_users_response]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateActivity_question_users_response[P]>
      : GetScalarType<T[P], AggregateActivity_question_users_response[P]>
  }




  export type Activity_question_users_responseGroupByArgs = {
    where?: activity_question_users_responseWhereInput
    orderBy?: Enumerable<activity_question_users_responseOrderByWithAggregationInput>
    by: Array<Activity_question_users_responseScalarFieldEnum>
    having?: activity_question_users_responseScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Activity_question_users_responseCountAggregateInputType | true
    _avg?: Activity_question_users_responseAvgAggregateInputType
    _sum?: Activity_question_users_responseSumAggregateInputType
    _min?: Activity_question_users_responseMinAggregateInputType
    _max?: Activity_question_users_responseMaxAggregateInputType
  }


  export type Activity_question_users_responseGroupByOutputType = {
    id: number
    activity_id: number | null
    user_uid: string | null
    number_question: number
    answer: string
    comments: string | null
    _count: Activity_question_users_responseCountAggregateOutputType | null
    _avg: Activity_question_users_responseAvgAggregateOutputType | null
    _sum: Activity_question_users_responseSumAggregateOutputType | null
    _min: Activity_question_users_responseMinAggregateOutputType | null
    _max: Activity_question_users_responseMaxAggregateOutputType | null
  }

  type GetActivity_question_users_responseGroupByPayload<T extends Activity_question_users_responseGroupByArgs> = Promise<
    Array<
      PickArray<Activity_question_users_responseGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Activity_question_users_responseGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Activity_question_users_responseGroupByOutputType[P]>
            : GetScalarType<T[P], Activity_question_users_responseGroupByOutputType[P]>
        }
      >
    >


  export type activity_question_users_responseSelect = {
    id?: boolean
    activity_id?: boolean
    user_uid?: boolean
    number_question?: boolean
    answer?: boolean
    comments?: boolean
    activity?: boolean | activityArgs
    users?: boolean | usersArgs
  }

  export type activity_question_users_responseInclude = {
    activity?: boolean | activityArgs
    users?: boolean | usersArgs
  }

  export type activity_question_users_responseGetPayload<
    S extends boolean | null | undefined | activity_question_users_responseArgs,
    U = keyof S
      > = S extends true
        ? activity_question_users_response
    : S extends undefined
    ? never
    : S extends activity_question_users_responseArgs | activity_question_users_responseFindManyArgs
    ?'include' extends U
    ? activity_question_users_response  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'activity'
        ? activityGetPayload<S['include'][P]> | null :
        P extends 'users'
        ? usersGetPayload<S['include'][P]> | null : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof activity_question_users_response ?activity_question_users_response [P]
  : 
          P extends 'activity'
        ? activityGetPayload<S['select'][P]> | null :
        P extends 'users'
        ? usersGetPayload<S['select'][P]> | null : never
  } 
    : activity_question_users_response
  : activity_question_users_response


  type activity_question_users_responseCountArgs = Merge<
    Omit<activity_question_users_responseFindManyArgs, 'select' | 'include'> & {
      select?: Activity_question_users_responseCountAggregateInputType | true
    }
  >

  export interface activity_question_users_responseDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Activity_question_users_response that matches the filter.
     * @param {activity_question_users_responseFindUniqueArgs} args - Arguments to find a Activity_question_users_response
     * @example
     * // Get one Activity_question_users_response
     * const activity_question_users_response = await prisma.activity_question_users_response.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends activity_question_users_responseFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, activity_question_users_responseFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'activity_question_users_response'> extends True ? CheckSelect<T, Prisma__activity_question_users_responseClient<activity_question_users_response>, Prisma__activity_question_users_responseClient<activity_question_users_responseGetPayload<T>>> : CheckSelect<T, Prisma__activity_question_users_responseClient<activity_question_users_response | null >, Prisma__activity_question_users_responseClient<activity_question_users_responseGetPayload<T> | null >>

    /**
     * Find the first Activity_question_users_response that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {activity_question_users_responseFindFirstArgs} args - Arguments to find a Activity_question_users_response
     * @example
     * // Get one Activity_question_users_response
     * const activity_question_users_response = await prisma.activity_question_users_response.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends activity_question_users_responseFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, activity_question_users_responseFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'activity_question_users_response'> extends True ? CheckSelect<T, Prisma__activity_question_users_responseClient<activity_question_users_response>, Prisma__activity_question_users_responseClient<activity_question_users_responseGetPayload<T>>> : CheckSelect<T, Prisma__activity_question_users_responseClient<activity_question_users_response | null >, Prisma__activity_question_users_responseClient<activity_question_users_responseGetPayload<T> | null >>

    /**
     * Find zero or more Activity_question_users_responses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {activity_question_users_responseFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Activity_question_users_responses
     * const activity_question_users_responses = await prisma.activity_question_users_response.findMany()
     * 
     * // Get first 10 Activity_question_users_responses
     * const activity_question_users_responses = await prisma.activity_question_users_response.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const activity_question_users_responseWithIdOnly = await prisma.activity_question_users_response.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends activity_question_users_responseFindManyArgs>(
      args?: SelectSubset<T, activity_question_users_responseFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<activity_question_users_response>>, PrismaPromise<Array<activity_question_users_responseGetPayload<T>>>>

    /**
     * Create a Activity_question_users_response.
     * @param {activity_question_users_responseCreateArgs} args - Arguments to create a Activity_question_users_response.
     * @example
     * // Create one Activity_question_users_response
     * const Activity_question_users_response = await prisma.activity_question_users_response.create({
     *   data: {
     *     // ... data to create a Activity_question_users_response
     *   }
     * })
     * 
    **/
    create<T extends activity_question_users_responseCreateArgs>(
      args: SelectSubset<T, activity_question_users_responseCreateArgs>
    ): CheckSelect<T, Prisma__activity_question_users_responseClient<activity_question_users_response>, Prisma__activity_question_users_responseClient<activity_question_users_responseGetPayload<T>>>

    /**
     * Create many Activity_question_users_responses.
     *     @param {activity_question_users_responseCreateManyArgs} args - Arguments to create many Activity_question_users_responses.
     *     @example
     *     // Create many Activity_question_users_responses
     *     const activity_question_users_response = await prisma.activity_question_users_response.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends activity_question_users_responseCreateManyArgs>(
      args?: SelectSubset<T, activity_question_users_responseCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Activity_question_users_response.
     * @param {activity_question_users_responseDeleteArgs} args - Arguments to delete one Activity_question_users_response.
     * @example
     * // Delete one Activity_question_users_response
     * const Activity_question_users_response = await prisma.activity_question_users_response.delete({
     *   where: {
     *     // ... filter to delete one Activity_question_users_response
     *   }
     * })
     * 
    **/
    delete<T extends activity_question_users_responseDeleteArgs>(
      args: SelectSubset<T, activity_question_users_responseDeleteArgs>
    ): CheckSelect<T, Prisma__activity_question_users_responseClient<activity_question_users_response>, Prisma__activity_question_users_responseClient<activity_question_users_responseGetPayload<T>>>

    /**
     * Update one Activity_question_users_response.
     * @param {activity_question_users_responseUpdateArgs} args - Arguments to update one Activity_question_users_response.
     * @example
     * // Update one Activity_question_users_response
     * const activity_question_users_response = await prisma.activity_question_users_response.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends activity_question_users_responseUpdateArgs>(
      args: SelectSubset<T, activity_question_users_responseUpdateArgs>
    ): CheckSelect<T, Prisma__activity_question_users_responseClient<activity_question_users_response>, Prisma__activity_question_users_responseClient<activity_question_users_responseGetPayload<T>>>

    /**
     * Delete zero or more Activity_question_users_responses.
     * @param {activity_question_users_responseDeleteManyArgs} args - Arguments to filter Activity_question_users_responses to delete.
     * @example
     * // Delete a few Activity_question_users_responses
     * const { count } = await prisma.activity_question_users_response.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends activity_question_users_responseDeleteManyArgs>(
      args?: SelectSubset<T, activity_question_users_responseDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Activity_question_users_responses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {activity_question_users_responseUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Activity_question_users_responses
     * const activity_question_users_response = await prisma.activity_question_users_response.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends activity_question_users_responseUpdateManyArgs>(
      args: SelectSubset<T, activity_question_users_responseUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Activity_question_users_response.
     * @param {activity_question_users_responseUpsertArgs} args - Arguments to update or create a Activity_question_users_response.
     * @example
     * // Update or create a Activity_question_users_response
     * const activity_question_users_response = await prisma.activity_question_users_response.upsert({
     *   create: {
     *     // ... data to create a Activity_question_users_response
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Activity_question_users_response we want to update
     *   }
     * })
    **/
    upsert<T extends activity_question_users_responseUpsertArgs>(
      args: SelectSubset<T, activity_question_users_responseUpsertArgs>
    ): CheckSelect<T, Prisma__activity_question_users_responseClient<activity_question_users_response>, Prisma__activity_question_users_responseClient<activity_question_users_responseGetPayload<T>>>

    /**
     * Count the number of Activity_question_users_responses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {activity_question_users_responseCountArgs} args - Arguments to filter Activity_question_users_responses to count.
     * @example
     * // Count the number of Activity_question_users_responses
     * const count = await prisma.activity_question_users_response.count({
     *   where: {
     *     // ... the filter for the Activity_question_users_responses we want to count
     *   }
     * })
    **/
    count<T extends activity_question_users_responseCountArgs>(
      args?: Subset<T, activity_question_users_responseCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Activity_question_users_responseCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Activity_question_users_response.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Activity_question_users_responseAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Activity_question_users_responseAggregateArgs>(args: Subset<T, Activity_question_users_responseAggregateArgs>): PrismaPromise<GetActivity_question_users_responseAggregateType<T>>

    /**
     * Group by Activity_question_users_response.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Activity_question_users_responseGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Activity_question_users_responseGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Activity_question_users_responseGroupByArgs['orderBy'] }
        : { orderBy?: Activity_question_users_responseGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Activity_question_users_responseGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetActivity_question_users_responseGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for activity_question_users_response.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__activity_question_users_responseClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    activity<T extends activityArgs = {}>(args?: Subset<T, activityArgs>): CheckSelect<T, Prisma__activityClient<activity | null >, Prisma__activityClient<activityGetPayload<T> | null >>;

    users<T extends usersArgs = {}>(args?: Subset<T, usersArgs>): CheckSelect<T, Prisma__usersClient<users | null >, Prisma__usersClient<usersGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * activity_question_users_response findUnique
   */
  export type activity_question_users_responseFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the activity_question_users_response
     * 
    **/
    select?: activity_question_users_responseSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: activity_question_users_responseInclude | null
    /**
     * Throw an Error if a activity_question_users_response can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which activity_question_users_response to fetch.
     * 
    **/
    where: activity_question_users_responseWhereUniqueInput
  }


  /**
   * activity_question_users_response findFirst
   */
  export type activity_question_users_responseFindFirstArgs = {
    /**
     * Select specific fields to fetch from the activity_question_users_response
     * 
    **/
    select?: activity_question_users_responseSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: activity_question_users_responseInclude | null
    /**
     * Throw an Error if a activity_question_users_response can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which activity_question_users_response to fetch.
     * 
    **/
    where?: activity_question_users_responseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of activity_question_users_responses to fetch.
     * 
    **/
    orderBy?: Enumerable<activity_question_users_responseOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for activity_question_users_responses.
     * 
    **/
    cursor?: activity_question_users_responseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` activity_question_users_responses from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` activity_question_users_responses.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of activity_question_users_responses.
     * 
    **/
    distinct?: Enumerable<Activity_question_users_responseScalarFieldEnum>
  }


  /**
   * activity_question_users_response findMany
   */
  export type activity_question_users_responseFindManyArgs = {
    /**
     * Select specific fields to fetch from the activity_question_users_response
     * 
    **/
    select?: activity_question_users_responseSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: activity_question_users_responseInclude | null
    /**
     * Filter, which activity_question_users_responses to fetch.
     * 
    **/
    where?: activity_question_users_responseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of activity_question_users_responses to fetch.
     * 
    **/
    orderBy?: Enumerable<activity_question_users_responseOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing activity_question_users_responses.
     * 
    **/
    cursor?: activity_question_users_responseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` activity_question_users_responses from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` activity_question_users_responses.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Activity_question_users_responseScalarFieldEnum>
  }


  /**
   * activity_question_users_response create
   */
  export type activity_question_users_responseCreateArgs = {
    /**
     * Select specific fields to fetch from the activity_question_users_response
     * 
    **/
    select?: activity_question_users_responseSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: activity_question_users_responseInclude | null
    /**
     * The data needed to create a activity_question_users_response.
     * 
    **/
    data: XOR<activity_question_users_responseCreateInput, activity_question_users_responseUncheckedCreateInput>
  }


  /**
   * activity_question_users_response createMany
   */
  export type activity_question_users_responseCreateManyArgs = {
    data: Enumerable<activity_question_users_responseCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * activity_question_users_response update
   */
  export type activity_question_users_responseUpdateArgs = {
    /**
     * Select specific fields to fetch from the activity_question_users_response
     * 
    **/
    select?: activity_question_users_responseSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: activity_question_users_responseInclude | null
    /**
     * The data needed to update a activity_question_users_response.
     * 
    **/
    data: XOR<activity_question_users_responseUpdateInput, activity_question_users_responseUncheckedUpdateInput>
    /**
     * Choose, which activity_question_users_response to update.
     * 
    **/
    where: activity_question_users_responseWhereUniqueInput
  }


  /**
   * activity_question_users_response updateMany
   */
  export type activity_question_users_responseUpdateManyArgs = {
    data: XOR<activity_question_users_responseUpdateManyMutationInput, activity_question_users_responseUncheckedUpdateManyInput>
    where?: activity_question_users_responseWhereInput
  }


  /**
   * activity_question_users_response upsert
   */
  export type activity_question_users_responseUpsertArgs = {
    /**
     * Select specific fields to fetch from the activity_question_users_response
     * 
    **/
    select?: activity_question_users_responseSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: activity_question_users_responseInclude | null
    /**
     * The filter to search for the activity_question_users_response to update in case it exists.
     * 
    **/
    where: activity_question_users_responseWhereUniqueInput
    /**
     * In case the activity_question_users_response found by the `where` argument doesn't exist, create a new activity_question_users_response with this data.
     * 
    **/
    create: XOR<activity_question_users_responseCreateInput, activity_question_users_responseUncheckedCreateInput>
    /**
     * In case the activity_question_users_response was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<activity_question_users_responseUpdateInput, activity_question_users_responseUncheckedUpdateInput>
  }


  /**
   * activity_question_users_response delete
   */
  export type activity_question_users_responseDeleteArgs = {
    /**
     * Select specific fields to fetch from the activity_question_users_response
     * 
    **/
    select?: activity_question_users_responseSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: activity_question_users_responseInclude | null
    /**
     * Filter which activity_question_users_response to delete.
     * 
    **/
    where: activity_question_users_responseWhereUniqueInput
  }


  /**
   * activity_question_users_response deleteMany
   */
  export type activity_question_users_responseDeleteManyArgs = {
    where?: activity_question_users_responseWhereInput
  }


  /**
   * activity_question_users_response without action
   */
  export type activity_question_users_responseArgs = {
    /**
     * Select specific fields to fetch from the activity_question_users_response
     * 
    **/
    select?: activity_question_users_responseSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: activity_question_users_responseInclude | null
  }



  /**
   * Model reward
   */


  export type AggregateReward = {
    _count: RewardCountAggregateOutputType | null
    _avg: RewardAvgAggregateOutputType | null
    _sum: RewardSumAggregateOutputType | null
    _min: RewardMinAggregateOutputType | null
    _max: RewardMaxAggregateOutputType | null
  }

  export type RewardAvgAggregateOutputType = {
    id: number | null
    type: number | null
    value: Decimal | null
  }

  export type RewardSumAggregateOutputType = {
    id: number | null
    type: number | null
    value: Decimal | null
  }

  export type RewardMinAggregateOutputType = {
    id: number | null
    type: number | null
    name: string | null
    description: string | null
    value: Decimal | null
    picture: string | null
  }

  export type RewardMaxAggregateOutputType = {
    id: number | null
    type: number | null
    name: string | null
    description: string | null
    value: Decimal | null
    picture: string | null
  }

  export type RewardCountAggregateOutputType = {
    id: number
    type: number
    name: number
    description: number
    value: number
    picture: number
    _all: number
  }


  export type RewardAvgAggregateInputType = {
    id?: true
    type?: true
    value?: true
  }

  export type RewardSumAggregateInputType = {
    id?: true
    type?: true
    value?: true
  }

  export type RewardMinAggregateInputType = {
    id?: true
    type?: true
    name?: true
    description?: true
    value?: true
    picture?: true
  }

  export type RewardMaxAggregateInputType = {
    id?: true
    type?: true
    name?: true
    description?: true
    value?: true
    picture?: true
  }

  export type RewardCountAggregateInputType = {
    id?: true
    type?: true
    name?: true
    description?: true
    value?: true
    picture?: true
    _all?: true
  }

  export type RewardAggregateArgs = {
    /**
     * Filter which reward to aggregate.
     * 
    **/
    where?: rewardWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of rewards to fetch.
     * 
    **/
    orderBy?: Enumerable<rewardOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: rewardWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` rewards from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` rewards.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned rewards
    **/
    _count?: true | RewardCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RewardAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RewardSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RewardMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RewardMaxAggregateInputType
  }

  export type GetRewardAggregateType<T extends RewardAggregateArgs> = {
        [P in keyof T & keyof AggregateReward]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReward[P]>
      : GetScalarType<T[P], AggregateReward[P]>
  }




  export type RewardGroupByArgs = {
    where?: rewardWhereInput
    orderBy?: Enumerable<rewardOrderByWithAggregationInput>
    by: Array<RewardScalarFieldEnum>
    having?: rewardScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RewardCountAggregateInputType | true
    _avg?: RewardAvgAggregateInputType
    _sum?: RewardSumAggregateInputType
    _min?: RewardMinAggregateInputType
    _max?: RewardMaxAggregateInputType
  }


  export type RewardGroupByOutputType = {
    id: number
    type: number
    name: string
    description: string
    value: Decimal
    picture: string | null
    _count: RewardCountAggregateOutputType | null
    _avg: RewardAvgAggregateOutputType | null
    _sum: RewardSumAggregateOutputType | null
    _min: RewardMinAggregateOutputType | null
    _max: RewardMaxAggregateOutputType | null
  }

  type GetRewardGroupByPayload<T extends RewardGroupByArgs> = Promise<
    Array<
      PickArray<RewardGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RewardGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RewardGroupByOutputType[P]>
            : GetScalarType<T[P], RewardGroupByOutputType[P]>
        }
      >
    >


  export type rewardSelect = {
    id?: boolean
    type?: boolean
    name?: boolean
    description?: boolean
    value?: boolean
    picture?: boolean
    reward_users?: boolean | reward_usersFindManyArgs
    _count?: boolean | RewardCountOutputTypeArgs
  }

  export type rewardInclude = {
    reward_users?: boolean | reward_usersFindManyArgs
    _count?: boolean | RewardCountOutputTypeArgs
  }

  export type rewardGetPayload<
    S extends boolean | null | undefined | rewardArgs,
    U = keyof S
      > = S extends true
        ? reward
    : S extends undefined
    ? never
    : S extends rewardArgs | rewardFindManyArgs
    ?'include' extends U
    ? reward  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'reward_users'
        ? Array < reward_usersGetPayload<S['include'][P]>>  :
        P extends '_count'
        ? RewardCountOutputTypeGetPayload<S['include'][P]> : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof reward ?reward [P]
  : 
          P extends 'reward_users'
        ? Array < reward_usersGetPayload<S['select'][P]>>  :
        P extends '_count'
        ? RewardCountOutputTypeGetPayload<S['select'][P]> : never
  } 
    : reward
  : reward


  type rewardCountArgs = Merge<
    Omit<rewardFindManyArgs, 'select' | 'include'> & {
      select?: RewardCountAggregateInputType | true
    }
  >

  export interface rewardDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Reward that matches the filter.
     * @param {rewardFindUniqueArgs} args - Arguments to find a Reward
     * @example
     * // Get one Reward
     * const reward = await prisma.reward.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends rewardFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, rewardFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'reward'> extends True ? CheckSelect<T, Prisma__rewardClient<reward>, Prisma__rewardClient<rewardGetPayload<T>>> : CheckSelect<T, Prisma__rewardClient<reward | null >, Prisma__rewardClient<rewardGetPayload<T> | null >>

    /**
     * Find the first Reward that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rewardFindFirstArgs} args - Arguments to find a Reward
     * @example
     * // Get one Reward
     * const reward = await prisma.reward.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends rewardFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, rewardFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'reward'> extends True ? CheckSelect<T, Prisma__rewardClient<reward>, Prisma__rewardClient<rewardGetPayload<T>>> : CheckSelect<T, Prisma__rewardClient<reward | null >, Prisma__rewardClient<rewardGetPayload<T> | null >>

    /**
     * Find zero or more Rewards that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rewardFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Rewards
     * const rewards = await prisma.reward.findMany()
     * 
     * // Get first 10 Rewards
     * const rewards = await prisma.reward.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const rewardWithIdOnly = await prisma.reward.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends rewardFindManyArgs>(
      args?: SelectSubset<T, rewardFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<reward>>, PrismaPromise<Array<rewardGetPayload<T>>>>

    /**
     * Create a Reward.
     * @param {rewardCreateArgs} args - Arguments to create a Reward.
     * @example
     * // Create one Reward
     * const Reward = await prisma.reward.create({
     *   data: {
     *     // ... data to create a Reward
     *   }
     * })
     * 
    **/
    create<T extends rewardCreateArgs>(
      args: SelectSubset<T, rewardCreateArgs>
    ): CheckSelect<T, Prisma__rewardClient<reward>, Prisma__rewardClient<rewardGetPayload<T>>>

    /**
     * Create many Rewards.
     *     @param {rewardCreateManyArgs} args - Arguments to create many Rewards.
     *     @example
     *     // Create many Rewards
     *     const reward = await prisma.reward.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends rewardCreateManyArgs>(
      args?: SelectSubset<T, rewardCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Reward.
     * @param {rewardDeleteArgs} args - Arguments to delete one Reward.
     * @example
     * // Delete one Reward
     * const Reward = await prisma.reward.delete({
     *   where: {
     *     // ... filter to delete one Reward
     *   }
     * })
     * 
    **/
    delete<T extends rewardDeleteArgs>(
      args: SelectSubset<T, rewardDeleteArgs>
    ): CheckSelect<T, Prisma__rewardClient<reward>, Prisma__rewardClient<rewardGetPayload<T>>>

    /**
     * Update one Reward.
     * @param {rewardUpdateArgs} args - Arguments to update one Reward.
     * @example
     * // Update one Reward
     * const reward = await prisma.reward.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends rewardUpdateArgs>(
      args: SelectSubset<T, rewardUpdateArgs>
    ): CheckSelect<T, Prisma__rewardClient<reward>, Prisma__rewardClient<rewardGetPayload<T>>>

    /**
     * Delete zero or more Rewards.
     * @param {rewardDeleteManyArgs} args - Arguments to filter Rewards to delete.
     * @example
     * // Delete a few Rewards
     * const { count } = await prisma.reward.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends rewardDeleteManyArgs>(
      args?: SelectSubset<T, rewardDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Rewards.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rewardUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Rewards
     * const reward = await prisma.reward.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends rewardUpdateManyArgs>(
      args: SelectSubset<T, rewardUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Reward.
     * @param {rewardUpsertArgs} args - Arguments to update or create a Reward.
     * @example
     * // Update or create a Reward
     * const reward = await prisma.reward.upsert({
     *   create: {
     *     // ... data to create a Reward
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Reward we want to update
     *   }
     * })
    **/
    upsert<T extends rewardUpsertArgs>(
      args: SelectSubset<T, rewardUpsertArgs>
    ): CheckSelect<T, Prisma__rewardClient<reward>, Prisma__rewardClient<rewardGetPayload<T>>>

    /**
     * Count the number of Rewards.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rewardCountArgs} args - Arguments to filter Rewards to count.
     * @example
     * // Count the number of Rewards
     * const count = await prisma.reward.count({
     *   where: {
     *     // ... the filter for the Rewards we want to count
     *   }
     * })
    **/
    count<T extends rewardCountArgs>(
      args?: Subset<T, rewardCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RewardCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Reward.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RewardAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RewardAggregateArgs>(args: Subset<T, RewardAggregateArgs>): PrismaPromise<GetRewardAggregateType<T>>

    /**
     * Group by Reward.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RewardGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RewardGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RewardGroupByArgs['orderBy'] }
        : { orderBy?: RewardGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RewardGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRewardGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for reward.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__rewardClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    reward_users<T extends reward_usersFindManyArgs = {}>(args?: Subset<T, reward_usersFindManyArgs>): CheckSelect<T, PrismaPromise<Array<reward_users>>, PrismaPromise<Array<reward_usersGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * reward findUnique
   */
  export type rewardFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the reward
     * 
    **/
    select?: rewardSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: rewardInclude | null
    /**
     * Throw an Error if a reward can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which reward to fetch.
     * 
    **/
    where: rewardWhereUniqueInput
  }


  /**
   * reward findFirst
   */
  export type rewardFindFirstArgs = {
    /**
     * Select specific fields to fetch from the reward
     * 
    **/
    select?: rewardSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: rewardInclude | null
    /**
     * Throw an Error if a reward can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which reward to fetch.
     * 
    **/
    where?: rewardWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of rewards to fetch.
     * 
    **/
    orderBy?: Enumerable<rewardOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for rewards.
     * 
    **/
    cursor?: rewardWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` rewards from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` rewards.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of rewards.
     * 
    **/
    distinct?: Enumerable<RewardScalarFieldEnum>
  }


  /**
   * reward findMany
   */
  export type rewardFindManyArgs = {
    /**
     * Select specific fields to fetch from the reward
     * 
    **/
    select?: rewardSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: rewardInclude | null
    /**
     * Filter, which rewards to fetch.
     * 
    **/
    where?: rewardWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of rewards to fetch.
     * 
    **/
    orderBy?: Enumerable<rewardOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing rewards.
     * 
    **/
    cursor?: rewardWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` rewards from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` rewards.
     * 
    **/
    skip?: number
    distinct?: Enumerable<RewardScalarFieldEnum>
  }


  /**
   * reward create
   */
  export type rewardCreateArgs = {
    /**
     * Select specific fields to fetch from the reward
     * 
    **/
    select?: rewardSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: rewardInclude | null
    /**
     * The data needed to create a reward.
     * 
    **/
    data: XOR<rewardCreateInput, rewardUncheckedCreateInput>
  }


  /**
   * reward createMany
   */
  export type rewardCreateManyArgs = {
    data: Enumerable<rewardCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * reward update
   */
  export type rewardUpdateArgs = {
    /**
     * Select specific fields to fetch from the reward
     * 
    **/
    select?: rewardSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: rewardInclude | null
    /**
     * The data needed to update a reward.
     * 
    **/
    data: XOR<rewardUpdateInput, rewardUncheckedUpdateInput>
    /**
     * Choose, which reward to update.
     * 
    **/
    where: rewardWhereUniqueInput
  }


  /**
   * reward updateMany
   */
  export type rewardUpdateManyArgs = {
    data: XOR<rewardUpdateManyMutationInput, rewardUncheckedUpdateManyInput>
    where?: rewardWhereInput
  }


  /**
   * reward upsert
   */
  export type rewardUpsertArgs = {
    /**
     * Select specific fields to fetch from the reward
     * 
    **/
    select?: rewardSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: rewardInclude | null
    /**
     * The filter to search for the reward to update in case it exists.
     * 
    **/
    where: rewardWhereUniqueInput
    /**
     * In case the reward found by the `where` argument doesn't exist, create a new reward with this data.
     * 
    **/
    create: XOR<rewardCreateInput, rewardUncheckedCreateInput>
    /**
     * In case the reward was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<rewardUpdateInput, rewardUncheckedUpdateInput>
  }


  /**
   * reward delete
   */
  export type rewardDeleteArgs = {
    /**
     * Select specific fields to fetch from the reward
     * 
    **/
    select?: rewardSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: rewardInclude | null
    /**
     * Filter which reward to delete.
     * 
    **/
    where: rewardWhereUniqueInput
  }


  /**
   * reward deleteMany
   */
  export type rewardDeleteManyArgs = {
    where?: rewardWhereInput
  }


  /**
   * reward without action
   */
  export type rewardArgs = {
    /**
     * Select specific fields to fetch from the reward
     * 
    **/
    select?: rewardSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: rewardInclude | null
  }



  /**
   * Model reward_users
   */


  export type AggregateReward_users = {
    _count: Reward_usersCountAggregateOutputType | null
    _avg: Reward_usersAvgAggregateOutputType | null
    _sum: Reward_usersSumAggregateOutputType | null
    _min: Reward_usersMinAggregateOutputType | null
    _max: Reward_usersMaxAggregateOutputType | null
  }

  export type Reward_usersAvgAggregateOutputType = {
    id: number | null
    reward_id: number | null
    amount: number | null
  }

  export type Reward_usersSumAggregateOutputType = {
    id: number | null
    reward_id: number | null
    amount: number | null
  }

  export type Reward_usersMinAggregateOutputType = {
    id: number | null
    user_uid: string | null
    reward_id: number | null
    amount: number | null
  }

  export type Reward_usersMaxAggregateOutputType = {
    id: number | null
    user_uid: string | null
    reward_id: number | null
    amount: number | null
  }

  export type Reward_usersCountAggregateOutputType = {
    id: number
    user_uid: number
    reward_id: number
    amount: number
    _all: number
  }


  export type Reward_usersAvgAggregateInputType = {
    id?: true
    reward_id?: true
    amount?: true
  }

  export type Reward_usersSumAggregateInputType = {
    id?: true
    reward_id?: true
    amount?: true
  }

  export type Reward_usersMinAggregateInputType = {
    id?: true
    user_uid?: true
    reward_id?: true
    amount?: true
  }

  export type Reward_usersMaxAggregateInputType = {
    id?: true
    user_uid?: true
    reward_id?: true
    amount?: true
  }

  export type Reward_usersCountAggregateInputType = {
    id?: true
    user_uid?: true
    reward_id?: true
    amount?: true
    _all?: true
  }

  export type Reward_usersAggregateArgs = {
    /**
     * Filter which reward_users to aggregate.
     * 
    **/
    where?: reward_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reward_users to fetch.
     * 
    **/
    orderBy?: Enumerable<reward_usersOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: reward_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reward_users from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reward_users.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned reward_users
    **/
    _count?: true | Reward_usersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Reward_usersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Reward_usersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Reward_usersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Reward_usersMaxAggregateInputType
  }

  export type GetReward_usersAggregateType<T extends Reward_usersAggregateArgs> = {
        [P in keyof T & keyof AggregateReward_users]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReward_users[P]>
      : GetScalarType<T[P], AggregateReward_users[P]>
  }




  export type Reward_usersGroupByArgs = {
    where?: reward_usersWhereInput
    orderBy?: Enumerable<reward_usersOrderByWithAggregationInput>
    by: Array<Reward_usersScalarFieldEnum>
    having?: reward_usersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Reward_usersCountAggregateInputType | true
    _avg?: Reward_usersAvgAggregateInputType
    _sum?: Reward_usersSumAggregateInputType
    _min?: Reward_usersMinAggregateInputType
    _max?: Reward_usersMaxAggregateInputType
  }


  export type Reward_usersGroupByOutputType = {
    id: number
    user_uid: string | null
    reward_id: number | null
    amount: number
    _count: Reward_usersCountAggregateOutputType | null
    _avg: Reward_usersAvgAggregateOutputType | null
    _sum: Reward_usersSumAggregateOutputType | null
    _min: Reward_usersMinAggregateOutputType | null
    _max: Reward_usersMaxAggregateOutputType | null
  }

  type GetReward_usersGroupByPayload<T extends Reward_usersGroupByArgs> = Promise<
    Array<
      PickArray<Reward_usersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Reward_usersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Reward_usersGroupByOutputType[P]>
            : GetScalarType<T[P], Reward_usersGroupByOutputType[P]>
        }
      >
    >


  export type reward_usersSelect = {
    id?: boolean
    user_uid?: boolean
    reward_id?: boolean
    amount?: boolean
    reward?: boolean | rewardArgs
    users?: boolean | usersArgs
  }

  export type reward_usersInclude = {
    reward?: boolean | rewardArgs
    users?: boolean | usersArgs
  }

  export type reward_usersGetPayload<
    S extends boolean | null | undefined | reward_usersArgs,
    U = keyof S
      > = S extends true
        ? reward_users
    : S extends undefined
    ? never
    : S extends reward_usersArgs | reward_usersFindManyArgs
    ?'include' extends U
    ? reward_users  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'reward'
        ? rewardGetPayload<S['include'][P]> | null :
        P extends 'users'
        ? usersGetPayload<S['include'][P]> | null : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof reward_users ?reward_users [P]
  : 
          P extends 'reward'
        ? rewardGetPayload<S['select'][P]> | null :
        P extends 'users'
        ? usersGetPayload<S['select'][P]> | null : never
  } 
    : reward_users
  : reward_users


  type reward_usersCountArgs = Merge<
    Omit<reward_usersFindManyArgs, 'select' | 'include'> & {
      select?: Reward_usersCountAggregateInputType | true
    }
  >

  export interface reward_usersDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Reward_users that matches the filter.
     * @param {reward_usersFindUniqueArgs} args - Arguments to find a Reward_users
     * @example
     * // Get one Reward_users
     * const reward_users = await prisma.reward_users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends reward_usersFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, reward_usersFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'reward_users'> extends True ? CheckSelect<T, Prisma__reward_usersClient<reward_users>, Prisma__reward_usersClient<reward_usersGetPayload<T>>> : CheckSelect<T, Prisma__reward_usersClient<reward_users | null >, Prisma__reward_usersClient<reward_usersGetPayload<T> | null >>

    /**
     * Find the first Reward_users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reward_usersFindFirstArgs} args - Arguments to find a Reward_users
     * @example
     * // Get one Reward_users
     * const reward_users = await prisma.reward_users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends reward_usersFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, reward_usersFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'reward_users'> extends True ? CheckSelect<T, Prisma__reward_usersClient<reward_users>, Prisma__reward_usersClient<reward_usersGetPayload<T>>> : CheckSelect<T, Prisma__reward_usersClient<reward_users | null >, Prisma__reward_usersClient<reward_usersGetPayload<T> | null >>

    /**
     * Find zero or more Reward_users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reward_usersFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Reward_users
     * const reward_users = await prisma.reward_users.findMany()
     * 
     * // Get first 10 Reward_users
     * const reward_users = await prisma.reward_users.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const reward_usersWithIdOnly = await prisma.reward_users.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends reward_usersFindManyArgs>(
      args?: SelectSubset<T, reward_usersFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<reward_users>>, PrismaPromise<Array<reward_usersGetPayload<T>>>>

    /**
     * Create a Reward_users.
     * @param {reward_usersCreateArgs} args - Arguments to create a Reward_users.
     * @example
     * // Create one Reward_users
     * const Reward_users = await prisma.reward_users.create({
     *   data: {
     *     // ... data to create a Reward_users
     *   }
     * })
     * 
    **/
    create<T extends reward_usersCreateArgs>(
      args: SelectSubset<T, reward_usersCreateArgs>
    ): CheckSelect<T, Prisma__reward_usersClient<reward_users>, Prisma__reward_usersClient<reward_usersGetPayload<T>>>

    /**
     * Create many Reward_users.
     *     @param {reward_usersCreateManyArgs} args - Arguments to create many Reward_users.
     *     @example
     *     // Create many Reward_users
     *     const reward_users = await prisma.reward_users.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends reward_usersCreateManyArgs>(
      args?: SelectSubset<T, reward_usersCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Reward_users.
     * @param {reward_usersDeleteArgs} args - Arguments to delete one Reward_users.
     * @example
     * // Delete one Reward_users
     * const Reward_users = await prisma.reward_users.delete({
     *   where: {
     *     // ... filter to delete one Reward_users
     *   }
     * })
     * 
    **/
    delete<T extends reward_usersDeleteArgs>(
      args: SelectSubset<T, reward_usersDeleteArgs>
    ): CheckSelect<T, Prisma__reward_usersClient<reward_users>, Prisma__reward_usersClient<reward_usersGetPayload<T>>>

    /**
     * Update one Reward_users.
     * @param {reward_usersUpdateArgs} args - Arguments to update one Reward_users.
     * @example
     * // Update one Reward_users
     * const reward_users = await prisma.reward_users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends reward_usersUpdateArgs>(
      args: SelectSubset<T, reward_usersUpdateArgs>
    ): CheckSelect<T, Prisma__reward_usersClient<reward_users>, Prisma__reward_usersClient<reward_usersGetPayload<T>>>

    /**
     * Delete zero or more Reward_users.
     * @param {reward_usersDeleteManyArgs} args - Arguments to filter Reward_users to delete.
     * @example
     * // Delete a few Reward_users
     * const { count } = await prisma.reward_users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends reward_usersDeleteManyArgs>(
      args?: SelectSubset<T, reward_usersDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reward_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reward_usersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Reward_users
     * const reward_users = await prisma.reward_users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends reward_usersUpdateManyArgs>(
      args: SelectSubset<T, reward_usersUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Reward_users.
     * @param {reward_usersUpsertArgs} args - Arguments to update or create a Reward_users.
     * @example
     * // Update or create a Reward_users
     * const reward_users = await prisma.reward_users.upsert({
     *   create: {
     *     // ... data to create a Reward_users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Reward_users we want to update
     *   }
     * })
    **/
    upsert<T extends reward_usersUpsertArgs>(
      args: SelectSubset<T, reward_usersUpsertArgs>
    ): CheckSelect<T, Prisma__reward_usersClient<reward_users>, Prisma__reward_usersClient<reward_usersGetPayload<T>>>

    /**
     * Count the number of Reward_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reward_usersCountArgs} args - Arguments to filter Reward_users to count.
     * @example
     * // Count the number of Reward_users
     * const count = await prisma.reward_users.count({
     *   where: {
     *     // ... the filter for the Reward_users we want to count
     *   }
     * })
    **/
    count<T extends reward_usersCountArgs>(
      args?: Subset<T, reward_usersCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Reward_usersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Reward_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Reward_usersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Reward_usersAggregateArgs>(args: Subset<T, Reward_usersAggregateArgs>): PrismaPromise<GetReward_usersAggregateType<T>>

    /**
     * Group by Reward_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Reward_usersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Reward_usersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Reward_usersGroupByArgs['orderBy'] }
        : { orderBy?: Reward_usersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Reward_usersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReward_usersGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for reward_users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__reward_usersClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    reward<T extends rewardArgs = {}>(args?: Subset<T, rewardArgs>): CheckSelect<T, Prisma__rewardClient<reward | null >, Prisma__rewardClient<rewardGetPayload<T> | null >>;

    users<T extends usersArgs = {}>(args?: Subset<T, usersArgs>): CheckSelect<T, Prisma__usersClient<users | null >, Prisma__usersClient<usersGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * reward_users findUnique
   */
  export type reward_usersFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the reward_users
     * 
    **/
    select?: reward_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: reward_usersInclude | null
    /**
     * Throw an Error if a reward_users can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which reward_users to fetch.
     * 
    **/
    where: reward_usersWhereUniqueInput
  }


  /**
   * reward_users findFirst
   */
  export type reward_usersFindFirstArgs = {
    /**
     * Select specific fields to fetch from the reward_users
     * 
    **/
    select?: reward_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: reward_usersInclude | null
    /**
     * Throw an Error if a reward_users can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which reward_users to fetch.
     * 
    **/
    where?: reward_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reward_users to fetch.
     * 
    **/
    orderBy?: Enumerable<reward_usersOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for reward_users.
     * 
    **/
    cursor?: reward_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reward_users from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reward_users.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of reward_users.
     * 
    **/
    distinct?: Enumerable<Reward_usersScalarFieldEnum>
  }


  /**
   * reward_users findMany
   */
  export type reward_usersFindManyArgs = {
    /**
     * Select specific fields to fetch from the reward_users
     * 
    **/
    select?: reward_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: reward_usersInclude | null
    /**
     * Filter, which reward_users to fetch.
     * 
    **/
    where?: reward_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reward_users to fetch.
     * 
    **/
    orderBy?: Enumerable<reward_usersOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing reward_users.
     * 
    **/
    cursor?: reward_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reward_users from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reward_users.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Reward_usersScalarFieldEnum>
  }


  /**
   * reward_users create
   */
  export type reward_usersCreateArgs = {
    /**
     * Select specific fields to fetch from the reward_users
     * 
    **/
    select?: reward_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: reward_usersInclude | null
    /**
     * The data needed to create a reward_users.
     * 
    **/
    data: XOR<reward_usersCreateInput, reward_usersUncheckedCreateInput>
  }


  /**
   * reward_users createMany
   */
  export type reward_usersCreateManyArgs = {
    data: Enumerable<reward_usersCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * reward_users update
   */
  export type reward_usersUpdateArgs = {
    /**
     * Select specific fields to fetch from the reward_users
     * 
    **/
    select?: reward_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: reward_usersInclude | null
    /**
     * The data needed to update a reward_users.
     * 
    **/
    data: XOR<reward_usersUpdateInput, reward_usersUncheckedUpdateInput>
    /**
     * Choose, which reward_users to update.
     * 
    **/
    where: reward_usersWhereUniqueInput
  }


  /**
   * reward_users updateMany
   */
  export type reward_usersUpdateManyArgs = {
    data: XOR<reward_usersUpdateManyMutationInput, reward_usersUncheckedUpdateManyInput>
    where?: reward_usersWhereInput
  }


  /**
   * reward_users upsert
   */
  export type reward_usersUpsertArgs = {
    /**
     * Select specific fields to fetch from the reward_users
     * 
    **/
    select?: reward_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: reward_usersInclude | null
    /**
     * The filter to search for the reward_users to update in case it exists.
     * 
    **/
    where: reward_usersWhereUniqueInput
    /**
     * In case the reward_users found by the `where` argument doesn't exist, create a new reward_users with this data.
     * 
    **/
    create: XOR<reward_usersCreateInput, reward_usersUncheckedCreateInput>
    /**
     * In case the reward_users was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<reward_usersUpdateInput, reward_usersUncheckedUpdateInput>
  }


  /**
   * reward_users delete
   */
  export type reward_usersDeleteArgs = {
    /**
     * Select specific fields to fetch from the reward_users
     * 
    **/
    select?: reward_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: reward_usersInclude | null
    /**
     * Filter which reward_users to delete.
     * 
    **/
    where: reward_usersWhereUniqueInput
  }


  /**
   * reward_users deleteMany
   */
  export type reward_usersDeleteManyArgs = {
    where?: reward_usersWhereInput
  }


  /**
   * reward_users without action
   */
  export type reward_usersArgs = {
    /**
     * Select specific fields to fetch from the reward_users
     * 
    **/
    select?: reward_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: reward_usersInclude | null
  }



  /**
   * Model activity_sentences
   */


  export type AggregateActivity_sentences = {
    _count: Activity_sentencesCountAggregateOutputType | null
    _avg: Activity_sentencesAvgAggregateOutputType | null
    _sum: Activity_sentencesSumAggregateOutputType | null
    _min: Activity_sentencesMinAggregateOutputType | null
    _max: Activity_sentencesMaxAggregateOutputType | null
  }

  export type Activity_sentencesAvgAggregateOutputType = {
    id: number | null
    activity_id: number | null
    number_sentence: number | null
  }

  export type Activity_sentencesSumAggregateOutputType = {
    id: number | null
    activity_id: number | null
    number_sentence: number | null
  }

  export type Activity_sentencesMinAggregateOutputType = {
    id: number | null
    activity_id: number | null
    number_sentence: number | null
    complete_sentence: string | null
    marked_sentence: string | null
    hidden_words: string | null
    words_help: string | null
  }

  export type Activity_sentencesMaxAggregateOutputType = {
    id: number | null
    activity_id: number | null
    number_sentence: number | null
    complete_sentence: string | null
    marked_sentence: string | null
    hidden_words: string | null
    words_help: string | null
  }

  export type Activity_sentencesCountAggregateOutputType = {
    id: number
    activity_id: number
    number_sentence: number
    complete_sentence: number
    marked_sentence: number
    hidden_words: number
    words_help: number
    _all: number
  }


  export type Activity_sentencesAvgAggregateInputType = {
    id?: true
    activity_id?: true
    number_sentence?: true
  }

  export type Activity_sentencesSumAggregateInputType = {
    id?: true
    activity_id?: true
    number_sentence?: true
  }

  export type Activity_sentencesMinAggregateInputType = {
    id?: true
    activity_id?: true
    number_sentence?: true
    complete_sentence?: true
    marked_sentence?: true
    hidden_words?: true
    words_help?: true
  }

  export type Activity_sentencesMaxAggregateInputType = {
    id?: true
    activity_id?: true
    number_sentence?: true
    complete_sentence?: true
    marked_sentence?: true
    hidden_words?: true
    words_help?: true
  }

  export type Activity_sentencesCountAggregateInputType = {
    id?: true
    activity_id?: true
    number_sentence?: true
    complete_sentence?: true
    marked_sentence?: true
    hidden_words?: true
    words_help?: true
    _all?: true
  }

  export type Activity_sentencesAggregateArgs = {
    /**
     * Filter which activity_sentences to aggregate.
     * 
    **/
    where?: activity_sentencesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of activity_sentences to fetch.
     * 
    **/
    orderBy?: Enumerable<activity_sentencesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: activity_sentencesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` activity_sentences from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` activity_sentences.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned activity_sentences
    **/
    _count?: true | Activity_sentencesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Activity_sentencesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Activity_sentencesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Activity_sentencesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Activity_sentencesMaxAggregateInputType
  }

  export type GetActivity_sentencesAggregateType<T extends Activity_sentencesAggregateArgs> = {
        [P in keyof T & keyof AggregateActivity_sentences]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateActivity_sentences[P]>
      : GetScalarType<T[P], AggregateActivity_sentences[P]>
  }




  export type Activity_sentencesGroupByArgs = {
    where?: activity_sentencesWhereInput
    orderBy?: Enumerable<activity_sentencesOrderByWithAggregationInput>
    by: Array<Activity_sentencesScalarFieldEnum>
    having?: activity_sentencesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Activity_sentencesCountAggregateInputType | true
    _avg?: Activity_sentencesAvgAggregateInputType
    _sum?: Activity_sentencesSumAggregateInputType
    _min?: Activity_sentencesMinAggregateInputType
    _max?: Activity_sentencesMaxAggregateInputType
  }


  export type Activity_sentencesGroupByOutputType = {
    id: number
    activity_id: number
    number_sentence: number
    complete_sentence: string
    marked_sentence: string
    hidden_words: string
    words_help: string
    _count: Activity_sentencesCountAggregateOutputType | null
    _avg: Activity_sentencesAvgAggregateOutputType | null
    _sum: Activity_sentencesSumAggregateOutputType | null
    _min: Activity_sentencesMinAggregateOutputType | null
    _max: Activity_sentencesMaxAggregateOutputType | null
  }

  type GetActivity_sentencesGroupByPayload<T extends Activity_sentencesGroupByArgs> = Promise<
    Array<
      PickArray<Activity_sentencesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Activity_sentencesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Activity_sentencesGroupByOutputType[P]>
            : GetScalarType<T[P], Activity_sentencesGroupByOutputType[P]>
        }
      >
    >


  export type activity_sentencesSelect = {
    id?: boolean
    activity_id?: boolean
    number_sentence?: boolean
    complete_sentence?: boolean
    marked_sentence?: boolean
    hidden_words?: boolean
    words_help?: boolean
  }

  export type activity_sentencesGetPayload<
    S extends boolean | null | undefined | activity_sentencesArgs,
    U = keyof S
      > = S extends true
        ? activity_sentences
    : S extends undefined
    ? never
    : S extends activity_sentencesArgs | activity_sentencesFindManyArgs
    ?'include' extends U
    ? activity_sentences 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof activity_sentences ?activity_sentences [P]
  : 
     never
  } 
    : activity_sentences
  : activity_sentences


  type activity_sentencesCountArgs = Merge<
    Omit<activity_sentencesFindManyArgs, 'select' | 'include'> & {
      select?: Activity_sentencesCountAggregateInputType | true
    }
  >

  export interface activity_sentencesDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Activity_sentences that matches the filter.
     * @param {activity_sentencesFindUniqueArgs} args - Arguments to find a Activity_sentences
     * @example
     * // Get one Activity_sentences
     * const activity_sentences = await prisma.activity_sentences.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends activity_sentencesFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, activity_sentencesFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'activity_sentences'> extends True ? CheckSelect<T, Prisma__activity_sentencesClient<activity_sentences>, Prisma__activity_sentencesClient<activity_sentencesGetPayload<T>>> : CheckSelect<T, Prisma__activity_sentencesClient<activity_sentences | null >, Prisma__activity_sentencesClient<activity_sentencesGetPayload<T> | null >>

    /**
     * Find the first Activity_sentences that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {activity_sentencesFindFirstArgs} args - Arguments to find a Activity_sentences
     * @example
     * // Get one Activity_sentences
     * const activity_sentences = await prisma.activity_sentences.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends activity_sentencesFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, activity_sentencesFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'activity_sentences'> extends True ? CheckSelect<T, Prisma__activity_sentencesClient<activity_sentences>, Prisma__activity_sentencesClient<activity_sentencesGetPayload<T>>> : CheckSelect<T, Prisma__activity_sentencesClient<activity_sentences | null >, Prisma__activity_sentencesClient<activity_sentencesGetPayload<T> | null >>

    /**
     * Find zero or more Activity_sentences that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {activity_sentencesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Activity_sentences
     * const activity_sentences = await prisma.activity_sentences.findMany()
     * 
     * // Get first 10 Activity_sentences
     * const activity_sentences = await prisma.activity_sentences.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const activity_sentencesWithIdOnly = await prisma.activity_sentences.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends activity_sentencesFindManyArgs>(
      args?: SelectSubset<T, activity_sentencesFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<activity_sentences>>, PrismaPromise<Array<activity_sentencesGetPayload<T>>>>

    /**
     * Create a Activity_sentences.
     * @param {activity_sentencesCreateArgs} args - Arguments to create a Activity_sentences.
     * @example
     * // Create one Activity_sentences
     * const Activity_sentences = await prisma.activity_sentences.create({
     *   data: {
     *     // ... data to create a Activity_sentences
     *   }
     * })
     * 
    **/
    create<T extends activity_sentencesCreateArgs>(
      args: SelectSubset<T, activity_sentencesCreateArgs>
    ): CheckSelect<T, Prisma__activity_sentencesClient<activity_sentences>, Prisma__activity_sentencesClient<activity_sentencesGetPayload<T>>>

    /**
     * Create many Activity_sentences.
     *     @param {activity_sentencesCreateManyArgs} args - Arguments to create many Activity_sentences.
     *     @example
     *     // Create many Activity_sentences
     *     const activity_sentences = await prisma.activity_sentences.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends activity_sentencesCreateManyArgs>(
      args?: SelectSubset<T, activity_sentencesCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Activity_sentences.
     * @param {activity_sentencesDeleteArgs} args - Arguments to delete one Activity_sentences.
     * @example
     * // Delete one Activity_sentences
     * const Activity_sentences = await prisma.activity_sentences.delete({
     *   where: {
     *     // ... filter to delete one Activity_sentences
     *   }
     * })
     * 
    **/
    delete<T extends activity_sentencesDeleteArgs>(
      args: SelectSubset<T, activity_sentencesDeleteArgs>
    ): CheckSelect<T, Prisma__activity_sentencesClient<activity_sentences>, Prisma__activity_sentencesClient<activity_sentencesGetPayload<T>>>

    /**
     * Update one Activity_sentences.
     * @param {activity_sentencesUpdateArgs} args - Arguments to update one Activity_sentences.
     * @example
     * // Update one Activity_sentences
     * const activity_sentences = await prisma.activity_sentences.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends activity_sentencesUpdateArgs>(
      args: SelectSubset<T, activity_sentencesUpdateArgs>
    ): CheckSelect<T, Prisma__activity_sentencesClient<activity_sentences>, Prisma__activity_sentencesClient<activity_sentencesGetPayload<T>>>

    /**
     * Delete zero or more Activity_sentences.
     * @param {activity_sentencesDeleteManyArgs} args - Arguments to filter Activity_sentences to delete.
     * @example
     * // Delete a few Activity_sentences
     * const { count } = await prisma.activity_sentences.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends activity_sentencesDeleteManyArgs>(
      args?: SelectSubset<T, activity_sentencesDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Activity_sentences.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {activity_sentencesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Activity_sentences
     * const activity_sentences = await prisma.activity_sentences.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends activity_sentencesUpdateManyArgs>(
      args: SelectSubset<T, activity_sentencesUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Activity_sentences.
     * @param {activity_sentencesUpsertArgs} args - Arguments to update or create a Activity_sentences.
     * @example
     * // Update or create a Activity_sentences
     * const activity_sentences = await prisma.activity_sentences.upsert({
     *   create: {
     *     // ... data to create a Activity_sentences
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Activity_sentences we want to update
     *   }
     * })
    **/
    upsert<T extends activity_sentencesUpsertArgs>(
      args: SelectSubset<T, activity_sentencesUpsertArgs>
    ): CheckSelect<T, Prisma__activity_sentencesClient<activity_sentences>, Prisma__activity_sentencesClient<activity_sentencesGetPayload<T>>>

    /**
     * Count the number of Activity_sentences.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {activity_sentencesCountArgs} args - Arguments to filter Activity_sentences to count.
     * @example
     * // Count the number of Activity_sentences
     * const count = await prisma.activity_sentences.count({
     *   where: {
     *     // ... the filter for the Activity_sentences we want to count
     *   }
     * })
    **/
    count<T extends activity_sentencesCountArgs>(
      args?: Subset<T, activity_sentencesCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Activity_sentencesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Activity_sentences.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Activity_sentencesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Activity_sentencesAggregateArgs>(args: Subset<T, Activity_sentencesAggregateArgs>): PrismaPromise<GetActivity_sentencesAggregateType<T>>

    /**
     * Group by Activity_sentences.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Activity_sentencesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Activity_sentencesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Activity_sentencesGroupByArgs['orderBy'] }
        : { orderBy?: Activity_sentencesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Activity_sentencesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetActivity_sentencesGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for activity_sentences.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__activity_sentencesClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * activity_sentences findUnique
   */
  export type activity_sentencesFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the activity_sentences
     * 
    **/
    select?: activity_sentencesSelect | null
    /**
     * Throw an Error if a activity_sentences can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which activity_sentences to fetch.
     * 
    **/
    where: activity_sentencesWhereUniqueInput
  }


  /**
   * activity_sentences findFirst
   */
  export type activity_sentencesFindFirstArgs = {
    /**
     * Select specific fields to fetch from the activity_sentences
     * 
    **/
    select?: activity_sentencesSelect | null
    /**
     * Throw an Error if a activity_sentences can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which activity_sentences to fetch.
     * 
    **/
    where?: activity_sentencesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of activity_sentences to fetch.
     * 
    **/
    orderBy?: Enumerable<activity_sentencesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for activity_sentences.
     * 
    **/
    cursor?: activity_sentencesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` activity_sentences from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` activity_sentences.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of activity_sentences.
     * 
    **/
    distinct?: Enumerable<Activity_sentencesScalarFieldEnum>
  }


  /**
   * activity_sentences findMany
   */
  export type activity_sentencesFindManyArgs = {
    /**
     * Select specific fields to fetch from the activity_sentences
     * 
    **/
    select?: activity_sentencesSelect | null
    /**
     * Filter, which activity_sentences to fetch.
     * 
    **/
    where?: activity_sentencesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of activity_sentences to fetch.
     * 
    **/
    orderBy?: Enumerable<activity_sentencesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing activity_sentences.
     * 
    **/
    cursor?: activity_sentencesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` activity_sentences from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` activity_sentences.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Activity_sentencesScalarFieldEnum>
  }


  /**
   * activity_sentences create
   */
  export type activity_sentencesCreateArgs = {
    /**
     * Select specific fields to fetch from the activity_sentences
     * 
    **/
    select?: activity_sentencesSelect | null
    /**
     * The data needed to create a activity_sentences.
     * 
    **/
    data: XOR<activity_sentencesCreateInput, activity_sentencesUncheckedCreateInput>
  }


  /**
   * activity_sentences createMany
   */
  export type activity_sentencesCreateManyArgs = {
    data: Enumerable<activity_sentencesCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * activity_sentences update
   */
  export type activity_sentencesUpdateArgs = {
    /**
     * Select specific fields to fetch from the activity_sentences
     * 
    **/
    select?: activity_sentencesSelect | null
    /**
     * The data needed to update a activity_sentences.
     * 
    **/
    data: XOR<activity_sentencesUpdateInput, activity_sentencesUncheckedUpdateInput>
    /**
     * Choose, which activity_sentences to update.
     * 
    **/
    where: activity_sentencesWhereUniqueInput
  }


  /**
   * activity_sentences updateMany
   */
  export type activity_sentencesUpdateManyArgs = {
    data: XOR<activity_sentencesUpdateManyMutationInput, activity_sentencesUncheckedUpdateManyInput>
    where?: activity_sentencesWhereInput
  }


  /**
   * activity_sentences upsert
   */
  export type activity_sentencesUpsertArgs = {
    /**
     * Select specific fields to fetch from the activity_sentences
     * 
    **/
    select?: activity_sentencesSelect | null
    /**
     * The filter to search for the activity_sentences to update in case it exists.
     * 
    **/
    where: activity_sentencesWhereUniqueInput
    /**
     * In case the activity_sentences found by the `where` argument doesn't exist, create a new activity_sentences with this data.
     * 
    **/
    create: XOR<activity_sentencesCreateInput, activity_sentencesUncheckedCreateInput>
    /**
     * In case the activity_sentences was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<activity_sentencesUpdateInput, activity_sentencesUncheckedUpdateInput>
  }


  /**
   * activity_sentences delete
   */
  export type activity_sentencesDeleteArgs = {
    /**
     * Select specific fields to fetch from the activity_sentences
     * 
    **/
    select?: activity_sentencesSelect | null
    /**
     * Filter which activity_sentences to delete.
     * 
    **/
    where: activity_sentencesWhereUniqueInput
  }


  /**
   * activity_sentences deleteMany
   */
  export type activity_sentencesDeleteManyArgs = {
    where?: activity_sentencesWhereInput
  }


  /**
   * activity_sentences without action
   */
  export type activity_sentencesArgs = {
    /**
     * Select specific fields to fetch from the activity_sentences
     * 
    **/
    select?: activity_sentencesSelect | null
  }



  /**
   * Model activity_sentences_users
   */


  export type AggregateActivity_sentences_users = {
    _count: Activity_sentences_usersCountAggregateOutputType | null
    _avg: Activity_sentences_usersAvgAggregateOutputType | null
    _sum: Activity_sentences_usersSumAggregateOutputType | null
    _min: Activity_sentences_usersMinAggregateOutputType | null
    _max: Activity_sentences_usersMaxAggregateOutputType | null
  }

  export type Activity_sentences_usersAvgAggregateOutputType = {
    id: number | null
    activity_id: number | null
    value: Decimal | null
    processed: number | null
  }

  export type Activity_sentences_usersSumAggregateOutputType = {
    id: number | null
    activity_id: number | null
    value: Decimal | null
    processed: number | null
  }

  export type Activity_sentences_usersMinAggregateOutputType = {
    id: number | null
    activity_id: number | null
    user_uid: string | null
    value: Decimal | null
    processed: number | null
  }

  export type Activity_sentences_usersMaxAggregateOutputType = {
    id: number | null
    activity_id: number | null
    user_uid: string | null
    value: Decimal | null
    processed: number | null
  }

  export type Activity_sentences_usersCountAggregateOutputType = {
    id: number
    activity_id: number
    user_uid: number
    value: number
    processed: number
    _all: number
  }


  export type Activity_sentences_usersAvgAggregateInputType = {
    id?: true
    activity_id?: true
    value?: true
    processed?: true
  }

  export type Activity_sentences_usersSumAggregateInputType = {
    id?: true
    activity_id?: true
    value?: true
    processed?: true
  }

  export type Activity_sentences_usersMinAggregateInputType = {
    id?: true
    activity_id?: true
    user_uid?: true
    value?: true
    processed?: true
  }

  export type Activity_sentences_usersMaxAggregateInputType = {
    id?: true
    activity_id?: true
    user_uid?: true
    value?: true
    processed?: true
  }

  export type Activity_sentences_usersCountAggregateInputType = {
    id?: true
    activity_id?: true
    user_uid?: true
    value?: true
    processed?: true
    _all?: true
  }

  export type Activity_sentences_usersAggregateArgs = {
    /**
     * Filter which activity_sentences_users to aggregate.
     * 
    **/
    where?: activity_sentences_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of activity_sentences_users to fetch.
     * 
    **/
    orderBy?: Enumerable<activity_sentences_usersOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: activity_sentences_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` activity_sentences_users from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` activity_sentences_users.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned activity_sentences_users
    **/
    _count?: true | Activity_sentences_usersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Activity_sentences_usersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Activity_sentences_usersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Activity_sentences_usersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Activity_sentences_usersMaxAggregateInputType
  }

  export type GetActivity_sentences_usersAggregateType<T extends Activity_sentences_usersAggregateArgs> = {
        [P in keyof T & keyof AggregateActivity_sentences_users]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateActivity_sentences_users[P]>
      : GetScalarType<T[P], AggregateActivity_sentences_users[P]>
  }




  export type Activity_sentences_usersGroupByArgs = {
    where?: activity_sentences_usersWhereInput
    orderBy?: Enumerable<activity_sentences_usersOrderByWithAggregationInput>
    by: Array<Activity_sentences_usersScalarFieldEnum>
    having?: activity_sentences_usersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Activity_sentences_usersCountAggregateInputType | true
    _avg?: Activity_sentences_usersAvgAggregateInputType
    _sum?: Activity_sentences_usersSumAggregateInputType
    _min?: Activity_sentences_usersMinAggregateInputType
    _max?: Activity_sentences_usersMaxAggregateInputType
  }


  export type Activity_sentences_usersGroupByOutputType = {
    id: number
    activity_id: number | null
    user_uid: string | null
    value: Decimal | null
    processed: number | null
    _count: Activity_sentences_usersCountAggregateOutputType | null
    _avg: Activity_sentences_usersAvgAggregateOutputType | null
    _sum: Activity_sentences_usersSumAggregateOutputType | null
    _min: Activity_sentences_usersMinAggregateOutputType | null
    _max: Activity_sentences_usersMaxAggregateOutputType | null
  }

  type GetActivity_sentences_usersGroupByPayload<T extends Activity_sentences_usersGroupByArgs> = Promise<
    Array<
      PickArray<Activity_sentences_usersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Activity_sentences_usersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Activity_sentences_usersGroupByOutputType[P]>
            : GetScalarType<T[P], Activity_sentences_usersGroupByOutputType[P]>
        }
      >
    >


  export type activity_sentences_usersSelect = {
    id?: boolean
    activity_id?: boolean
    user_uid?: boolean
    value?: boolean
    processed?: boolean
    activity?: boolean | activityArgs
    users?: boolean | usersArgs
  }

  export type activity_sentences_usersInclude = {
    activity?: boolean | activityArgs
    users?: boolean | usersArgs
  }

  export type activity_sentences_usersGetPayload<
    S extends boolean | null | undefined | activity_sentences_usersArgs,
    U = keyof S
      > = S extends true
        ? activity_sentences_users
    : S extends undefined
    ? never
    : S extends activity_sentences_usersArgs | activity_sentences_usersFindManyArgs
    ?'include' extends U
    ? activity_sentences_users  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'activity'
        ? activityGetPayload<S['include'][P]> | null :
        P extends 'users'
        ? usersGetPayload<S['include'][P]> | null : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof activity_sentences_users ?activity_sentences_users [P]
  : 
          P extends 'activity'
        ? activityGetPayload<S['select'][P]> | null :
        P extends 'users'
        ? usersGetPayload<S['select'][P]> | null : never
  } 
    : activity_sentences_users
  : activity_sentences_users


  type activity_sentences_usersCountArgs = Merge<
    Omit<activity_sentences_usersFindManyArgs, 'select' | 'include'> & {
      select?: Activity_sentences_usersCountAggregateInputType | true
    }
  >

  export interface activity_sentences_usersDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Activity_sentences_users that matches the filter.
     * @param {activity_sentences_usersFindUniqueArgs} args - Arguments to find a Activity_sentences_users
     * @example
     * // Get one Activity_sentences_users
     * const activity_sentences_users = await prisma.activity_sentences_users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends activity_sentences_usersFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, activity_sentences_usersFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'activity_sentences_users'> extends True ? CheckSelect<T, Prisma__activity_sentences_usersClient<activity_sentences_users>, Prisma__activity_sentences_usersClient<activity_sentences_usersGetPayload<T>>> : CheckSelect<T, Prisma__activity_sentences_usersClient<activity_sentences_users | null >, Prisma__activity_sentences_usersClient<activity_sentences_usersGetPayload<T> | null >>

    /**
     * Find the first Activity_sentences_users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {activity_sentences_usersFindFirstArgs} args - Arguments to find a Activity_sentences_users
     * @example
     * // Get one Activity_sentences_users
     * const activity_sentences_users = await prisma.activity_sentences_users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends activity_sentences_usersFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, activity_sentences_usersFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'activity_sentences_users'> extends True ? CheckSelect<T, Prisma__activity_sentences_usersClient<activity_sentences_users>, Prisma__activity_sentences_usersClient<activity_sentences_usersGetPayload<T>>> : CheckSelect<T, Prisma__activity_sentences_usersClient<activity_sentences_users | null >, Prisma__activity_sentences_usersClient<activity_sentences_usersGetPayload<T> | null >>

    /**
     * Find zero or more Activity_sentences_users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {activity_sentences_usersFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Activity_sentences_users
     * const activity_sentences_users = await prisma.activity_sentences_users.findMany()
     * 
     * // Get first 10 Activity_sentences_users
     * const activity_sentences_users = await prisma.activity_sentences_users.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const activity_sentences_usersWithIdOnly = await prisma.activity_sentences_users.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends activity_sentences_usersFindManyArgs>(
      args?: SelectSubset<T, activity_sentences_usersFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<activity_sentences_users>>, PrismaPromise<Array<activity_sentences_usersGetPayload<T>>>>

    /**
     * Create a Activity_sentences_users.
     * @param {activity_sentences_usersCreateArgs} args - Arguments to create a Activity_sentences_users.
     * @example
     * // Create one Activity_sentences_users
     * const Activity_sentences_users = await prisma.activity_sentences_users.create({
     *   data: {
     *     // ... data to create a Activity_sentences_users
     *   }
     * })
     * 
    **/
    create<T extends activity_sentences_usersCreateArgs>(
      args: SelectSubset<T, activity_sentences_usersCreateArgs>
    ): CheckSelect<T, Prisma__activity_sentences_usersClient<activity_sentences_users>, Prisma__activity_sentences_usersClient<activity_sentences_usersGetPayload<T>>>

    /**
     * Create many Activity_sentences_users.
     *     @param {activity_sentences_usersCreateManyArgs} args - Arguments to create many Activity_sentences_users.
     *     @example
     *     // Create many Activity_sentences_users
     *     const activity_sentences_users = await prisma.activity_sentences_users.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends activity_sentences_usersCreateManyArgs>(
      args?: SelectSubset<T, activity_sentences_usersCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Activity_sentences_users.
     * @param {activity_sentences_usersDeleteArgs} args - Arguments to delete one Activity_sentences_users.
     * @example
     * // Delete one Activity_sentences_users
     * const Activity_sentences_users = await prisma.activity_sentences_users.delete({
     *   where: {
     *     // ... filter to delete one Activity_sentences_users
     *   }
     * })
     * 
    **/
    delete<T extends activity_sentences_usersDeleteArgs>(
      args: SelectSubset<T, activity_sentences_usersDeleteArgs>
    ): CheckSelect<T, Prisma__activity_sentences_usersClient<activity_sentences_users>, Prisma__activity_sentences_usersClient<activity_sentences_usersGetPayload<T>>>

    /**
     * Update one Activity_sentences_users.
     * @param {activity_sentences_usersUpdateArgs} args - Arguments to update one Activity_sentences_users.
     * @example
     * // Update one Activity_sentences_users
     * const activity_sentences_users = await prisma.activity_sentences_users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends activity_sentences_usersUpdateArgs>(
      args: SelectSubset<T, activity_sentences_usersUpdateArgs>
    ): CheckSelect<T, Prisma__activity_sentences_usersClient<activity_sentences_users>, Prisma__activity_sentences_usersClient<activity_sentences_usersGetPayload<T>>>

    /**
     * Delete zero or more Activity_sentences_users.
     * @param {activity_sentences_usersDeleteManyArgs} args - Arguments to filter Activity_sentences_users to delete.
     * @example
     * // Delete a few Activity_sentences_users
     * const { count } = await prisma.activity_sentences_users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends activity_sentences_usersDeleteManyArgs>(
      args?: SelectSubset<T, activity_sentences_usersDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Activity_sentences_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {activity_sentences_usersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Activity_sentences_users
     * const activity_sentences_users = await prisma.activity_sentences_users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends activity_sentences_usersUpdateManyArgs>(
      args: SelectSubset<T, activity_sentences_usersUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Activity_sentences_users.
     * @param {activity_sentences_usersUpsertArgs} args - Arguments to update or create a Activity_sentences_users.
     * @example
     * // Update or create a Activity_sentences_users
     * const activity_sentences_users = await prisma.activity_sentences_users.upsert({
     *   create: {
     *     // ... data to create a Activity_sentences_users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Activity_sentences_users we want to update
     *   }
     * })
    **/
    upsert<T extends activity_sentences_usersUpsertArgs>(
      args: SelectSubset<T, activity_sentences_usersUpsertArgs>
    ): CheckSelect<T, Prisma__activity_sentences_usersClient<activity_sentences_users>, Prisma__activity_sentences_usersClient<activity_sentences_usersGetPayload<T>>>

    /**
     * Count the number of Activity_sentences_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {activity_sentences_usersCountArgs} args - Arguments to filter Activity_sentences_users to count.
     * @example
     * // Count the number of Activity_sentences_users
     * const count = await prisma.activity_sentences_users.count({
     *   where: {
     *     // ... the filter for the Activity_sentences_users we want to count
     *   }
     * })
    **/
    count<T extends activity_sentences_usersCountArgs>(
      args?: Subset<T, activity_sentences_usersCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Activity_sentences_usersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Activity_sentences_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Activity_sentences_usersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Activity_sentences_usersAggregateArgs>(args: Subset<T, Activity_sentences_usersAggregateArgs>): PrismaPromise<GetActivity_sentences_usersAggregateType<T>>

    /**
     * Group by Activity_sentences_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Activity_sentences_usersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Activity_sentences_usersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Activity_sentences_usersGroupByArgs['orderBy'] }
        : { orderBy?: Activity_sentences_usersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Activity_sentences_usersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetActivity_sentences_usersGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for activity_sentences_users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__activity_sentences_usersClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    activity<T extends activityArgs = {}>(args?: Subset<T, activityArgs>): CheckSelect<T, Prisma__activityClient<activity | null >, Prisma__activityClient<activityGetPayload<T> | null >>;

    users<T extends usersArgs = {}>(args?: Subset<T, usersArgs>): CheckSelect<T, Prisma__usersClient<users | null >, Prisma__usersClient<usersGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * activity_sentences_users findUnique
   */
  export type activity_sentences_usersFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the activity_sentences_users
     * 
    **/
    select?: activity_sentences_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: activity_sentences_usersInclude | null
    /**
     * Throw an Error if a activity_sentences_users can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which activity_sentences_users to fetch.
     * 
    **/
    where: activity_sentences_usersWhereUniqueInput
  }


  /**
   * activity_sentences_users findFirst
   */
  export type activity_sentences_usersFindFirstArgs = {
    /**
     * Select specific fields to fetch from the activity_sentences_users
     * 
    **/
    select?: activity_sentences_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: activity_sentences_usersInclude | null
    /**
     * Throw an Error if a activity_sentences_users can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which activity_sentences_users to fetch.
     * 
    **/
    where?: activity_sentences_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of activity_sentences_users to fetch.
     * 
    **/
    orderBy?: Enumerable<activity_sentences_usersOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for activity_sentences_users.
     * 
    **/
    cursor?: activity_sentences_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` activity_sentences_users from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` activity_sentences_users.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of activity_sentences_users.
     * 
    **/
    distinct?: Enumerable<Activity_sentences_usersScalarFieldEnum>
  }


  /**
   * activity_sentences_users findMany
   */
  export type activity_sentences_usersFindManyArgs = {
    /**
     * Select specific fields to fetch from the activity_sentences_users
     * 
    **/
    select?: activity_sentences_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: activity_sentences_usersInclude | null
    /**
     * Filter, which activity_sentences_users to fetch.
     * 
    **/
    where?: activity_sentences_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of activity_sentences_users to fetch.
     * 
    **/
    orderBy?: Enumerable<activity_sentences_usersOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing activity_sentences_users.
     * 
    **/
    cursor?: activity_sentences_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` activity_sentences_users from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` activity_sentences_users.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Activity_sentences_usersScalarFieldEnum>
  }


  /**
   * activity_sentences_users create
   */
  export type activity_sentences_usersCreateArgs = {
    /**
     * Select specific fields to fetch from the activity_sentences_users
     * 
    **/
    select?: activity_sentences_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: activity_sentences_usersInclude | null
    /**
     * The data needed to create a activity_sentences_users.
     * 
    **/
    data: XOR<activity_sentences_usersCreateInput, activity_sentences_usersUncheckedCreateInput>
  }


  /**
   * activity_sentences_users createMany
   */
  export type activity_sentences_usersCreateManyArgs = {
    data: Enumerable<activity_sentences_usersCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * activity_sentences_users update
   */
  export type activity_sentences_usersUpdateArgs = {
    /**
     * Select specific fields to fetch from the activity_sentences_users
     * 
    **/
    select?: activity_sentences_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: activity_sentences_usersInclude | null
    /**
     * The data needed to update a activity_sentences_users.
     * 
    **/
    data: XOR<activity_sentences_usersUpdateInput, activity_sentences_usersUncheckedUpdateInput>
    /**
     * Choose, which activity_sentences_users to update.
     * 
    **/
    where: activity_sentences_usersWhereUniqueInput
  }


  /**
   * activity_sentences_users updateMany
   */
  export type activity_sentences_usersUpdateManyArgs = {
    data: XOR<activity_sentences_usersUpdateManyMutationInput, activity_sentences_usersUncheckedUpdateManyInput>
    where?: activity_sentences_usersWhereInput
  }


  /**
   * activity_sentences_users upsert
   */
  export type activity_sentences_usersUpsertArgs = {
    /**
     * Select specific fields to fetch from the activity_sentences_users
     * 
    **/
    select?: activity_sentences_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: activity_sentences_usersInclude | null
    /**
     * The filter to search for the activity_sentences_users to update in case it exists.
     * 
    **/
    where: activity_sentences_usersWhereUniqueInput
    /**
     * In case the activity_sentences_users found by the `where` argument doesn't exist, create a new activity_sentences_users with this data.
     * 
    **/
    create: XOR<activity_sentences_usersCreateInput, activity_sentences_usersUncheckedCreateInput>
    /**
     * In case the activity_sentences_users was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<activity_sentences_usersUpdateInput, activity_sentences_usersUncheckedUpdateInput>
  }


  /**
   * activity_sentences_users delete
   */
  export type activity_sentences_usersDeleteArgs = {
    /**
     * Select specific fields to fetch from the activity_sentences_users
     * 
    **/
    select?: activity_sentences_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: activity_sentences_usersInclude | null
    /**
     * Filter which activity_sentences_users to delete.
     * 
    **/
    where: activity_sentences_usersWhereUniqueInput
  }


  /**
   * activity_sentences_users deleteMany
   */
  export type activity_sentences_usersDeleteManyArgs = {
    where?: activity_sentences_usersWhereInput
  }


  /**
   * activity_sentences_users without action
   */
  export type activity_sentences_usersArgs = {
    /**
     * Select specific fields to fetch from the activity_sentences_users
     * 
    **/
    select?: activity_sentences_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: activity_sentences_usersInclude | null
  }



  /**
   * Model activity_sentences_users_response
   */


  export type AggregateActivity_sentences_users_response = {
    _count: Activity_sentences_users_responseCountAggregateOutputType | null
    _avg: Activity_sentences_users_responseAvgAggregateOutputType | null
    _sum: Activity_sentences_users_responseSumAggregateOutputType | null
    _min: Activity_sentences_users_responseMinAggregateOutputType | null
    _max: Activity_sentences_users_responseMaxAggregateOutputType | null
  }

  export type Activity_sentences_users_responseAvgAggregateOutputType = {
    id: number | null
    activity_id: number | null
    number_sentence: number | null
  }

  export type Activity_sentences_users_responseSumAggregateOutputType = {
    id: number | null
    activity_id: number | null
    number_sentence: number | null
  }

  export type Activity_sentences_users_responseMinAggregateOutputType = {
    id: number | null
    activity_id: number | null
    user_uid: string | null
    number_sentence: number | null
    sentences_informed: string | null
    comments: string | null
  }

  export type Activity_sentences_users_responseMaxAggregateOutputType = {
    id: number | null
    activity_id: number | null
    user_uid: string | null
    number_sentence: number | null
    sentences_informed: string | null
    comments: string | null
  }

  export type Activity_sentences_users_responseCountAggregateOutputType = {
    id: number
    activity_id: number
    user_uid: number
    number_sentence: number
    sentences_informed: number
    comments: number
    _all: number
  }


  export type Activity_sentences_users_responseAvgAggregateInputType = {
    id?: true
    activity_id?: true
    number_sentence?: true
  }

  export type Activity_sentences_users_responseSumAggregateInputType = {
    id?: true
    activity_id?: true
    number_sentence?: true
  }

  export type Activity_sentences_users_responseMinAggregateInputType = {
    id?: true
    activity_id?: true
    user_uid?: true
    number_sentence?: true
    sentences_informed?: true
    comments?: true
  }

  export type Activity_sentences_users_responseMaxAggregateInputType = {
    id?: true
    activity_id?: true
    user_uid?: true
    number_sentence?: true
    sentences_informed?: true
    comments?: true
  }

  export type Activity_sentences_users_responseCountAggregateInputType = {
    id?: true
    activity_id?: true
    user_uid?: true
    number_sentence?: true
    sentences_informed?: true
    comments?: true
    _all?: true
  }

  export type Activity_sentences_users_responseAggregateArgs = {
    /**
     * Filter which activity_sentences_users_response to aggregate.
     * 
    **/
    where?: activity_sentences_users_responseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of activity_sentences_users_responses to fetch.
     * 
    **/
    orderBy?: Enumerable<activity_sentences_users_responseOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: activity_sentences_users_responseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` activity_sentences_users_responses from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` activity_sentences_users_responses.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned activity_sentences_users_responses
    **/
    _count?: true | Activity_sentences_users_responseCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Activity_sentences_users_responseAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Activity_sentences_users_responseSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Activity_sentences_users_responseMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Activity_sentences_users_responseMaxAggregateInputType
  }

  export type GetActivity_sentences_users_responseAggregateType<T extends Activity_sentences_users_responseAggregateArgs> = {
        [P in keyof T & keyof AggregateActivity_sentences_users_response]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateActivity_sentences_users_response[P]>
      : GetScalarType<T[P], AggregateActivity_sentences_users_response[P]>
  }




  export type Activity_sentences_users_responseGroupByArgs = {
    where?: activity_sentences_users_responseWhereInput
    orderBy?: Enumerable<activity_sentences_users_responseOrderByWithAggregationInput>
    by: Array<Activity_sentences_users_responseScalarFieldEnum>
    having?: activity_sentences_users_responseScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Activity_sentences_users_responseCountAggregateInputType | true
    _avg?: Activity_sentences_users_responseAvgAggregateInputType
    _sum?: Activity_sentences_users_responseSumAggregateInputType
    _min?: Activity_sentences_users_responseMinAggregateInputType
    _max?: Activity_sentences_users_responseMaxAggregateInputType
  }


  export type Activity_sentences_users_responseGroupByOutputType = {
    id: number
    activity_id: number | null
    user_uid: string | null
    number_sentence: number
    sentences_informed: string
    comments: string | null
    _count: Activity_sentences_users_responseCountAggregateOutputType | null
    _avg: Activity_sentences_users_responseAvgAggregateOutputType | null
    _sum: Activity_sentences_users_responseSumAggregateOutputType | null
    _min: Activity_sentences_users_responseMinAggregateOutputType | null
    _max: Activity_sentences_users_responseMaxAggregateOutputType | null
  }

  type GetActivity_sentences_users_responseGroupByPayload<T extends Activity_sentences_users_responseGroupByArgs> = Promise<
    Array<
      PickArray<Activity_sentences_users_responseGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Activity_sentences_users_responseGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Activity_sentences_users_responseGroupByOutputType[P]>
            : GetScalarType<T[P], Activity_sentences_users_responseGroupByOutputType[P]>
        }
      >
    >


  export type activity_sentences_users_responseSelect = {
    id?: boolean
    activity_id?: boolean
    user_uid?: boolean
    number_sentence?: boolean
    sentences_informed?: boolean
    comments?: boolean
    activity?: boolean | activityArgs
    users?: boolean | usersArgs
  }

  export type activity_sentences_users_responseInclude = {
    activity?: boolean | activityArgs
    users?: boolean | usersArgs
  }

  export type activity_sentences_users_responseGetPayload<
    S extends boolean | null | undefined | activity_sentences_users_responseArgs,
    U = keyof S
      > = S extends true
        ? activity_sentences_users_response
    : S extends undefined
    ? never
    : S extends activity_sentences_users_responseArgs | activity_sentences_users_responseFindManyArgs
    ?'include' extends U
    ? activity_sentences_users_response  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'activity'
        ? activityGetPayload<S['include'][P]> | null :
        P extends 'users'
        ? usersGetPayload<S['include'][P]> | null : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof activity_sentences_users_response ?activity_sentences_users_response [P]
  : 
          P extends 'activity'
        ? activityGetPayload<S['select'][P]> | null :
        P extends 'users'
        ? usersGetPayload<S['select'][P]> | null : never
  } 
    : activity_sentences_users_response
  : activity_sentences_users_response


  type activity_sentences_users_responseCountArgs = Merge<
    Omit<activity_sentences_users_responseFindManyArgs, 'select' | 'include'> & {
      select?: Activity_sentences_users_responseCountAggregateInputType | true
    }
  >

  export interface activity_sentences_users_responseDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Activity_sentences_users_response that matches the filter.
     * @param {activity_sentences_users_responseFindUniqueArgs} args - Arguments to find a Activity_sentences_users_response
     * @example
     * // Get one Activity_sentences_users_response
     * const activity_sentences_users_response = await prisma.activity_sentences_users_response.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends activity_sentences_users_responseFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, activity_sentences_users_responseFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'activity_sentences_users_response'> extends True ? CheckSelect<T, Prisma__activity_sentences_users_responseClient<activity_sentences_users_response>, Prisma__activity_sentences_users_responseClient<activity_sentences_users_responseGetPayload<T>>> : CheckSelect<T, Prisma__activity_sentences_users_responseClient<activity_sentences_users_response | null >, Prisma__activity_sentences_users_responseClient<activity_sentences_users_responseGetPayload<T> | null >>

    /**
     * Find the first Activity_sentences_users_response that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {activity_sentences_users_responseFindFirstArgs} args - Arguments to find a Activity_sentences_users_response
     * @example
     * // Get one Activity_sentences_users_response
     * const activity_sentences_users_response = await prisma.activity_sentences_users_response.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends activity_sentences_users_responseFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, activity_sentences_users_responseFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'activity_sentences_users_response'> extends True ? CheckSelect<T, Prisma__activity_sentences_users_responseClient<activity_sentences_users_response>, Prisma__activity_sentences_users_responseClient<activity_sentences_users_responseGetPayload<T>>> : CheckSelect<T, Prisma__activity_sentences_users_responseClient<activity_sentences_users_response | null >, Prisma__activity_sentences_users_responseClient<activity_sentences_users_responseGetPayload<T> | null >>

    /**
     * Find zero or more Activity_sentences_users_responses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {activity_sentences_users_responseFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Activity_sentences_users_responses
     * const activity_sentences_users_responses = await prisma.activity_sentences_users_response.findMany()
     * 
     * // Get first 10 Activity_sentences_users_responses
     * const activity_sentences_users_responses = await prisma.activity_sentences_users_response.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const activity_sentences_users_responseWithIdOnly = await prisma.activity_sentences_users_response.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends activity_sentences_users_responseFindManyArgs>(
      args?: SelectSubset<T, activity_sentences_users_responseFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<activity_sentences_users_response>>, PrismaPromise<Array<activity_sentences_users_responseGetPayload<T>>>>

    /**
     * Create a Activity_sentences_users_response.
     * @param {activity_sentences_users_responseCreateArgs} args - Arguments to create a Activity_sentences_users_response.
     * @example
     * // Create one Activity_sentences_users_response
     * const Activity_sentences_users_response = await prisma.activity_sentences_users_response.create({
     *   data: {
     *     // ... data to create a Activity_sentences_users_response
     *   }
     * })
     * 
    **/
    create<T extends activity_sentences_users_responseCreateArgs>(
      args: SelectSubset<T, activity_sentences_users_responseCreateArgs>
    ): CheckSelect<T, Prisma__activity_sentences_users_responseClient<activity_sentences_users_response>, Prisma__activity_sentences_users_responseClient<activity_sentences_users_responseGetPayload<T>>>

    /**
     * Create many Activity_sentences_users_responses.
     *     @param {activity_sentences_users_responseCreateManyArgs} args - Arguments to create many Activity_sentences_users_responses.
     *     @example
     *     // Create many Activity_sentences_users_responses
     *     const activity_sentences_users_response = await prisma.activity_sentences_users_response.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends activity_sentences_users_responseCreateManyArgs>(
      args?: SelectSubset<T, activity_sentences_users_responseCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Activity_sentences_users_response.
     * @param {activity_sentences_users_responseDeleteArgs} args - Arguments to delete one Activity_sentences_users_response.
     * @example
     * // Delete one Activity_sentences_users_response
     * const Activity_sentences_users_response = await prisma.activity_sentences_users_response.delete({
     *   where: {
     *     // ... filter to delete one Activity_sentences_users_response
     *   }
     * })
     * 
    **/
    delete<T extends activity_sentences_users_responseDeleteArgs>(
      args: SelectSubset<T, activity_sentences_users_responseDeleteArgs>
    ): CheckSelect<T, Prisma__activity_sentences_users_responseClient<activity_sentences_users_response>, Prisma__activity_sentences_users_responseClient<activity_sentences_users_responseGetPayload<T>>>

    /**
     * Update one Activity_sentences_users_response.
     * @param {activity_sentences_users_responseUpdateArgs} args - Arguments to update one Activity_sentences_users_response.
     * @example
     * // Update one Activity_sentences_users_response
     * const activity_sentences_users_response = await prisma.activity_sentences_users_response.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends activity_sentences_users_responseUpdateArgs>(
      args: SelectSubset<T, activity_sentences_users_responseUpdateArgs>
    ): CheckSelect<T, Prisma__activity_sentences_users_responseClient<activity_sentences_users_response>, Prisma__activity_sentences_users_responseClient<activity_sentences_users_responseGetPayload<T>>>

    /**
     * Delete zero or more Activity_sentences_users_responses.
     * @param {activity_sentences_users_responseDeleteManyArgs} args - Arguments to filter Activity_sentences_users_responses to delete.
     * @example
     * // Delete a few Activity_sentences_users_responses
     * const { count } = await prisma.activity_sentences_users_response.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends activity_sentences_users_responseDeleteManyArgs>(
      args?: SelectSubset<T, activity_sentences_users_responseDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Activity_sentences_users_responses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {activity_sentences_users_responseUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Activity_sentences_users_responses
     * const activity_sentences_users_response = await prisma.activity_sentences_users_response.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends activity_sentences_users_responseUpdateManyArgs>(
      args: SelectSubset<T, activity_sentences_users_responseUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Activity_sentences_users_response.
     * @param {activity_sentences_users_responseUpsertArgs} args - Arguments to update or create a Activity_sentences_users_response.
     * @example
     * // Update or create a Activity_sentences_users_response
     * const activity_sentences_users_response = await prisma.activity_sentences_users_response.upsert({
     *   create: {
     *     // ... data to create a Activity_sentences_users_response
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Activity_sentences_users_response we want to update
     *   }
     * })
    **/
    upsert<T extends activity_sentences_users_responseUpsertArgs>(
      args: SelectSubset<T, activity_sentences_users_responseUpsertArgs>
    ): CheckSelect<T, Prisma__activity_sentences_users_responseClient<activity_sentences_users_response>, Prisma__activity_sentences_users_responseClient<activity_sentences_users_responseGetPayload<T>>>

    /**
     * Count the number of Activity_sentences_users_responses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {activity_sentences_users_responseCountArgs} args - Arguments to filter Activity_sentences_users_responses to count.
     * @example
     * // Count the number of Activity_sentences_users_responses
     * const count = await prisma.activity_sentences_users_response.count({
     *   where: {
     *     // ... the filter for the Activity_sentences_users_responses we want to count
     *   }
     * })
    **/
    count<T extends activity_sentences_users_responseCountArgs>(
      args?: Subset<T, activity_sentences_users_responseCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Activity_sentences_users_responseCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Activity_sentences_users_response.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Activity_sentences_users_responseAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Activity_sentences_users_responseAggregateArgs>(args: Subset<T, Activity_sentences_users_responseAggregateArgs>): PrismaPromise<GetActivity_sentences_users_responseAggregateType<T>>

    /**
     * Group by Activity_sentences_users_response.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Activity_sentences_users_responseGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Activity_sentences_users_responseGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Activity_sentences_users_responseGroupByArgs['orderBy'] }
        : { orderBy?: Activity_sentences_users_responseGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Activity_sentences_users_responseGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetActivity_sentences_users_responseGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for activity_sentences_users_response.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__activity_sentences_users_responseClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    activity<T extends activityArgs = {}>(args?: Subset<T, activityArgs>): CheckSelect<T, Prisma__activityClient<activity | null >, Prisma__activityClient<activityGetPayload<T> | null >>;

    users<T extends usersArgs = {}>(args?: Subset<T, usersArgs>): CheckSelect<T, Prisma__usersClient<users | null >, Prisma__usersClient<usersGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * activity_sentences_users_response findUnique
   */
  export type activity_sentences_users_responseFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the activity_sentences_users_response
     * 
    **/
    select?: activity_sentences_users_responseSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: activity_sentences_users_responseInclude | null
    /**
     * Throw an Error if a activity_sentences_users_response can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which activity_sentences_users_response to fetch.
     * 
    **/
    where: activity_sentences_users_responseWhereUniqueInput
  }


  /**
   * activity_sentences_users_response findFirst
   */
  export type activity_sentences_users_responseFindFirstArgs = {
    /**
     * Select specific fields to fetch from the activity_sentences_users_response
     * 
    **/
    select?: activity_sentences_users_responseSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: activity_sentences_users_responseInclude | null
    /**
     * Throw an Error if a activity_sentences_users_response can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which activity_sentences_users_response to fetch.
     * 
    **/
    where?: activity_sentences_users_responseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of activity_sentences_users_responses to fetch.
     * 
    **/
    orderBy?: Enumerable<activity_sentences_users_responseOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for activity_sentences_users_responses.
     * 
    **/
    cursor?: activity_sentences_users_responseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` activity_sentences_users_responses from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` activity_sentences_users_responses.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of activity_sentences_users_responses.
     * 
    **/
    distinct?: Enumerable<Activity_sentences_users_responseScalarFieldEnum>
  }


  /**
   * activity_sentences_users_response findMany
   */
  export type activity_sentences_users_responseFindManyArgs = {
    /**
     * Select specific fields to fetch from the activity_sentences_users_response
     * 
    **/
    select?: activity_sentences_users_responseSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: activity_sentences_users_responseInclude | null
    /**
     * Filter, which activity_sentences_users_responses to fetch.
     * 
    **/
    where?: activity_sentences_users_responseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of activity_sentences_users_responses to fetch.
     * 
    **/
    orderBy?: Enumerable<activity_sentences_users_responseOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing activity_sentences_users_responses.
     * 
    **/
    cursor?: activity_sentences_users_responseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` activity_sentences_users_responses from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` activity_sentences_users_responses.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Activity_sentences_users_responseScalarFieldEnum>
  }


  /**
   * activity_sentences_users_response create
   */
  export type activity_sentences_users_responseCreateArgs = {
    /**
     * Select specific fields to fetch from the activity_sentences_users_response
     * 
    **/
    select?: activity_sentences_users_responseSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: activity_sentences_users_responseInclude | null
    /**
     * The data needed to create a activity_sentences_users_response.
     * 
    **/
    data: XOR<activity_sentences_users_responseCreateInput, activity_sentences_users_responseUncheckedCreateInput>
  }


  /**
   * activity_sentences_users_response createMany
   */
  export type activity_sentences_users_responseCreateManyArgs = {
    data: Enumerable<activity_sentences_users_responseCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * activity_sentences_users_response update
   */
  export type activity_sentences_users_responseUpdateArgs = {
    /**
     * Select specific fields to fetch from the activity_sentences_users_response
     * 
    **/
    select?: activity_sentences_users_responseSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: activity_sentences_users_responseInclude | null
    /**
     * The data needed to update a activity_sentences_users_response.
     * 
    **/
    data: XOR<activity_sentences_users_responseUpdateInput, activity_sentences_users_responseUncheckedUpdateInput>
    /**
     * Choose, which activity_sentences_users_response to update.
     * 
    **/
    where: activity_sentences_users_responseWhereUniqueInput
  }


  /**
   * activity_sentences_users_response updateMany
   */
  export type activity_sentences_users_responseUpdateManyArgs = {
    data: XOR<activity_sentences_users_responseUpdateManyMutationInput, activity_sentences_users_responseUncheckedUpdateManyInput>
    where?: activity_sentences_users_responseWhereInput
  }


  /**
   * activity_sentences_users_response upsert
   */
  export type activity_sentences_users_responseUpsertArgs = {
    /**
     * Select specific fields to fetch from the activity_sentences_users_response
     * 
    **/
    select?: activity_sentences_users_responseSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: activity_sentences_users_responseInclude | null
    /**
     * The filter to search for the activity_sentences_users_response to update in case it exists.
     * 
    **/
    where: activity_sentences_users_responseWhereUniqueInput
    /**
     * In case the activity_sentences_users_response found by the `where` argument doesn't exist, create a new activity_sentences_users_response with this data.
     * 
    **/
    create: XOR<activity_sentences_users_responseCreateInput, activity_sentences_users_responseUncheckedCreateInput>
    /**
     * In case the activity_sentences_users_response was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<activity_sentences_users_responseUpdateInput, activity_sentences_users_responseUncheckedUpdateInput>
  }


  /**
   * activity_sentences_users_response delete
   */
  export type activity_sentences_users_responseDeleteArgs = {
    /**
     * Select specific fields to fetch from the activity_sentences_users_response
     * 
    **/
    select?: activity_sentences_users_responseSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: activity_sentences_users_responseInclude | null
    /**
     * Filter which activity_sentences_users_response to delete.
     * 
    **/
    where: activity_sentences_users_responseWhereUniqueInput
  }


  /**
   * activity_sentences_users_response deleteMany
   */
  export type activity_sentences_users_responseDeleteManyArgs = {
    where?: activity_sentences_users_responseWhereInput
  }


  /**
   * activity_sentences_users_response without action
   */
  export type activity_sentences_users_responseArgs = {
    /**
     * Select specific fields to fetch from the activity_sentences_users_response
     * 
    **/
    select?: activity_sentences_users_responseSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: activity_sentences_users_responseInclude | null
  }



  /**
   * Model notification
   */


  export type AggregateNotification = {
    _count: NotificationCountAggregateOutputType | null
    _avg: NotificationAvgAggregateOutputType | null
    _sum: NotificationSumAggregateOutputType | null
    _min: NotificationMinAggregateOutputType | null
    _max: NotificationMaxAggregateOutputType | null
  }

  export type NotificationAvgAggregateOutputType = {
    id: number | null
  }

  export type NotificationSumAggregateOutputType = {
    id: number | null
  }

  export type NotificationMinAggregateOutputType = {
    id: number | null
    sender_uid: string | null
    recipient_uid: string | null
    notification_text: string | null
    notification_date: Date | null
    image_reference: string | null
    image_url: string | null
    image_type: string | null
    image_size_wh: string | null
  }

  export type NotificationMaxAggregateOutputType = {
    id: number | null
    sender_uid: string | null
    recipient_uid: string | null
    notification_text: string | null
    notification_date: Date | null
    image_reference: string | null
    image_url: string | null
    image_type: string | null
    image_size_wh: string | null
  }

  export type NotificationCountAggregateOutputType = {
    id: number
    sender_uid: number
    recipient_uid: number
    notification_text: number
    notification_date: number
    image_reference: number
    image_url: number
    image_type: number
    image_size_wh: number
    _all: number
  }


  export type NotificationAvgAggregateInputType = {
    id?: true
  }

  export type NotificationSumAggregateInputType = {
    id?: true
  }

  export type NotificationMinAggregateInputType = {
    id?: true
    sender_uid?: true
    recipient_uid?: true
    notification_text?: true
    notification_date?: true
    image_reference?: true
    image_url?: true
    image_type?: true
    image_size_wh?: true
  }

  export type NotificationMaxAggregateInputType = {
    id?: true
    sender_uid?: true
    recipient_uid?: true
    notification_text?: true
    notification_date?: true
    image_reference?: true
    image_url?: true
    image_type?: true
    image_size_wh?: true
  }

  export type NotificationCountAggregateInputType = {
    id?: true
    sender_uid?: true
    recipient_uid?: true
    notification_text?: true
    notification_date?: true
    image_reference?: true
    image_url?: true
    image_type?: true
    image_size_wh?: true
    _all?: true
  }

  export type NotificationAggregateArgs = {
    /**
     * Filter which notification to aggregate.
     * 
    **/
    where?: notificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notifications to fetch.
     * 
    **/
    orderBy?: Enumerable<notificationOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: notificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notifications from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notifications.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned notifications
    **/
    _count?: true | NotificationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: NotificationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: NotificationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NotificationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NotificationMaxAggregateInputType
  }

  export type GetNotificationAggregateType<T extends NotificationAggregateArgs> = {
        [P in keyof T & keyof AggregateNotification]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNotification[P]>
      : GetScalarType<T[P], AggregateNotification[P]>
  }




  export type NotificationGroupByArgs = {
    where?: notificationWhereInput
    orderBy?: Enumerable<notificationOrderByWithAggregationInput>
    by: Array<NotificationScalarFieldEnum>
    having?: notificationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NotificationCountAggregateInputType | true
    _avg?: NotificationAvgAggregateInputType
    _sum?: NotificationSumAggregateInputType
    _min?: NotificationMinAggregateInputType
    _max?: NotificationMaxAggregateInputType
  }


  export type NotificationGroupByOutputType = {
    id: number
    sender_uid: string
    recipient_uid: string
    notification_text: string
    notification_date: Date
    image_reference: string | null
    image_url: string | null
    image_type: string | null
    image_size_wh: string | null
    _count: NotificationCountAggregateOutputType | null
    _avg: NotificationAvgAggregateOutputType | null
    _sum: NotificationSumAggregateOutputType | null
    _min: NotificationMinAggregateOutputType | null
    _max: NotificationMaxAggregateOutputType | null
  }

  type GetNotificationGroupByPayload<T extends NotificationGroupByArgs> = Promise<
    Array<
      PickArray<NotificationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NotificationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NotificationGroupByOutputType[P]>
            : GetScalarType<T[P], NotificationGroupByOutputType[P]>
        }
      >
    >


  export type notificationSelect = {
    id?: boolean
    sender_uid?: boolean
    recipient_uid?: boolean
    notification_text?: boolean
    notification_date?: boolean
    image_reference?: boolean
    image_url?: boolean
    image_type?: boolean
    image_size_wh?: boolean
    users?: boolean | usersArgs
  }

  export type notificationInclude = {
    users?: boolean | usersArgs
  }

  export type notificationGetPayload<
    S extends boolean | null | undefined | notificationArgs,
    U = keyof S
      > = S extends true
        ? notification
    : S extends undefined
    ? never
    : S extends notificationArgs | notificationFindManyArgs
    ?'include' extends U
    ? notification  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'users'
        ? usersGetPayload<S['include'][P]> : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof notification ?notification [P]
  : 
          P extends 'users'
        ? usersGetPayload<S['select'][P]> : never
  } 
    : notification
  : notification


  type notificationCountArgs = Merge<
    Omit<notificationFindManyArgs, 'select' | 'include'> & {
      select?: NotificationCountAggregateInputType | true
    }
  >

  export interface notificationDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Notification that matches the filter.
     * @param {notificationFindUniqueArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends notificationFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, notificationFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'notification'> extends True ? CheckSelect<T, Prisma__notificationClient<notification>, Prisma__notificationClient<notificationGetPayload<T>>> : CheckSelect<T, Prisma__notificationClient<notification | null >, Prisma__notificationClient<notificationGetPayload<T> | null >>

    /**
     * Find the first Notification that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationFindFirstArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends notificationFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, notificationFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'notification'> extends True ? CheckSelect<T, Prisma__notificationClient<notification>, Prisma__notificationClient<notificationGetPayload<T>>> : CheckSelect<T, Prisma__notificationClient<notification | null >, Prisma__notificationClient<notificationGetPayload<T> | null >>

    /**
     * Find zero or more Notifications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Notifications
     * const notifications = await prisma.notification.findMany()
     * 
     * // Get first 10 Notifications
     * const notifications = await prisma.notification.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const notificationWithIdOnly = await prisma.notification.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends notificationFindManyArgs>(
      args?: SelectSubset<T, notificationFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<notification>>, PrismaPromise<Array<notificationGetPayload<T>>>>

    /**
     * Create a Notification.
     * @param {notificationCreateArgs} args - Arguments to create a Notification.
     * @example
     * // Create one Notification
     * const Notification = await prisma.notification.create({
     *   data: {
     *     // ... data to create a Notification
     *   }
     * })
     * 
    **/
    create<T extends notificationCreateArgs>(
      args: SelectSubset<T, notificationCreateArgs>
    ): CheckSelect<T, Prisma__notificationClient<notification>, Prisma__notificationClient<notificationGetPayload<T>>>

    /**
     * Create many Notifications.
     *     @param {notificationCreateManyArgs} args - Arguments to create many Notifications.
     *     @example
     *     // Create many Notifications
     *     const notification = await prisma.notification.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends notificationCreateManyArgs>(
      args?: SelectSubset<T, notificationCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Notification.
     * @param {notificationDeleteArgs} args - Arguments to delete one Notification.
     * @example
     * // Delete one Notification
     * const Notification = await prisma.notification.delete({
     *   where: {
     *     // ... filter to delete one Notification
     *   }
     * })
     * 
    **/
    delete<T extends notificationDeleteArgs>(
      args: SelectSubset<T, notificationDeleteArgs>
    ): CheckSelect<T, Prisma__notificationClient<notification>, Prisma__notificationClient<notificationGetPayload<T>>>

    /**
     * Update one Notification.
     * @param {notificationUpdateArgs} args - Arguments to update one Notification.
     * @example
     * // Update one Notification
     * const notification = await prisma.notification.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends notificationUpdateArgs>(
      args: SelectSubset<T, notificationUpdateArgs>
    ): CheckSelect<T, Prisma__notificationClient<notification>, Prisma__notificationClient<notificationGetPayload<T>>>

    /**
     * Delete zero or more Notifications.
     * @param {notificationDeleteManyArgs} args - Arguments to filter Notifications to delete.
     * @example
     * // Delete a few Notifications
     * const { count } = await prisma.notification.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends notificationDeleteManyArgs>(
      args?: SelectSubset<T, notificationDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Notifications
     * const notification = await prisma.notification.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends notificationUpdateManyArgs>(
      args: SelectSubset<T, notificationUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Notification.
     * @param {notificationUpsertArgs} args - Arguments to update or create a Notification.
     * @example
     * // Update or create a Notification
     * const notification = await prisma.notification.upsert({
     *   create: {
     *     // ... data to create a Notification
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Notification we want to update
     *   }
     * })
    **/
    upsert<T extends notificationUpsertArgs>(
      args: SelectSubset<T, notificationUpsertArgs>
    ): CheckSelect<T, Prisma__notificationClient<notification>, Prisma__notificationClient<notificationGetPayload<T>>>

    /**
     * Count the number of Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationCountArgs} args - Arguments to filter Notifications to count.
     * @example
     * // Count the number of Notifications
     * const count = await prisma.notification.count({
     *   where: {
     *     // ... the filter for the Notifications we want to count
     *   }
     * })
    **/
    count<T extends notificationCountArgs>(
      args?: Subset<T, notificationCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NotificationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Notification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NotificationAggregateArgs>(args: Subset<T, NotificationAggregateArgs>): PrismaPromise<GetNotificationAggregateType<T>>

    /**
     * Group by Notification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends NotificationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: NotificationGroupByArgs['orderBy'] }
        : { orderBy?: NotificationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, NotificationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNotificationGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for notification.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__notificationClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    users<T extends usersArgs = {}>(args?: Subset<T, usersArgs>): CheckSelect<T, Prisma__usersClient<users | null >, Prisma__usersClient<usersGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * notification findUnique
   */
  export type notificationFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the notification
     * 
    **/
    select?: notificationSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: notificationInclude | null
    /**
     * Throw an Error if a notification can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which notification to fetch.
     * 
    **/
    where: notificationWhereUniqueInput
  }


  /**
   * notification findFirst
   */
  export type notificationFindFirstArgs = {
    /**
     * Select specific fields to fetch from the notification
     * 
    **/
    select?: notificationSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: notificationInclude | null
    /**
     * Throw an Error if a notification can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which notification to fetch.
     * 
    **/
    where?: notificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notifications to fetch.
     * 
    **/
    orderBy?: Enumerable<notificationOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for notifications.
     * 
    **/
    cursor?: notificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notifications from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notifications.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of notifications.
     * 
    **/
    distinct?: Enumerable<NotificationScalarFieldEnum>
  }


  /**
   * notification findMany
   */
  export type notificationFindManyArgs = {
    /**
     * Select specific fields to fetch from the notification
     * 
    **/
    select?: notificationSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: notificationInclude | null
    /**
     * Filter, which notifications to fetch.
     * 
    **/
    where?: notificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notifications to fetch.
     * 
    **/
    orderBy?: Enumerable<notificationOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing notifications.
     * 
    **/
    cursor?: notificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notifications from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notifications.
     * 
    **/
    skip?: number
    distinct?: Enumerable<NotificationScalarFieldEnum>
  }


  /**
   * notification create
   */
  export type notificationCreateArgs = {
    /**
     * Select specific fields to fetch from the notification
     * 
    **/
    select?: notificationSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: notificationInclude | null
    /**
     * The data needed to create a notification.
     * 
    **/
    data: XOR<notificationCreateInput, notificationUncheckedCreateInput>
  }


  /**
   * notification createMany
   */
  export type notificationCreateManyArgs = {
    data: Enumerable<notificationCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * notification update
   */
  export type notificationUpdateArgs = {
    /**
     * Select specific fields to fetch from the notification
     * 
    **/
    select?: notificationSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: notificationInclude | null
    /**
     * The data needed to update a notification.
     * 
    **/
    data: XOR<notificationUpdateInput, notificationUncheckedUpdateInput>
    /**
     * Choose, which notification to update.
     * 
    **/
    where: notificationWhereUniqueInput
  }


  /**
   * notification updateMany
   */
  export type notificationUpdateManyArgs = {
    data: XOR<notificationUpdateManyMutationInput, notificationUncheckedUpdateManyInput>
    where?: notificationWhereInput
  }


  /**
   * notification upsert
   */
  export type notificationUpsertArgs = {
    /**
     * Select specific fields to fetch from the notification
     * 
    **/
    select?: notificationSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: notificationInclude | null
    /**
     * The filter to search for the notification to update in case it exists.
     * 
    **/
    where: notificationWhereUniqueInput
    /**
     * In case the notification found by the `where` argument doesn't exist, create a new notification with this data.
     * 
    **/
    create: XOR<notificationCreateInput, notificationUncheckedCreateInput>
    /**
     * In case the notification was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<notificationUpdateInput, notificationUncheckedUpdateInput>
  }


  /**
   * notification delete
   */
  export type notificationDeleteArgs = {
    /**
     * Select specific fields to fetch from the notification
     * 
    **/
    select?: notificationSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: notificationInclude | null
    /**
     * Filter which notification to delete.
     * 
    **/
    where: notificationWhereUniqueInput
  }


  /**
   * notification deleteMany
   */
  export type notificationDeleteManyArgs = {
    where?: notificationWhereInput
  }


  /**
   * notification without action
   */
  export type notificationArgs = {
    /**
     * Select specific fields to fetch from the notification
     * 
    **/
    select?: notificationSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: notificationInclude | null
  }



  /**
   * Model eduvida
   */


  export type AggregateEduvida = {
    _count: EduvidaCountAggregateOutputType | null
    _avg: EduvidaAvgAggregateOutputType | null
    _sum: EduvidaSumAggregateOutputType | null
    _min: EduvidaMinAggregateOutputType | null
    _max: EduvidaMaxAggregateOutputType | null
  }

  export type EduvidaAvgAggregateOutputType = {
    id: number | null
    help_close: number | null
  }

  export type EduvidaSumAggregateOutputType = {
    id: number | null
    help_close: number | null
  }

  export type EduvidaMinAggregateOutputType = {
    id: number | null
    author_uid: string | null
    title: string | null
    help_text: string | null
    help_type: string | null
    help_close: number | null
    created: Date | null
    image_reference: string | null
    image_url: string | null
    image_type: string | null
    image_size_wh: string | null
  }

  export type EduvidaMaxAggregateOutputType = {
    id: number | null
    author_uid: string | null
    title: string | null
    help_text: string | null
    help_type: string | null
    help_close: number | null
    created: Date | null
    image_reference: string | null
    image_url: string | null
    image_type: string | null
    image_size_wh: string | null
  }

  export type EduvidaCountAggregateOutputType = {
    id: number
    author_uid: number
    title: number
    help_text: number
    help_type: number
    help_close: number
    created: number
    image_reference: number
    image_url: number
    image_type: number
    image_size_wh: number
    _all: number
  }


  export type EduvidaAvgAggregateInputType = {
    id?: true
    help_close?: true
  }

  export type EduvidaSumAggregateInputType = {
    id?: true
    help_close?: true
  }

  export type EduvidaMinAggregateInputType = {
    id?: true
    author_uid?: true
    title?: true
    help_text?: true
    help_type?: true
    help_close?: true
    created?: true
    image_reference?: true
    image_url?: true
    image_type?: true
    image_size_wh?: true
  }

  export type EduvidaMaxAggregateInputType = {
    id?: true
    author_uid?: true
    title?: true
    help_text?: true
    help_type?: true
    help_close?: true
    created?: true
    image_reference?: true
    image_url?: true
    image_type?: true
    image_size_wh?: true
  }

  export type EduvidaCountAggregateInputType = {
    id?: true
    author_uid?: true
    title?: true
    help_text?: true
    help_type?: true
    help_close?: true
    created?: true
    image_reference?: true
    image_url?: true
    image_type?: true
    image_size_wh?: true
    _all?: true
  }

  export type EduvidaAggregateArgs = {
    /**
     * Filter which eduvida to aggregate.
     * 
    **/
    where?: eduvidaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of eduvidas to fetch.
     * 
    **/
    orderBy?: Enumerable<eduvidaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: eduvidaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` eduvidas from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` eduvidas.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned eduvidas
    **/
    _count?: true | EduvidaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EduvidaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EduvidaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EduvidaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EduvidaMaxAggregateInputType
  }

  export type GetEduvidaAggregateType<T extends EduvidaAggregateArgs> = {
        [P in keyof T & keyof AggregateEduvida]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEduvida[P]>
      : GetScalarType<T[P], AggregateEduvida[P]>
  }




  export type EduvidaGroupByArgs = {
    where?: eduvidaWhereInput
    orderBy?: Enumerable<eduvidaOrderByWithAggregationInput>
    by: Array<EduvidaScalarFieldEnum>
    having?: eduvidaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EduvidaCountAggregateInputType | true
    _avg?: EduvidaAvgAggregateInputType
    _sum?: EduvidaSumAggregateInputType
    _min?: EduvidaMinAggregateInputType
    _max?: EduvidaMaxAggregateInputType
  }


  export type EduvidaGroupByOutputType = {
    id: number
    author_uid: string
    title: string
    help_text: string
    help_type: string | null
    help_close: number
    created: Date
    image_reference: string | null
    image_url: string | null
    image_type: string | null
    image_size_wh: string | null
    _count: EduvidaCountAggregateOutputType | null
    _avg: EduvidaAvgAggregateOutputType | null
    _sum: EduvidaSumAggregateOutputType | null
    _min: EduvidaMinAggregateOutputType | null
    _max: EduvidaMaxAggregateOutputType | null
  }

  type GetEduvidaGroupByPayload<T extends EduvidaGroupByArgs> = Promise<
    Array<
      PickArray<EduvidaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EduvidaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EduvidaGroupByOutputType[P]>
            : GetScalarType<T[P], EduvidaGroupByOutputType[P]>
        }
      >
    >


  export type eduvidaSelect = {
    id?: boolean
    author_uid?: boolean
    title?: boolean
    help_text?: boolean
    help_type?: boolean
    help_close?: boolean
    created?: boolean
    image_reference?: boolean
    image_url?: boolean
    image_type?: boolean
    image_size_wh?: boolean
    users?: boolean | usersArgs
    eduvida_comment?: boolean | eduvida_commentFindManyArgs
    _count?: boolean | EduvidaCountOutputTypeArgs
  }

  export type eduvidaInclude = {
    users?: boolean | usersArgs
    eduvida_comment?: boolean | eduvida_commentFindManyArgs
    _count?: boolean | EduvidaCountOutputTypeArgs
  }

  export type eduvidaGetPayload<
    S extends boolean | null | undefined | eduvidaArgs,
    U = keyof S
      > = S extends true
        ? eduvida
    : S extends undefined
    ? never
    : S extends eduvidaArgs | eduvidaFindManyArgs
    ?'include' extends U
    ? eduvida  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'users'
        ? usersGetPayload<S['include'][P]> :
        P extends 'eduvida_comment'
        ? Array < eduvida_commentGetPayload<S['include'][P]>>  :
        P extends '_count'
        ? EduvidaCountOutputTypeGetPayload<S['include'][P]> : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof eduvida ?eduvida [P]
  : 
          P extends 'users'
        ? usersGetPayload<S['select'][P]> :
        P extends 'eduvida_comment'
        ? Array < eduvida_commentGetPayload<S['select'][P]>>  :
        P extends '_count'
        ? EduvidaCountOutputTypeGetPayload<S['select'][P]> : never
  } 
    : eduvida
  : eduvida


  type eduvidaCountArgs = Merge<
    Omit<eduvidaFindManyArgs, 'select' | 'include'> & {
      select?: EduvidaCountAggregateInputType | true
    }
  >

  export interface eduvidaDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Eduvida that matches the filter.
     * @param {eduvidaFindUniqueArgs} args - Arguments to find a Eduvida
     * @example
     * // Get one Eduvida
     * const eduvida = await prisma.eduvida.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends eduvidaFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, eduvidaFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'eduvida'> extends True ? CheckSelect<T, Prisma__eduvidaClient<eduvida>, Prisma__eduvidaClient<eduvidaGetPayload<T>>> : CheckSelect<T, Prisma__eduvidaClient<eduvida | null >, Prisma__eduvidaClient<eduvidaGetPayload<T> | null >>

    /**
     * Find the first Eduvida that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {eduvidaFindFirstArgs} args - Arguments to find a Eduvida
     * @example
     * // Get one Eduvida
     * const eduvida = await prisma.eduvida.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends eduvidaFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, eduvidaFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'eduvida'> extends True ? CheckSelect<T, Prisma__eduvidaClient<eduvida>, Prisma__eduvidaClient<eduvidaGetPayload<T>>> : CheckSelect<T, Prisma__eduvidaClient<eduvida | null >, Prisma__eduvidaClient<eduvidaGetPayload<T> | null >>

    /**
     * Find zero or more Eduvidas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {eduvidaFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Eduvidas
     * const eduvidas = await prisma.eduvida.findMany()
     * 
     * // Get first 10 Eduvidas
     * const eduvidas = await prisma.eduvida.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const eduvidaWithIdOnly = await prisma.eduvida.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends eduvidaFindManyArgs>(
      args?: SelectSubset<T, eduvidaFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<eduvida>>, PrismaPromise<Array<eduvidaGetPayload<T>>>>

    /**
     * Create a Eduvida.
     * @param {eduvidaCreateArgs} args - Arguments to create a Eduvida.
     * @example
     * // Create one Eduvida
     * const Eduvida = await prisma.eduvida.create({
     *   data: {
     *     // ... data to create a Eduvida
     *   }
     * })
     * 
    **/
    create<T extends eduvidaCreateArgs>(
      args: SelectSubset<T, eduvidaCreateArgs>
    ): CheckSelect<T, Prisma__eduvidaClient<eduvida>, Prisma__eduvidaClient<eduvidaGetPayload<T>>>

    /**
     * Create many Eduvidas.
     *     @param {eduvidaCreateManyArgs} args - Arguments to create many Eduvidas.
     *     @example
     *     // Create many Eduvidas
     *     const eduvida = await prisma.eduvida.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends eduvidaCreateManyArgs>(
      args?: SelectSubset<T, eduvidaCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Eduvida.
     * @param {eduvidaDeleteArgs} args - Arguments to delete one Eduvida.
     * @example
     * // Delete one Eduvida
     * const Eduvida = await prisma.eduvida.delete({
     *   where: {
     *     // ... filter to delete one Eduvida
     *   }
     * })
     * 
    **/
    delete<T extends eduvidaDeleteArgs>(
      args: SelectSubset<T, eduvidaDeleteArgs>
    ): CheckSelect<T, Prisma__eduvidaClient<eduvida>, Prisma__eduvidaClient<eduvidaGetPayload<T>>>

    /**
     * Update one Eduvida.
     * @param {eduvidaUpdateArgs} args - Arguments to update one Eduvida.
     * @example
     * // Update one Eduvida
     * const eduvida = await prisma.eduvida.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends eduvidaUpdateArgs>(
      args: SelectSubset<T, eduvidaUpdateArgs>
    ): CheckSelect<T, Prisma__eduvidaClient<eduvida>, Prisma__eduvidaClient<eduvidaGetPayload<T>>>

    /**
     * Delete zero or more Eduvidas.
     * @param {eduvidaDeleteManyArgs} args - Arguments to filter Eduvidas to delete.
     * @example
     * // Delete a few Eduvidas
     * const { count } = await prisma.eduvida.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends eduvidaDeleteManyArgs>(
      args?: SelectSubset<T, eduvidaDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Eduvidas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {eduvidaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Eduvidas
     * const eduvida = await prisma.eduvida.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends eduvidaUpdateManyArgs>(
      args: SelectSubset<T, eduvidaUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Eduvida.
     * @param {eduvidaUpsertArgs} args - Arguments to update or create a Eduvida.
     * @example
     * // Update or create a Eduvida
     * const eduvida = await prisma.eduvida.upsert({
     *   create: {
     *     // ... data to create a Eduvida
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Eduvida we want to update
     *   }
     * })
    **/
    upsert<T extends eduvidaUpsertArgs>(
      args: SelectSubset<T, eduvidaUpsertArgs>
    ): CheckSelect<T, Prisma__eduvidaClient<eduvida>, Prisma__eduvidaClient<eduvidaGetPayload<T>>>

    /**
     * Count the number of Eduvidas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {eduvidaCountArgs} args - Arguments to filter Eduvidas to count.
     * @example
     * // Count the number of Eduvidas
     * const count = await prisma.eduvida.count({
     *   where: {
     *     // ... the filter for the Eduvidas we want to count
     *   }
     * })
    **/
    count<T extends eduvidaCountArgs>(
      args?: Subset<T, eduvidaCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EduvidaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Eduvida.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EduvidaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EduvidaAggregateArgs>(args: Subset<T, EduvidaAggregateArgs>): PrismaPromise<GetEduvidaAggregateType<T>>

    /**
     * Group by Eduvida.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EduvidaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EduvidaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EduvidaGroupByArgs['orderBy'] }
        : { orderBy?: EduvidaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EduvidaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEduvidaGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for eduvida.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__eduvidaClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    users<T extends usersArgs = {}>(args?: Subset<T, usersArgs>): CheckSelect<T, Prisma__usersClient<users | null >, Prisma__usersClient<usersGetPayload<T> | null >>;

    eduvida_comment<T extends eduvida_commentFindManyArgs = {}>(args?: Subset<T, eduvida_commentFindManyArgs>): CheckSelect<T, PrismaPromise<Array<eduvida_comment>>, PrismaPromise<Array<eduvida_commentGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * eduvida findUnique
   */
  export type eduvidaFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the eduvida
     * 
    **/
    select?: eduvidaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: eduvidaInclude | null
    /**
     * Throw an Error if a eduvida can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which eduvida to fetch.
     * 
    **/
    where: eduvidaWhereUniqueInput
  }


  /**
   * eduvida findFirst
   */
  export type eduvidaFindFirstArgs = {
    /**
     * Select specific fields to fetch from the eduvida
     * 
    **/
    select?: eduvidaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: eduvidaInclude | null
    /**
     * Throw an Error if a eduvida can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which eduvida to fetch.
     * 
    **/
    where?: eduvidaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of eduvidas to fetch.
     * 
    **/
    orderBy?: Enumerable<eduvidaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for eduvidas.
     * 
    **/
    cursor?: eduvidaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` eduvidas from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` eduvidas.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of eduvidas.
     * 
    **/
    distinct?: Enumerable<EduvidaScalarFieldEnum>
  }


  /**
   * eduvida findMany
   */
  export type eduvidaFindManyArgs = {
    /**
     * Select specific fields to fetch from the eduvida
     * 
    **/
    select?: eduvidaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: eduvidaInclude | null
    /**
     * Filter, which eduvidas to fetch.
     * 
    **/
    where?: eduvidaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of eduvidas to fetch.
     * 
    **/
    orderBy?: Enumerable<eduvidaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing eduvidas.
     * 
    **/
    cursor?: eduvidaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` eduvidas from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` eduvidas.
     * 
    **/
    skip?: number
    distinct?: Enumerable<EduvidaScalarFieldEnum>
  }


  /**
   * eduvida create
   */
  export type eduvidaCreateArgs = {
    /**
     * Select specific fields to fetch from the eduvida
     * 
    **/
    select?: eduvidaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: eduvidaInclude | null
    /**
     * The data needed to create a eduvida.
     * 
    **/
    data: XOR<eduvidaCreateInput, eduvidaUncheckedCreateInput>
  }


  /**
   * eduvida createMany
   */
  export type eduvidaCreateManyArgs = {
    data: Enumerable<eduvidaCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * eduvida update
   */
  export type eduvidaUpdateArgs = {
    /**
     * Select specific fields to fetch from the eduvida
     * 
    **/
    select?: eduvidaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: eduvidaInclude | null
    /**
     * The data needed to update a eduvida.
     * 
    **/
    data: XOR<eduvidaUpdateInput, eduvidaUncheckedUpdateInput>
    /**
     * Choose, which eduvida to update.
     * 
    **/
    where: eduvidaWhereUniqueInput
  }


  /**
   * eduvida updateMany
   */
  export type eduvidaUpdateManyArgs = {
    data: XOR<eduvidaUpdateManyMutationInput, eduvidaUncheckedUpdateManyInput>
    where?: eduvidaWhereInput
  }


  /**
   * eduvida upsert
   */
  export type eduvidaUpsertArgs = {
    /**
     * Select specific fields to fetch from the eduvida
     * 
    **/
    select?: eduvidaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: eduvidaInclude | null
    /**
     * The filter to search for the eduvida to update in case it exists.
     * 
    **/
    where: eduvidaWhereUniqueInput
    /**
     * In case the eduvida found by the `where` argument doesn't exist, create a new eduvida with this data.
     * 
    **/
    create: XOR<eduvidaCreateInput, eduvidaUncheckedCreateInput>
    /**
     * In case the eduvida was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<eduvidaUpdateInput, eduvidaUncheckedUpdateInput>
  }


  /**
   * eduvida delete
   */
  export type eduvidaDeleteArgs = {
    /**
     * Select specific fields to fetch from the eduvida
     * 
    **/
    select?: eduvidaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: eduvidaInclude | null
    /**
     * Filter which eduvida to delete.
     * 
    **/
    where: eduvidaWhereUniqueInput
  }


  /**
   * eduvida deleteMany
   */
  export type eduvidaDeleteManyArgs = {
    where?: eduvidaWhereInput
  }


  /**
   * eduvida without action
   */
  export type eduvidaArgs = {
    /**
     * Select specific fields to fetch from the eduvida
     * 
    **/
    select?: eduvidaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: eduvidaInclude | null
  }



  /**
   * Model eduvida_comment
   */


  export type AggregateEduvida_comment = {
    _count: Eduvida_commentCountAggregateOutputType | null
    _avg: Eduvida_commentAvgAggregateOutputType | null
    _sum: Eduvida_commentSumAggregateOutputType | null
    _min: Eduvida_commentMinAggregateOutputType | null
    _max: Eduvida_commentMaxAggregateOutputType | null
  }

  export type Eduvida_commentAvgAggregateOutputType = {
    id: number | null
    eduvida_id: number | null
  }

  export type Eduvida_commentSumAggregateOutputType = {
    id: number | null
    eduvida_id: number | null
  }

  export type Eduvida_commentMinAggregateOutputType = {
    id: number | null
    eduvida_id: number | null
    user_uid: string | null
    comment: string | null
    created: Date | null
    image_reference: string | null
    image_url: string | null
    image_type: string | null
    image_size_wh: string | null
  }

  export type Eduvida_commentMaxAggregateOutputType = {
    id: number | null
    eduvida_id: number | null
    user_uid: string | null
    comment: string | null
    created: Date | null
    image_reference: string | null
    image_url: string | null
    image_type: string | null
    image_size_wh: string | null
  }

  export type Eduvida_commentCountAggregateOutputType = {
    id: number
    eduvida_id: number
    user_uid: number
    comment: number
    created: number
    image_reference: number
    image_url: number
    image_type: number
    image_size_wh: number
    _all: number
  }


  export type Eduvida_commentAvgAggregateInputType = {
    id?: true
    eduvida_id?: true
  }

  export type Eduvida_commentSumAggregateInputType = {
    id?: true
    eduvida_id?: true
  }

  export type Eduvida_commentMinAggregateInputType = {
    id?: true
    eduvida_id?: true
    user_uid?: true
    comment?: true
    created?: true
    image_reference?: true
    image_url?: true
    image_type?: true
    image_size_wh?: true
  }

  export type Eduvida_commentMaxAggregateInputType = {
    id?: true
    eduvida_id?: true
    user_uid?: true
    comment?: true
    created?: true
    image_reference?: true
    image_url?: true
    image_type?: true
    image_size_wh?: true
  }

  export type Eduvida_commentCountAggregateInputType = {
    id?: true
    eduvida_id?: true
    user_uid?: true
    comment?: true
    created?: true
    image_reference?: true
    image_url?: true
    image_type?: true
    image_size_wh?: true
    _all?: true
  }

  export type Eduvida_commentAggregateArgs = {
    /**
     * Filter which eduvida_comment to aggregate.
     * 
    **/
    where?: eduvida_commentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of eduvida_comments to fetch.
     * 
    **/
    orderBy?: Enumerable<eduvida_commentOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: eduvida_commentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` eduvida_comments from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` eduvida_comments.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned eduvida_comments
    **/
    _count?: true | Eduvida_commentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Eduvida_commentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Eduvida_commentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Eduvida_commentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Eduvida_commentMaxAggregateInputType
  }

  export type GetEduvida_commentAggregateType<T extends Eduvida_commentAggregateArgs> = {
        [P in keyof T & keyof AggregateEduvida_comment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEduvida_comment[P]>
      : GetScalarType<T[P], AggregateEduvida_comment[P]>
  }




  export type Eduvida_commentGroupByArgs = {
    where?: eduvida_commentWhereInput
    orderBy?: Enumerable<eduvida_commentOrderByWithAggregationInput>
    by: Array<Eduvida_commentScalarFieldEnum>
    having?: eduvida_commentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Eduvida_commentCountAggregateInputType | true
    _avg?: Eduvida_commentAvgAggregateInputType
    _sum?: Eduvida_commentSumAggregateInputType
    _min?: Eduvida_commentMinAggregateInputType
    _max?: Eduvida_commentMaxAggregateInputType
  }


  export type Eduvida_commentGroupByOutputType = {
    id: number
    eduvida_id: number | null
    user_uid: string | null
    comment: string
    created: Date
    image_reference: string | null
    image_url: string | null
    image_type: string | null
    image_size_wh: string | null
    _count: Eduvida_commentCountAggregateOutputType | null
    _avg: Eduvida_commentAvgAggregateOutputType | null
    _sum: Eduvida_commentSumAggregateOutputType | null
    _min: Eduvida_commentMinAggregateOutputType | null
    _max: Eduvida_commentMaxAggregateOutputType | null
  }

  type GetEduvida_commentGroupByPayload<T extends Eduvida_commentGroupByArgs> = Promise<
    Array<
      PickArray<Eduvida_commentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Eduvida_commentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Eduvida_commentGroupByOutputType[P]>
            : GetScalarType<T[P], Eduvida_commentGroupByOutputType[P]>
        }
      >
    >


  export type eduvida_commentSelect = {
    id?: boolean
    eduvida_id?: boolean
    user_uid?: boolean
    comment?: boolean
    created?: boolean
    image_reference?: boolean
    image_url?: boolean
    image_type?: boolean
    image_size_wh?: boolean
    eduvida?: boolean | eduvidaArgs
    users?: boolean | usersArgs
  }

  export type eduvida_commentInclude = {
    eduvida?: boolean | eduvidaArgs
    users?: boolean | usersArgs
  }

  export type eduvida_commentGetPayload<
    S extends boolean | null | undefined | eduvida_commentArgs,
    U = keyof S
      > = S extends true
        ? eduvida_comment
    : S extends undefined
    ? never
    : S extends eduvida_commentArgs | eduvida_commentFindManyArgs
    ?'include' extends U
    ? eduvida_comment  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'eduvida'
        ? eduvidaGetPayload<S['include'][P]> | null :
        P extends 'users'
        ? usersGetPayload<S['include'][P]> | null : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof eduvida_comment ?eduvida_comment [P]
  : 
          P extends 'eduvida'
        ? eduvidaGetPayload<S['select'][P]> | null :
        P extends 'users'
        ? usersGetPayload<S['select'][P]> | null : never
  } 
    : eduvida_comment
  : eduvida_comment


  type eduvida_commentCountArgs = Merge<
    Omit<eduvida_commentFindManyArgs, 'select' | 'include'> & {
      select?: Eduvida_commentCountAggregateInputType | true
    }
  >

  export interface eduvida_commentDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Eduvida_comment that matches the filter.
     * @param {eduvida_commentFindUniqueArgs} args - Arguments to find a Eduvida_comment
     * @example
     * // Get one Eduvida_comment
     * const eduvida_comment = await prisma.eduvida_comment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends eduvida_commentFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, eduvida_commentFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'eduvida_comment'> extends True ? CheckSelect<T, Prisma__eduvida_commentClient<eduvida_comment>, Prisma__eduvida_commentClient<eduvida_commentGetPayload<T>>> : CheckSelect<T, Prisma__eduvida_commentClient<eduvida_comment | null >, Prisma__eduvida_commentClient<eduvida_commentGetPayload<T> | null >>

    /**
     * Find the first Eduvida_comment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {eduvida_commentFindFirstArgs} args - Arguments to find a Eduvida_comment
     * @example
     * // Get one Eduvida_comment
     * const eduvida_comment = await prisma.eduvida_comment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends eduvida_commentFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, eduvida_commentFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'eduvida_comment'> extends True ? CheckSelect<T, Prisma__eduvida_commentClient<eduvida_comment>, Prisma__eduvida_commentClient<eduvida_commentGetPayload<T>>> : CheckSelect<T, Prisma__eduvida_commentClient<eduvida_comment | null >, Prisma__eduvida_commentClient<eduvida_commentGetPayload<T> | null >>

    /**
     * Find zero or more Eduvida_comments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {eduvida_commentFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Eduvida_comments
     * const eduvida_comments = await prisma.eduvida_comment.findMany()
     * 
     * // Get first 10 Eduvida_comments
     * const eduvida_comments = await prisma.eduvida_comment.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const eduvida_commentWithIdOnly = await prisma.eduvida_comment.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends eduvida_commentFindManyArgs>(
      args?: SelectSubset<T, eduvida_commentFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<eduvida_comment>>, PrismaPromise<Array<eduvida_commentGetPayload<T>>>>

    /**
     * Create a Eduvida_comment.
     * @param {eduvida_commentCreateArgs} args - Arguments to create a Eduvida_comment.
     * @example
     * // Create one Eduvida_comment
     * const Eduvida_comment = await prisma.eduvida_comment.create({
     *   data: {
     *     // ... data to create a Eduvida_comment
     *   }
     * })
     * 
    **/
    create<T extends eduvida_commentCreateArgs>(
      args: SelectSubset<T, eduvida_commentCreateArgs>
    ): CheckSelect<T, Prisma__eduvida_commentClient<eduvida_comment>, Prisma__eduvida_commentClient<eduvida_commentGetPayload<T>>>

    /**
     * Create many Eduvida_comments.
     *     @param {eduvida_commentCreateManyArgs} args - Arguments to create many Eduvida_comments.
     *     @example
     *     // Create many Eduvida_comments
     *     const eduvida_comment = await prisma.eduvida_comment.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends eduvida_commentCreateManyArgs>(
      args?: SelectSubset<T, eduvida_commentCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Eduvida_comment.
     * @param {eduvida_commentDeleteArgs} args - Arguments to delete one Eduvida_comment.
     * @example
     * // Delete one Eduvida_comment
     * const Eduvida_comment = await prisma.eduvida_comment.delete({
     *   where: {
     *     // ... filter to delete one Eduvida_comment
     *   }
     * })
     * 
    **/
    delete<T extends eduvida_commentDeleteArgs>(
      args: SelectSubset<T, eduvida_commentDeleteArgs>
    ): CheckSelect<T, Prisma__eduvida_commentClient<eduvida_comment>, Prisma__eduvida_commentClient<eduvida_commentGetPayload<T>>>

    /**
     * Update one Eduvida_comment.
     * @param {eduvida_commentUpdateArgs} args - Arguments to update one Eduvida_comment.
     * @example
     * // Update one Eduvida_comment
     * const eduvida_comment = await prisma.eduvida_comment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends eduvida_commentUpdateArgs>(
      args: SelectSubset<T, eduvida_commentUpdateArgs>
    ): CheckSelect<T, Prisma__eduvida_commentClient<eduvida_comment>, Prisma__eduvida_commentClient<eduvida_commentGetPayload<T>>>

    /**
     * Delete zero or more Eduvida_comments.
     * @param {eduvida_commentDeleteManyArgs} args - Arguments to filter Eduvida_comments to delete.
     * @example
     * // Delete a few Eduvida_comments
     * const { count } = await prisma.eduvida_comment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends eduvida_commentDeleteManyArgs>(
      args?: SelectSubset<T, eduvida_commentDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Eduvida_comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {eduvida_commentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Eduvida_comments
     * const eduvida_comment = await prisma.eduvida_comment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends eduvida_commentUpdateManyArgs>(
      args: SelectSubset<T, eduvida_commentUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Eduvida_comment.
     * @param {eduvida_commentUpsertArgs} args - Arguments to update or create a Eduvida_comment.
     * @example
     * // Update or create a Eduvida_comment
     * const eduvida_comment = await prisma.eduvida_comment.upsert({
     *   create: {
     *     // ... data to create a Eduvida_comment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Eduvida_comment we want to update
     *   }
     * })
    **/
    upsert<T extends eduvida_commentUpsertArgs>(
      args: SelectSubset<T, eduvida_commentUpsertArgs>
    ): CheckSelect<T, Prisma__eduvida_commentClient<eduvida_comment>, Prisma__eduvida_commentClient<eduvida_commentGetPayload<T>>>

    /**
     * Count the number of Eduvida_comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {eduvida_commentCountArgs} args - Arguments to filter Eduvida_comments to count.
     * @example
     * // Count the number of Eduvida_comments
     * const count = await prisma.eduvida_comment.count({
     *   where: {
     *     // ... the filter for the Eduvida_comments we want to count
     *   }
     * })
    **/
    count<T extends eduvida_commentCountArgs>(
      args?: Subset<T, eduvida_commentCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Eduvida_commentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Eduvida_comment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Eduvida_commentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Eduvida_commentAggregateArgs>(args: Subset<T, Eduvida_commentAggregateArgs>): PrismaPromise<GetEduvida_commentAggregateType<T>>

    /**
     * Group by Eduvida_comment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Eduvida_commentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Eduvida_commentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Eduvida_commentGroupByArgs['orderBy'] }
        : { orderBy?: Eduvida_commentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Eduvida_commentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEduvida_commentGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for eduvida_comment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__eduvida_commentClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    eduvida<T extends eduvidaArgs = {}>(args?: Subset<T, eduvidaArgs>): CheckSelect<T, Prisma__eduvidaClient<eduvida | null >, Prisma__eduvidaClient<eduvidaGetPayload<T> | null >>;

    users<T extends usersArgs = {}>(args?: Subset<T, usersArgs>): CheckSelect<T, Prisma__usersClient<users | null >, Prisma__usersClient<usersGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * eduvida_comment findUnique
   */
  export type eduvida_commentFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the eduvida_comment
     * 
    **/
    select?: eduvida_commentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: eduvida_commentInclude | null
    /**
     * Throw an Error if a eduvida_comment can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which eduvida_comment to fetch.
     * 
    **/
    where: eduvida_commentWhereUniqueInput
  }


  /**
   * eduvida_comment findFirst
   */
  export type eduvida_commentFindFirstArgs = {
    /**
     * Select specific fields to fetch from the eduvida_comment
     * 
    **/
    select?: eduvida_commentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: eduvida_commentInclude | null
    /**
     * Throw an Error if a eduvida_comment can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which eduvida_comment to fetch.
     * 
    **/
    where?: eduvida_commentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of eduvida_comments to fetch.
     * 
    **/
    orderBy?: Enumerable<eduvida_commentOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for eduvida_comments.
     * 
    **/
    cursor?: eduvida_commentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` eduvida_comments from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` eduvida_comments.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of eduvida_comments.
     * 
    **/
    distinct?: Enumerable<Eduvida_commentScalarFieldEnum>
  }


  /**
   * eduvida_comment findMany
   */
  export type eduvida_commentFindManyArgs = {
    /**
     * Select specific fields to fetch from the eduvida_comment
     * 
    **/
    select?: eduvida_commentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: eduvida_commentInclude | null
    /**
     * Filter, which eduvida_comments to fetch.
     * 
    **/
    where?: eduvida_commentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of eduvida_comments to fetch.
     * 
    **/
    orderBy?: Enumerable<eduvida_commentOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing eduvida_comments.
     * 
    **/
    cursor?: eduvida_commentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` eduvida_comments from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` eduvida_comments.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Eduvida_commentScalarFieldEnum>
  }


  /**
   * eduvida_comment create
   */
  export type eduvida_commentCreateArgs = {
    /**
     * Select specific fields to fetch from the eduvida_comment
     * 
    **/
    select?: eduvida_commentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: eduvida_commentInclude | null
    /**
     * The data needed to create a eduvida_comment.
     * 
    **/
    data: XOR<eduvida_commentCreateInput, eduvida_commentUncheckedCreateInput>
  }


  /**
   * eduvida_comment createMany
   */
  export type eduvida_commentCreateManyArgs = {
    data: Enumerable<eduvida_commentCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * eduvida_comment update
   */
  export type eduvida_commentUpdateArgs = {
    /**
     * Select specific fields to fetch from the eduvida_comment
     * 
    **/
    select?: eduvida_commentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: eduvida_commentInclude | null
    /**
     * The data needed to update a eduvida_comment.
     * 
    **/
    data: XOR<eduvida_commentUpdateInput, eduvida_commentUncheckedUpdateInput>
    /**
     * Choose, which eduvida_comment to update.
     * 
    **/
    where: eduvida_commentWhereUniqueInput
  }


  /**
   * eduvida_comment updateMany
   */
  export type eduvida_commentUpdateManyArgs = {
    data: XOR<eduvida_commentUpdateManyMutationInput, eduvida_commentUncheckedUpdateManyInput>
    where?: eduvida_commentWhereInput
  }


  /**
   * eduvida_comment upsert
   */
  export type eduvida_commentUpsertArgs = {
    /**
     * Select specific fields to fetch from the eduvida_comment
     * 
    **/
    select?: eduvida_commentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: eduvida_commentInclude | null
    /**
     * The filter to search for the eduvida_comment to update in case it exists.
     * 
    **/
    where: eduvida_commentWhereUniqueInput
    /**
     * In case the eduvida_comment found by the `where` argument doesn't exist, create a new eduvida_comment with this data.
     * 
    **/
    create: XOR<eduvida_commentCreateInput, eduvida_commentUncheckedCreateInput>
    /**
     * In case the eduvida_comment was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<eduvida_commentUpdateInput, eduvida_commentUncheckedUpdateInput>
  }


  /**
   * eduvida_comment delete
   */
  export type eduvida_commentDeleteArgs = {
    /**
     * Select specific fields to fetch from the eduvida_comment
     * 
    **/
    select?: eduvida_commentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: eduvida_commentInclude | null
    /**
     * Filter which eduvida_comment to delete.
     * 
    **/
    where: eduvida_commentWhereUniqueInput
  }


  /**
   * eduvida_comment deleteMany
   */
  export type eduvida_commentDeleteManyArgs = {
    where?: eduvida_commentWhereInput
  }


  /**
   * eduvida_comment without action
   */
  export type eduvida_commentArgs = {
    /**
     * Select specific fields to fetch from the eduvida_comment
     * 
    **/
    select?: eduvida_commentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: eduvida_commentInclude | null
  }



  /**
   * Enums
   */

  // Based on
  // https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275

  export const UsersScalarFieldEnum: {
    id: 'id',
    firebase_uid: 'firebase_uid',
    email: 'email',
    name: 'name',
    last_name: 'last_name',
    score: 'score',
    image_reference: 'image_reference',
    image_url: 'image_url',
    image_type: 'image_type',
    image_size_wh: 'image_size_wh'
  };

  export type UsersScalarFieldEnum = (typeof UsersScalarFieldEnum)[keyof typeof UsersScalarFieldEnum]


  export const Menu_main_activityScalarFieldEnum: {
    id: 'id',
    title: 'title',
    name_icon: 'name_icon',
    color_icon: 'color_icon',
    color_title: 'color_title',
    color_background: 'color_background'
  };

  export type Menu_main_activityScalarFieldEnum = (typeof Menu_main_activityScalarFieldEnum)[keyof typeof Menu_main_activityScalarFieldEnum]


  export const ActivityScalarFieldEnum: {
    id: 'id',
    author_uid: 'author_uid',
    title: 'title',
    with_password: 'with_password',
    password: 'password',
    type_activity: 'type_activity',
    excluded: 'excluded',
    created: 'created',
    image_reference: 'image_reference',
    image_url: 'image_url',
    image_type: 'image_type',
    image_size_wh: 'image_size_wh',
    difficulty_level: 'difficulty_level'
  };

  export type ActivityScalarFieldEnum = (typeof ActivityScalarFieldEnum)[keyof typeof ActivityScalarFieldEnum]


  export const Activity_question_responseScalarFieldEnum: {
    id: 'id',
    activity_id: 'activity_id',
    number_question: 'number_question',
    answer_one: 'answer_one',
    answer_two: 'answer_two',
    answer_tree: 'answer_tree',
    answer_four: 'answer_four',
    right_answer: 'right_answer',
    question: 'question'
  };

  export type Activity_question_responseScalarFieldEnum = (typeof Activity_question_responseScalarFieldEnum)[keyof typeof Activity_question_responseScalarFieldEnum]


  export const Activity_question_usersScalarFieldEnum: {
    id: 'id',
    activity_id: 'activity_id',
    user_uid: 'user_uid',
    value: 'value',
    processed: 'processed',
    created: 'created',
    display_to_user: 'display_to_user',
    evaluated: 'evaluated'
  };

  export type Activity_question_usersScalarFieldEnum = (typeof Activity_question_usersScalarFieldEnum)[keyof typeof Activity_question_usersScalarFieldEnum]


  export const Activity_question_users_responseScalarFieldEnum: {
    id: 'id',
    activity_id: 'activity_id',
    user_uid: 'user_uid',
    number_question: 'number_question',
    answer: 'answer',
    comments: 'comments'
  };

  export type Activity_question_users_responseScalarFieldEnum = (typeof Activity_question_users_responseScalarFieldEnum)[keyof typeof Activity_question_users_responseScalarFieldEnum]


  export const RewardScalarFieldEnum: {
    id: 'id',
    type: 'type',
    name: 'name',
    description: 'description',
    value: 'value',
    picture: 'picture'
  };

  export type RewardScalarFieldEnum = (typeof RewardScalarFieldEnum)[keyof typeof RewardScalarFieldEnum]


  export const Reward_usersScalarFieldEnum: {
    id: 'id',
    user_uid: 'user_uid',
    reward_id: 'reward_id',
    amount: 'amount'
  };

  export type Reward_usersScalarFieldEnum = (typeof Reward_usersScalarFieldEnum)[keyof typeof Reward_usersScalarFieldEnum]


  export const Activity_sentencesScalarFieldEnum: {
    id: 'id',
    activity_id: 'activity_id',
    number_sentence: 'number_sentence',
    complete_sentence: 'complete_sentence',
    marked_sentence: 'marked_sentence',
    hidden_words: 'hidden_words',
    words_help: 'words_help'
  };

  export type Activity_sentencesScalarFieldEnum = (typeof Activity_sentencesScalarFieldEnum)[keyof typeof Activity_sentencesScalarFieldEnum]


  export const Activity_sentences_usersScalarFieldEnum: {
    id: 'id',
    activity_id: 'activity_id',
    user_uid: 'user_uid',
    value: 'value',
    processed: 'processed'
  };

  export type Activity_sentences_usersScalarFieldEnum = (typeof Activity_sentences_usersScalarFieldEnum)[keyof typeof Activity_sentences_usersScalarFieldEnum]


  export const Activity_sentences_users_responseScalarFieldEnum: {
    id: 'id',
    activity_id: 'activity_id',
    user_uid: 'user_uid',
    number_sentence: 'number_sentence',
    sentences_informed: 'sentences_informed',
    comments: 'comments'
  };

  export type Activity_sentences_users_responseScalarFieldEnum = (typeof Activity_sentences_users_responseScalarFieldEnum)[keyof typeof Activity_sentences_users_responseScalarFieldEnum]


  export const NotificationScalarFieldEnum: {
    id: 'id',
    sender_uid: 'sender_uid',
    recipient_uid: 'recipient_uid',
    notification_text: 'notification_text',
    notification_date: 'notification_date',
    image_reference: 'image_reference',
    image_url: 'image_url',
    image_type: 'image_type',
    image_size_wh: 'image_size_wh'
  };

  export type NotificationScalarFieldEnum = (typeof NotificationScalarFieldEnum)[keyof typeof NotificationScalarFieldEnum]


  export const EduvidaScalarFieldEnum: {
    id: 'id',
    author_uid: 'author_uid',
    title: 'title',
    help_text: 'help_text',
    help_type: 'help_type',
    help_close: 'help_close',
    created: 'created',
    image_reference: 'image_reference',
    image_url: 'image_url',
    image_type: 'image_type',
    image_size_wh: 'image_size_wh'
  };

  export type EduvidaScalarFieldEnum = (typeof EduvidaScalarFieldEnum)[keyof typeof EduvidaScalarFieldEnum]


  export const Eduvida_commentScalarFieldEnum: {
    id: 'id',
    eduvida_id: 'eduvida_id',
    user_uid: 'user_uid',
    comment: 'comment',
    created: 'created',
    image_reference: 'image_reference',
    image_url: 'image_url',
    image_type: 'image_type',
    image_size_wh: 'image_size_wh'
  };

  export type Eduvida_commentScalarFieldEnum = (typeof Eduvida_commentScalarFieldEnum)[keyof typeof Eduvida_commentScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  /**
   * Deep Input Types
   */


  export type usersWhereInput = {
    AND?: Enumerable<usersWhereInput>
    OR?: Enumerable<usersWhereInput>
    NOT?: Enumerable<usersWhereInput>
    id?: IntFilter | number
    firebase_uid?: StringFilter | string
    email?: StringNullableFilter | string | null
    name?: StringNullableFilter | string | null
    last_name?: StringNullableFilter | string | null
    score?: DecimalNullableFilter | Decimal | number | string | null
    image_reference?: StringNullableFilter | string | null
    image_url?: StringNullableFilter | string | null
    image_type?: StringNullableFilter | string | null
    image_size_wh?: StringNullableFilter | string | null
    activity?: ActivityListRelationFilter
    activity_question_users?: Activity_question_usersListRelationFilter
    activity_question_users_response?: Activity_question_users_responseListRelationFilter
    activity_sentences_users?: Activity_sentences_usersListRelationFilter
    activity_sentences_users_response?: Activity_sentences_users_responseListRelationFilter
    eduvida?: EduvidaListRelationFilter
    eduvida_comment?: Eduvida_commentListRelationFilter
    notification?: NotificationListRelationFilter
    reward_users?: Reward_usersListRelationFilter
  }

  export type usersOrderByWithRelationInput = {
    id?: SortOrder
    firebase_uid?: SortOrder
    email?: SortOrder
    name?: SortOrder
    last_name?: SortOrder
    score?: SortOrder
    image_reference?: SortOrder
    image_url?: SortOrder
    image_type?: SortOrder
    image_size_wh?: SortOrder
    activity?: activityOrderByRelationAggregateInput
    activity_question_users?: activity_question_usersOrderByRelationAggregateInput
    activity_question_users_response?: activity_question_users_responseOrderByRelationAggregateInput
    activity_sentences_users?: activity_sentences_usersOrderByRelationAggregateInput
    activity_sentences_users_response?: activity_sentences_users_responseOrderByRelationAggregateInput
    eduvida?: eduvidaOrderByRelationAggregateInput
    eduvida_comment?: eduvida_commentOrderByRelationAggregateInput
    notification?: notificationOrderByRelationAggregateInput
    reward_users?: reward_usersOrderByRelationAggregateInput
  }

  export type usersWhereUniqueInput = {
    firebase_uid?: string
  }

  export type usersOrderByWithAggregationInput = {
    id?: SortOrder
    firebase_uid?: SortOrder
    email?: SortOrder
    name?: SortOrder
    last_name?: SortOrder
    score?: SortOrder
    image_reference?: SortOrder
    image_url?: SortOrder
    image_type?: SortOrder
    image_size_wh?: SortOrder
    _count?: usersCountOrderByAggregateInput
    _avg?: usersAvgOrderByAggregateInput
    _max?: usersMaxOrderByAggregateInput
    _min?: usersMinOrderByAggregateInput
    _sum?: usersSumOrderByAggregateInput
  }

  export type usersScalarWhereWithAggregatesInput = {
    AND?: Enumerable<usersScalarWhereWithAggregatesInput>
    OR?: Enumerable<usersScalarWhereWithAggregatesInput>
    NOT?: Enumerable<usersScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    firebase_uid?: StringWithAggregatesFilter | string
    email?: StringNullableWithAggregatesFilter | string | null
    name?: StringNullableWithAggregatesFilter | string | null
    last_name?: StringNullableWithAggregatesFilter | string | null
    score?: DecimalNullableWithAggregatesFilter | Decimal | number | string | null
    image_reference?: StringNullableWithAggregatesFilter | string | null
    image_url?: StringNullableWithAggregatesFilter | string | null
    image_type?: StringNullableWithAggregatesFilter | string | null
    image_size_wh?: StringNullableWithAggregatesFilter | string | null
  }

  export type menu_main_activityWhereInput = {
    AND?: Enumerable<menu_main_activityWhereInput>
    OR?: Enumerable<menu_main_activityWhereInput>
    NOT?: Enumerable<menu_main_activityWhereInput>
    id?: IntFilter | number
    title?: StringFilter | string
    name_icon?: StringNullableFilter | string | null
    color_icon?: StringNullableFilter | string | null
    color_title?: StringNullableFilter | string | null
    color_background?: StringNullableFilter | string | null
  }

  export type menu_main_activityOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    name_icon?: SortOrder
    color_icon?: SortOrder
    color_title?: SortOrder
    color_background?: SortOrder
  }

  export type menu_main_activityWhereUniqueInput = {
    id?: number
  }

  export type menu_main_activityOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    name_icon?: SortOrder
    color_icon?: SortOrder
    color_title?: SortOrder
    color_background?: SortOrder
    _count?: menu_main_activityCountOrderByAggregateInput
    _avg?: menu_main_activityAvgOrderByAggregateInput
    _max?: menu_main_activityMaxOrderByAggregateInput
    _min?: menu_main_activityMinOrderByAggregateInput
    _sum?: menu_main_activitySumOrderByAggregateInput
  }

  export type menu_main_activityScalarWhereWithAggregatesInput = {
    AND?: Enumerable<menu_main_activityScalarWhereWithAggregatesInput>
    OR?: Enumerable<menu_main_activityScalarWhereWithAggregatesInput>
    NOT?: Enumerable<menu_main_activityScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    title?: StringWithAggregatesFilter | string
    name_icon?: StringNullableWithAggregatesFilter | string | null
    color_icon?: StringNullableWithAggregatesFilter | string | null
    color_title?: StringNullableWithAggregatesFilter | string | null
    color_background?: StringNullableWithAggregatesFilter | string | null
  }

  export type activityWhereInput = {
    AND?: Enumerable<activityWhereInput>
    OR?: Enumerable<activityWhereInput>
    NOT?: Enumerable<activityWhereInput>
    id?: IntFilter | number
    author_uid?: StringFilter | string
    title?: StringFilter | string
    with_password?: IntFilter | number
    password?: StringNullableFilter | string | null
    type_activity?: StringNullableFilter | string | null
    excluded?: IntNullableFilter | number | null
    created?: DateTimeNullableFilter | Date | string | null
    image_reference?: StringNullableFilter | string | null
    image_url?: StringNullableFilter | string | null
    image_type?: StringNullableFilter | string | null
    image_size_wh?: StringNullableFilter | string | null
    difficulty_level?: StringNullableFilter | string | null
    users?: XOR<UsersRelationFilter, usersWhereInput>
    activity_question_response?: Activity_question_responseListRelationFilter
    activity_question_users?: Activity_question_usersListRelationFilter
    activity_question_users_response?: Activity_question_users_responseListRelationFilter
    activity_sentences_users?: Activity_sentences_usersListRelationFilter
    activity_sentences_users_response?: Activity_sentences_users_responseListRelationFilter
  }

  export type activityOrderByWithRelationInput = {
    id?: SortOrder
    author_uid?: SortOrder
    title?: SortOrder
    with_password?: SortOrder
    password?: SortOrder
    type_activity?: SortOrder
    excluded?: SortOrder
    created?: SortOrder
    image_reference?: SortOrder
    image_url?: SortOrder
    image_type?: SortOrder
    image_size_wh?: SortOrder
    difficulty_level?: SortOrder
    users?: usersOrderByWithRelationInput
    activity_question_response?: activity_question_responseOrderByRelationAggregateInput
    activity_question_users?: activity_question_usersOrderByRelationAggregateInput
    activity_question_users_response?: activity_question_users_responseOrderByRelationAggregateInput
    activity_sentences_users?: activity_sentences_usersOrderByRelationAggregateInput
    activity_sentences_users_response?: activity_sentences_users_responseOrderByRelationAggregateInput
  }

  export type activityWhereUniqueInput = {
    id?: number
  }

  export type activityOrderByWithAggregationInput = {
    id?: SortOrder
    author_uid?: SortOrder
    title?: SortOrder
    with_password?: SortOrder
    password?: SortOrder
    type_activity?: SortOrder
    excluded?: SortOrder
    created?: SortOrder
    image_reference?: SortOrder
    image_url?: SortOrder
    image_type?: SortOrder
    image_size_wh?: SortOrder
    difficulty_level?: SortOrder
    _count?: activityCountOrderByAggregateInput
    _avg?: activityAvgOrderByAggregateInput
    _max?: activityMaxOrderByAggregateInput
    _min?: activityMinOrderByAggregateInput
    _sum?: activitySumOrderByAggregateInput
  }

  export type activityScalarWhereWithAggregatesInput = {
    AND?: Enumerable<activityScalarWhereWithAggregatesInput>
    OR?: Enumerable<activityScalarWhereWithAggregatesInput>
    NOT?: Enumerable<activityScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    author_uid?: StringWithAggregatesFilter | string
    title?: StringWithAggregatesFilter | string
    with_password?: IntWithAggregatesFilter | number
    password?: StringNullableWithAggregatesFilter | string | null
    type_activity?: StringNullableWithAggregatesFilter | string | null
    excluded?: IntNullableWithAggregatesFilter | number | null
    created?: DateTimeNullableWithAggregatesFilter | Date | string | null
    image_reference?: StringNullableWithAggregatesFilter | string | null
    image_url?: StringNullableWithAggregatesFilter | string | null
    image_type?: StringNullableWithAggregatesFilter | string | null
    image_size_wh?: StringNullableWithAggregatesFilter | string | null
    difficulty_level?: StringNullableWithAggregatesFilter | string | null
  }

  export type activity_question_responseWhereInput = {
    AND?: Enumerable<activity_question_responseWhereInput>
    OR?: Enumerable<activity_question_responseWhereInput>
    NOT?: Enumerable<activity_question_responseWhereInput>
    id?: IntFilter | number
    activity_id?: IntNullableFilter | number | null
    number_question?: IntFilter | number
    answer_one?: StringFilter | string
    answer_two?: StringFilter | string
    answer_tree?: StringFilter | string
    answer_four?: StringFilter | string
    right_answer?: StringFilter | string
    question?: StringNullableFilter | string | null
    activity?: XOR<ActivityRelationFilter, activityWhereInput> | null
  }

  export type activity_question_responseOrderByWithRelationInput = {
    id?: SortOrder
    activity_id?: SortOrder
    number_question?: SortOrder
    answer_one?: SortOrder
    answer_two?: SortOrder
    answer_tree?: SortOrder
    answer_four?: SortOrder
    right_answer?: SortOrder
    question?: SortOrder
    activity?: activityOrderByWithRelationInput
  }

  export type activity_question_responseWhereUniqueInput = {
    id?: number
  }

  export type activity_question_responseOrderByWithAggregationInput = {
    id?: SortOrder
    activity_id?: SortOrder
    number_question?: SortOrder
    answer_one?: SortOrder
    answer_two?: SortOrder
    answer_tree?: SortOrder
    answer_four?: SortOrder
    right_answer?: SortOrder
    question?: SortOrder
    _count?: activity_question_responseCountOrderByAggregateInput
    _avg?: activity_question_responseAvgOrderByAggregateInput
    _max?: activity_question_responseMaxOrderByAggregateInput
    _min?: activity_question_responseMinOrderByAggregateInput
    _sum?: activity_question_responseSumOrderByAggregateInput
  }

  export type activity_question_responseScalarWhereWithAggregatesInput = {
    AND?: Enumerable<activity_question_responseScalarWhereWithAggregatesInput>
    OR?: Enumerable<activity_question_responseScalarWhereWithAggregatesInput>
    NOT?: Enumerable<activity_question_responseScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    activity_id?: IntNullableWithAggregatesFilter | number | null
    number_question?: IntWithAggregatesFilter | number
    answer_one?: StringWithAggregatesFilter | string
    answer_two?: StringWithAggregatesFilter | string
    answer_tree?: StringWithAggregatesFilter | string
    answer_four?: StringWithAggregatesFilter | string
    right_answer?: StringWithAggregatesFilter | string
    question?: StringNullableWithAggregatesFilter | string | null
  }

  export type activity_question_usersWhereInput = {
    AND?: Enumerable<activity_question_usersWhereInput>
    OR?: Enumerable<activity_question_usersWhereInput>
    NOT?: Enumerable<activity_question_usersWhereInput>
    id?: IntFilter | number
    activity_id?: IntNullableFilter | number | null
    user_uid?: StringNullableFilter | string | null
    value?: DecimalNullableFilter | Decimal | number | string | null
    processed?: IntNullableFilter | number | null
    created?: DateTimeNullableFilter | Date | string | null
    display_to_user?: IntNullableFilter | number | null
    evaluated?: IntNullableFilter | number | null
    activity?: XOR<ActivityRelationFilter, activityWhereInput> | null
    users?: XOR<UsersRelationFilter, usersWhereInput> | null
  }

  export type activity_question_usersOrderByWithRelationInput = {
    id?: SortOrder
    activity_id?: SortOrder
    user_uid?: SortOrder
    value?: SortOrder
    processed?: SortOrder
    created?: SortOrder
    display_to_user?: SortOrder
    evaluated?: SortOrder
    activity?: activityOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
  }

  export type activity_question_usersWhereUniqueInput = {
    id?: number
  }

  export type activity_question_usersOrderByWithAggregationInput = {
    id?: SortOrder
    activity_id?: SortOrder
    user_uid?: SortOrder
    value?: SortOrder
    processed?: SortOrder
    created?: SortOrder
    display_to_user?: SortOrder
    evaluated?: SortOrder
    _count?: activity_question_usersCountOrderByAggregateInput
    _avg?: activity_question_usersAvgOrderByAggregateInput
    _max?: activity_question_usersMaxOrderByAggregateInput
    _min?: activity_question_usersMinOrderByAggregateInput
    _sum?: activity_question_usersSumOrderByAggregateInput
  }

  export type activity_question_usersScalarWhereWithAggregatesInput = {
    AND?: Enumerable<activity_question_usersScalarWhereWithAggregatesInput>
    OR?: Enumerable<activity_question_usersScalarWhereWithAggregatesInput>
    NOT?: Enumerable<activity_question_usersScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    activity_id?: IntNullableWithAggregatesFilter | number | null
    user_uid?: StringNullableWithAggregatesFilter | string | null
    value?: DecimalNullableWithAggregatesFilter | Decimal | number | string | null
    processed?: IntNullableWithAggregatesFilter | number | null
    created?: DateTimeNullableWithAggregatesFilter | Date | string | null
    display_to_user?: IntNullableWithAggregatesFilter | number | null
    evaluated?: IntNullableWithAggregatesFilter | number | null
  }

  export type activity_question_users_responseWhereInput = {
    AND?: Enumerable<activity_question_users_responseWhereInput>
    OR?: Enumerable<activity_question_users_responseWhereInput>
    NOT?: Enumerable<activity_question_users_responseWhereInput>
    id?: IntFilter | number
    activity_id?: IntNullableFilter | number | null
    user_uid?: StringNullableFilter | string | null
    number_question?: IntFilter | number
    answer?: StringFilter | string
    comments?: StringNullableFilter | string | null
    activity?: XOR<ActivityRelationFilter, activityWhereInput> | null
    users?: XOR<UsersRelationFilter, usersWhereInput> | null
  }

  export type activity_question_users_responseOrderByWithRelationInput = {
    id?: SortOrder
    activity_id?: SortOrder
    user_uid?: SortOrder
    number_question?: SortOrder
    answer?: SortOrder
    comments?: SortOrder
    activity?: activityOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
  }

  export type activity_question_users_responseWhereUniqueInput = {
    id?: number
  }

  export type activity_question_users_responseOrderByWithAggregationInput = {
    id?: SortOrder
    activity_id?: SortOrder
    user_uid?: SortOrder
    number_question?: SortOrder
    answer?: SortOrder
    comments?: SortOrder
    _count?: activity_question_users_responseCountOrderByAggregateInput
    _avg?: activity_question_users_responseAvgOrderByAggregateInput
    _max?: activity_question_users_responseMaxOrderByAggregateInput
    _min?: activity_question_users_responseMinOrderByAggregateInput
    _sum?: activity_question_users_responseSumOrderByAggregateInput
  }

  export type activity_question_users_responseScalarWhereWithAggregatesInput = {
    AND?: Enumerable<activity_question_users_responseScalarWhereWithAggregatesInput>
    OR?: Enumerable<activity_question_users_responseScalarWhereWithAggregatesInput>
    NOT?: Enumerable<activity_question_users_responseScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    activity_id?: IntNullableWithAggregatesFilter | number | null
    user_uid?: StringNullableWithAggregatesFilter | string | null
    number_question?: IntWithAggregatesFilter | number
    answer?: StringWithAggregatesFilter | string
    comments?: StringNullableWithAggregatesFilter | string | null
  }

  export type rewardWhereInput = {
    AND?: Enumerable<rewardWhereInput>
    OR?: Enumerable<rewardWhereInput>
    NOT?: Enumerable<rewardWhereInput>
    id?: IntFilter | number
    type?: IntFilter | number
    name?: StringFilter | string
    description?: StringFilter | string
    value?: DecimalFilter | Decimal | number | string
    picture?: StringNullableFilter | string | null
    reward_users?: Reward_usersListRelationFilter
  }

  export type rewardOrderByWithRelationInput = {
    id?: SortOrder
    type?: SortOrder
    name?: SortOrder
    description?: SortOrder
    value?: SortOrder
    picture?: SortOrder
    reward_users?: reward_usersOrderByRelationAggregateInput
  }

  export type rewardWhereUniqueInput = {
    id?: number
  }

  export type rewardOrderByWithAggregationInput = {
    id?: SortOrder
    type?: SortOrder
    name?: SortOrder
    description?: SortOrder
    value?: SortOrder
    picture?: SortOrder
    _count?: rewardCountOrderByAggregateInput
    _avg?: rewardAvgOrderByAggregateInput
    _max?: rewardMaxOrderByAggregateInput
    _min?: rewardMinOrderByAggregateInput
    _sum?: rewardSumOrderByAggregateInput
  }

  export type rewardScalarWhereWithAggregatesInput = {
    AND?: Enumerable<rewardScalarWhereWithAggregatesInput>
    OR?: Enumerable<rewardScalarWhereWithAggregatesInput>
    NOT?: Enumerable<rewardScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    type?: IntWithAggregatesFilter | number
    name?: StringWithAggregatesFilter | string
    description?: StringWithAggregatesFilter | string
    value?: DecimalWithAggregatesFilter | Decimal | number | string
    picture?: StringNullableWithAggregatesFilter | string | null
  }

  export type reward_usersWhereInput = {
    AND?: Enumerable<reward_usersWhereInput>
    OR?: Enumerable<reward_usersWhereInput>
    NOT?: Enumerable<reward_usersWhereInput>
    id?: IntFilter | number
    user_uid?: StringNullableFilter | string | null
    reward_id?: IntNullableFilter | number | null
    amount?: IntFilter | number
    reward?: XOR<RewardRelationFilter, rewardWhereInput> | null
    users?: XOR<UsersRelationFilter, usersWhereInput> | null
  }

  export type reward_usersOrderByWithRelationInput = {
    id?: SortOrder
    user_uid?: SortOrder
    reward_id?: SortOrder
    amount?: SortOrder
    reward?: rewardOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
  }

  export type reward_usersWhereUniqueInput = {
    id?: number
  }

  export type reward_usersOrderByWithAggregationInput = {
    id?: SortOrder
    user_uid?: SortOrder
    reward_id?: SortOrder
    amount?: SortOrder
    _count?: reward_usersCountOrderByAggregateInput
    _avg?: reward_usersAvgOrderByAggregateInput
    _max?: reward_usersMaxOrderByAggregateInput
    _min?: reward_usersMinOrderByAggregateInput
    _sum?: reward_usersSumOrderByAggregateInput
  }

  export type reward_usersScalarWhereWithAggregatesInput = {
    AND?: Enumerable<reward_usersScalarWhereWithAggregatesInput>
    OR?: Enumerable<reward_usersScalarWhereWithAggregatesInput>
    NOT?: Enumerable<reward_usersScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    user_uid?: StringNullableWithAggregatesFilter | string | null
    reward_id?: IntNullableWithAggregatesFilter | number | null
    amount?: IntWithAggregatesFilter | number
  }

  export type activity_sentencesWhereInput = {
    AND?: Enumerable<activity_sentencesWhereInput>
    OR?: Enumerable<activity_sentencesWhereInput>
    NOT?: Enumerable<activity_sentencesWhereInput>
    id?: IntFilter | number
    activity_id?: IntFilter | number
    number_sentence?: IntFilter | number
    complete_sentence?: StringFilter | string
    marked_sentence?: StringFilter | string
    hidden_words?: StringFilter | string
    words_help?: StringFilter | string
  }

  export type activity_sentencesOrderByWithRelationInput = {
    id?: SortOrder
    activity_id?: SortOrder
    number_sentence?: SortOrder
    complete_sentence?: SortOrder
    marked_sentence?: SortOrder
    hidden_words?: SortOrder
    words_help?: SortOrder
  }

  export type activity_sentencesWhereUniqueInput = {
    id?: number
  }

  export type activity_sentencesOrderByWithAggregationInput = {
    id?: SortOrder
    activity_id?: SortOrder
    number_sentence?: SortOrder
    complete_sentence?: SortOrder
    marked_sentence?: SortOrder
    hidden_words?: SortOrder
    words_help?: SortOrder
    _count?: activity_sentencesCountOrderByAggregateInput
    _avg?: activity_sentencesAvgOrderByAggregateInput
    _max?: activity_sentencesMaxOrderByAggregateInput
    _min?: activity_sentencesMinOrderByAggregateInput
    _sum?: activity_sentencesSumOrderByAggregateInput
  }

  export type activity_sentencesScalarWhereWithAggregatesInput = {
    AND?: Enumerable<activity_sentencesScalarWhereWithAggregatesInput>
    OR?: Enumerable<activity_sentencesScalarWhereWithAggregatesInput>
    NOT?: Enumerable<activity_sentencesScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    activity_id?: IntWithAggregatesFilter | number
    number_sentence?: IntWithAggregatesFilter | number
    complete_sentence?: StringWithAggregatesFilter | string
    marked_sentence?: StringWithAggregatesFilter | string
    hidden_words?: StringWithAggregatesFilter | string
    words_help?: StringWithAggregatesFilter | string
  }

  export type activity_sentences_usersWhereInput = {
    AND?: Enumerable<activity_sentences_usersWhereInput>
    OR?: Enumerable<activity_sentences_usersWhereInput>
    NOT?: Enumerable<activity_sentences_usersWhereInput>
    id?: IntFilter | number
    activity_id?: IntNullableFilter | number | null
    user_uid?: StringNullableFilter | string | null
    value?: DecimalNullableFilter | Decimal | number | string | null
    processed?: IntNullableFilter | number | null
    activity?: XOR<ActivityRelationFilter, activityWhereInput> | null
    users?: XOR<UsersRelationFilter, usersWhereInput> | null
  }

  export type activity_sentences_usersOrderByWithRelationInput = {
    id?: SortOrder
    activity_id?: SortOrder
    user_uid?: SortOrder
    value?: SortOrder
    processed?: SortOrder
    activity?: activityOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
  }

  export type activity_sentences_usersWhereUniqueInput = {
    id?: number
  }

  export type activity_sentences_usersOrderByWithAggregationInput = {
    id?: SortOrder
    activity_id?: SortOrder
    user_uid?: SortOrder
    value?: SortOrder
    processed?: SortOrder
    _count?: activity_sentences_usersCountOrderByAggregateInput
    _avg?: activity_sentences_usersAvgOrderByAggregateInput
    _max?: activity_sentences_usersMaxOrderByAggregateInput
    _min?: activity_sentences_usersMinOrderByAggregateInput
    _sum?: activity_sentences_usersSumOrderByAggregateInput
  }

  export type activity_sentences_usersScalarWhereWithAggregatesInput = {
    AND?: Enumerable<activity_sentences_usersScalarWhereWithAggregatesInput>
    OR?: Enumerable<activity_sentences_usersScalarWhereWithAggregatesInput>
    NOT?: Enumerable<activity_sentences_usersScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    activity_id?: IntNullableWithAggregatesFilter | number | null
    user_uid?: StringNullableWithAggregatesFilter | string | null
    value?: DecimalNullableWithAggregatesFilter | Decimal | number | string | null
    processed?: IntNullableWithAggregatesFilter | number | null
  }

  export type activity_sentences_users_responseWhereInput = {
    AND?: Enumerable<activity_sentences_users_responseWhereInput>
    OR?: Enumerable<activity_sentences_users_responseWhereInput>
    NOT?: Enumerable<activity_sentences_users_responseWhereInput>
    id?: IntFilter | number
    activity_id?: IntNullableFilter | number | null
    user_uid?: StringNullableFilter | string | null
    number_sentence?: IntFilter | number
    sentences_informed?: StringFilter | string
    comments?: StringNullableFilter | string | null
    activity?: XOR<ActivityRelationFilter, activityWhereInput> | null
    users?: XOR<UsersRelationFilter, usersWhereInput> | null
  }

  export type activity_sentences_users_responseOrderByWithRelationInput = {
    id?: SortOrder
    activity_id?: SortOrder
    user_uid?: SortOrder
    number_sentence?: SortOrder
    sentences_informed?: SortOrder
    comments?: SortOrder
    activity?: activityOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
  }

  export type activity_sentences_users_responseWhereUniqueInput = {
    id?: number
  }

  export type activity_sentences_users_responseOrderByWithAggregationInput = {
    id?: SortOrder
    activity_id?: SortOrder
    user_uid?: SortOrder
    number_sentence?: SortOrder
    sentences_informed?: SortOrder
    comments?: SortOrder
    _count?: activity_sentences_users_responseCountOrderByAggregateInput
    _avg?: activity_sentences_users_responseAvgOrderByAggregateInput
    _max?: activity_sentences_users_responseMaxOrderByAggregateInput
    _min?: activity_sentences_users_responseMinOrderByAggregateInput
    _sum?: activity_sentences_users_responseSumOrderByAggregateInput
  }

  export type activity_sentences_users_responseScalarWhereWithAggregatesInput = {
    AND?: Enumerable<activity_sentences_users_responseScalarWhereWithAggregatesInput>
    OR?: Enumerable<activity_sentences_users_responseScalarWhereWithAggregatesInput>
    NOT?: Enumerable<activity_sentences_users_responseScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    activity_id?: IntNullableWithAggregatesFilter | number | null
    user_uid?: StringNullableWithAggregatesFilter | string | null
    number_sentence?: IntWithAggregatesFilter | number
    sentences_informed?: StringWithAggregatesFilter | string
    comments?: StringNullableWithAggregatesFilter | string | null
  }

  export type notificationWhereInput = {
    AND?: Enumerable<notificationWhereInput>
    OR?: Enumerable<notificationWhereInput>
    NOT?: Enumerable<notificationWhereInput>
    id?: IntFilter | number
    sender_uid?: StringFilter | string
    recipient_uid?: StringFilter | string
    notification_text?: StringFilter | string
    notification_date?: DateTimeFilter | Date | string
    image_reference?: StringNullableFilter | string | null
    image_url?: StringNullableFilter | string | null
    image_type?: StringNullableFilter | string | null
    image_size_wh?: StringNullableFilter | string | null
    users?: XOR<UsersRelationFilter, usersWhereInput>
  }

  export type notificationOrderByWithRelationInput = {
    id?: SortOrder
    sender_uid?: SortOrder
    recipient_uid?: SortOrder
    notification_text?: SortOrder
    notification_date?: SortOrder
    image_reference?: SortOrder
    image_url?: SortOrder
    image_type?: SortOrder
    image_size_wh?: SortOrder
    users?: usersOrderByWithRelationInput
  }

  export type notificationWhereUniqueInput = {
    id?: number
  }

  export type notificationOrderByWithAggregationInput = {
    id?: SortOrder
    sender_uid?: SortOrder
    recipient_uid?: SortOrder
    notification_text?: SortOrder
    notification_date?: SortOrder
    image_reference?: SortOrder
    image_url?: SortOrder
    image_type?: SortOrder
    image_size_wh?: SortOrder
    _count?: notificationCountOrderByAggregateInput
    _avg?: notificationAvgOrderByAggregateInput
    _max?: notificationMaxOrderByAggregateInput
    _min?: notificationMinOrderByAggregateInput
    _sum?: notificationSumOrderByAggregateInput
  }

  export type notificationScalarWhereWithAggregatesInput = {
    AND?: Enumerable<notificationScalarWhereWithAggregatesInput>
    OR?: Enumerable<notificationScalarWhereWithAggregatesInput>
    NOT?: Enumerable<notificationScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    sender_uid?: StringWithAggregatesFilter | string
    recipient_uid?: StringWithAggregatesFilter | string
    notification_text?: StringWithAggregatesFilter | string
    notification_date?: DateTimeWithAggregatesFilter | Date | string
    image_reference?: StringNullableWithAggregatesFilter | string | null
    image_url?: StringNullableWithAggregatesFilter | string | null
    image_type?: StringNullableWithAggregatesFilter | string | null
    image_size_wh?: StringNullableWithAggregatesFilter | string | null
  }

  export type eduvidaWhereInput = {
    AND?: Enumerable<eduvidaWhereInput>
    OR?: Enumerable<eduvidaWhereInput>
    NOT?: Enumerable<eduvidaWhereInput>
    id?: IntFilter | number
    author_uid?: StringFilter | string
    title?: StringFilter | string
    help_text?: StringFilter | string
    help_type?: StringNullableFilter | string | null
    help_close?: IntFilter | number
    created?: DateTimeFilter | Date | string
    image_reference?: StringNullableFilter | string | null
    image_url?: StringNullableFilter | string | null
    image_type?: StringNullableFilter | string | null
    image_size_wh?: StringNullableFilter | string | null
    users?: XOR<UsersRelationFilter, usersWhereInput>
    eduvida_comment?: Eduvida_commentListRelationFilter
  }

  export type eduvidaOrderByWithRelationInput = {
    id?: SortOrder
    author_uid?: SortOrder
    title?: SortOrder
    help_text?: SortOrder
    help_type?: SortOrder
    help_close?: SortOrder
    created?: SortOrder
    image_reference?: SortOrder
    image_url?: SortOrder
    image_type?: SortOrder
    image_size_wh?: SortOrder
    users?: usersOrderByWithRelationInput
    eduvida_comment?: eduvida_commentOrderByRelationAggregateInput
  }

  export type eduvidaWhereUniqueInput = {
    id?: number
  }

  export type eduvidaOrderByWithAggregationInput = {
    id?: SortOrder
    author_uid?: SortOrder
    title?: SortOrder
    help_text?: SortOrder
    help_type?: SortOrder
    help_close?: SortOrder
    created?: SortOrder
    image_reference?: SortOrder
    image_url?: SortOrder
    image_type?: SortOrder
    image_size_wh?: SortOrder
    _count?: eduvidaCountOrderByAggregateInput
    _avg?: eduvidaAvgOrderByAggregateInput
    _max?: eduvidaMaxOrderByAggregateInput
    _min?: eduvidaMinOrderByAggregateInput
    _sum?: eduvidaSumOrderByAggregateInput
  }

  export type eduvidaScalarWhereWithAggregatesInput = {
    AND?: Enumerable<eduvidaScalarWhereWithAggregatesInput>
    OR?: Enumerable<eduvidaScalarWhereWithAggregatesInput>
    NOT?: Enumerable<eduvidaScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    author_uid?: StringWithAggregatesFilter | string
    title?: StringWithAggregatesFilter | string
    help_text?: StringWithAggregatesFilter | string
    help_type?: StringNullableWithAggregatesFilter | string | null
    help_close?: IntWithAggregatesFilter | number
    created?: DateTimeWithAggregatesFilter | Date | string
    image_reference?: StringNullableWithAggregatesFilter | string | null
    image_url?: StringNullableWithAggregatesFilter | string | null
    image_type?: StringNullableWithAggregatesFilter | string | null
    image_size_wh?: StringNullableWithAggregatesFilter | string | null
  }

  export type eduvida_commentWhereInput = {
    AND?: Enumerable<eduvida_commentWhereInput>
    OR?: Enumerable<eduvida_commentWhereInput>
    NOT?: Enumerable<eduvida_commentWhereInput>
    id?: IntFilter | number
    eduvida_id?: IntNullableFilter | number | null
    user_uid?: StringNullableFilter | string | null
    comment?: StringFilter | string
    created?: DateTimeFilter | Date | string
    image_reference?: StringNullableFilter | string | null
    image_url?: StringNullableFilter | string | null
    image_type?: StringNullableFilter | string | null
    image_size_wh?: StringNullableFilter | string | null
    eduvida?: XOR<EduvidaRelationFilter, eduvidaWhereInput> | null
    users?: XOR<UsersRelationFilter, usersWhereInput> | null
  }

  export type eduvida_commentOrderByWithRelationInput = {
    id?: SortOrder
    eduvida_id?: SortOrder
    user_uid?: SortOrder
    comment?: SortOrder
    created?: SortOrder
    image_reference?: SortOrder
    image_url?: SortOrder
    image_type?: SortOrder
    image_size_wh?: SortOrder
    eduvida?: eduvidaOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
  }

  export type eduvida_commentWhereUniqueInput = {
    id?: number
  }

  export type eduvida_commentOrderByWithAggregationInput = {
    id?: SortOrder
    eduvida_id?: SortOrder
    user_uid?: SortOrder
    comment?: SortOrder
    created?: SortOrder
    image_reference?: SortOrder
    image_url?: SortOrder
    image_type?: SortOrder
    image_size_wh?: SortOrder
    _count?: eduvida_commentCountOrderByAggregateInput
    _avg?: eduvida_commentAvgOrderByAggregateInput
    _max?: eduvida_commentMaxOrderByAggregateInput
    _min?: eduvida_commentMinOrderByAggregateInput
    _sum?: eduvida_commentSumOrderByAggregateInput
  }

  export type eduvida_commentScalarWhereWithAggregatesInput = {
    AND?: Enumerable<eduvida_commentScalarWhereWithAggregatesInput>
    OR?: Enumerable<eduvida_commentScalarWhereWithAggregatesInput>
    NOT?: Enumerable<eduvida_commentScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    eduvida_id?: IntNullableWithAggregatesFilter | number | null
    user_uid?: StringNullableWithAggregatesFilter | string | null
    comment?: StringWithAggregatesFilter | string
    created?: DateTimeWithAggregatesFilter | Date | string
    image_reference?: StringNullableWithAggregatesFilter | string | null
    image_url?: StringNullableWithAggregatesFilter | string | null
    image_type?: StringNullableWithAggregatesFilter | string | null
    image_size_wh?: StringNullableWithAggregatesFilter | string | null
  }

  export type usersCreateInput = {
    id?: number
    firebase_uid: string
    email?: string | null
    name?: string | null
    last_name?: string | null
    score?: Decimal | number | string | null
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
    activity?: activityCreateNestedManyWithoutUsersInput
    activity_question_users?: activity_question_usersCreateNestedManyWithoutUsersInput
    activity_question_users_response?: activity_question_users_responseCreateNestedManyWithoutUsersInput
    activity_sentences_users?: activity_sentences_usersCreateNestedManyWithoutUsersInput
    activity_sentences_users_response?: activity_sentences_users_responseCreateNestedManyWithoutUsersInput
    eduvida?: eduvidaCreateNestedManyWithoutUsersInput
    eduvida_comment?: eduvida_commentCreateNestedManyWithoutUsersInput
    notification?: notificationCreateNestedManyWithoutUsersInput
    reward_users?: reward_usersCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateInput = {
    id?: number
    firebase_uid: string
    email?: string | null
    name?: string | null
    last_name?: string | null
    score?: Decimal | number | string | null
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
    activity?: activityUncheckedCreateNestedManyWithoutUsersInput
    activity_question_users?: activity_question_usersUncheckedCreateNestedManyWithoutUsersInput
    activity_question_users_response?: activity_question_users_responseUncheckedCreateNestedManyWithoutUsersInput
    activity_sentences_users?: activity_sentences_usersUncheckedCreateNestedManyWithoutUsersInput
    activity_sentences_users_response?: activity_sentences_users_responseUncheckedCreateNestedManyWithoutUsersInput
    eduvida?: eduvidaUncheckedCreateNestedManyWithoutUsersInput
    eduvida_comment?: eduvida_commentUncheckedCreateNestedManyWithoutUsersInput
    notification?: notificationUncheckedCreateNestedManyWithoutUsersInput
    reward_users?: reward_usersUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    firebase_uid?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    score?: NullableDecimalFieldUpdateOperationsInput | Decimal | number | string | null
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
    activity?: activityUpdateManyWithoutUsersInput
    activity_question_users?: activity_question_usersUpdateManyWithoutUsersInput
    activity_question_users_response?: activity_question_users_responseUpdateManyWithoutUsersInput
    activity_sentences_users?: activity_sentences_usersUpdateManyWithoutUsersInput
    activity_sentences_users_response?: activity_sentences_users_responseUpdateManyWithoutUsersInput
    eduvida?: eduvidaUpdateManyWithoutUsersInput
    eduvida_comment?: eduvida_commentUpdateManyWithoutUsersInput
    notification?: notificationUpdateManyWithoutUsersInput
    reward_users?: reward_usersUpdateManyWithoutUsersInput
  }

  export type usersUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    firebase_uid?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    score?: NullableDecimalFieldUpdateOperationsInput | Decimal | number | string | null
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
    activity?: activityUncheckedUpdateManyWithoutUsersInput
    activity_question_users?: activity_question_usersUncheckedUpdateManyWithoutUsersInput
    activity_question_users_response?: activity_question_users_responseUncheckedUpdateManyWithoutUsersInput
    activity_sentences_users?: activity_sentences_usersUncheckedUpdateManyWithoutUsersInput
    activity_sentences_users_response?: activity_sentences_users_responseUncheckedUpdateManyWithoutUsersInput
    eduvida?: eduvidaUncheckedUpdateManyWithoutUsersInput
    eduvida_comment?: eduvida_commentUncheckedUpdateManyWithoutUsersInput
    notification?: notificationUncheckedUpdateManyWithoutUsersInput
    reward_users?: reward_usersUncheckedUpdateManyWithoutUsersInput
  }

  export type usersCreateManyInput = {
    id?: number
    firebase_uid: string
    email?: string | null
    name?: string | null
    last_name?: string | null
    score?: Decimal | number | string | null
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
  }

  export type usersUpdateManyMutationInput = {
    id?: IntFieldUpdateOperationsInput | number
    firebase_uid?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    score?: NullableDecimalFieldUpdateOperationsInput | Decimal | number | string | null
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type usersUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    firebase_uid?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    score?: NullableDecimalFieldUpdateOperationsInput | Decimal | number | string | null
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type menu_main_activityCreateInput = {
    title: string
    name_icon?: string | null
    color_icon?: string | null
    color_title?: string | null
    color_background?: string | null
  }

  export type menu_main_activityUncheckedCreateInput = {
    id?: number
    title: string
    name_icon?: string | null
    color_icon?: string | null
    color_title?: string | null
    color_background?: string | null
  }

  export type menu_main_activityUpdateInput = {
    title?: StringFieldUpdateOperationsInput | string
    name_icon?: NullableStringFieldUpdateOperationsInput | string | null
    color_icon?: NullableStringFieldUpdateOperationsInput | string | null
    color_title?: NullableStringFieldUpdateOperationsInput | string | null
    color_background?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type menu_main_activityUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    name_icon?: NullableStringFieldUpdateOperationsInput | string | null
    color_icon?: NullableStringFieldUpdateOperationsInput | string | null
    color_title?: NullableStringFieldUpdateOperationsInput | string | null
    color_background?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type menu_main_activityCreateManyInput = {
    id?: number
    title: string
    name_icon?: string | null
    color_icon?: string | null
    color_title?: string | null
    color_background?: string | null
  }

  export type menu_main_activityUpdateManyMutationInput = {
    title?: StringFieldUpdateOperationsInput | string
    name_icon?: NullableStringFieldUpdateOperationsInput | string | null
    color_icon?: NullableStringFieldUpdateOperationsInput | string | null
    color_title?: NullableStringFieldUpdateOperationsInput | string | null
    color_background?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type menu_main_activityUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    name_icon?: NullableStringFieldUpdateOperationsInput | string | null
    color_icon?: NullableStringFieldUpdateOperationsInput | string | null
    color_title?: NullableStringFieldUpdateOperationsInput | string | null
    color_background?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type activityCreateInput = {
    title: string
    with_password: number
    password?: string | null
    type_activity?: string | null
    excluded?: number | null
    created?: Date | string | null
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
    difficulty_level?: string | null
    users: usersCreateNestedOneWithoutActivityInput
    activity_question_response?: activity_question_responseCreateNestedManyWithoutActivityInput
    activity_question_users?: activity_question_usersCreateNestedManyWithoutActivityInput
    activity_question_users_response?: activity_question_users_responseCreateNestedManyWithoutActivityInput
    activity_sentences_users?: activity_sentences_usersCreateNestedManyWithoutActivityInput
    activity_sentences_users_response?: activity_sentences_users_responseCreateNestedManyWithoutActivityInput
  }

  export type activityUncheckedCreateInput = {
    id?: number
    author_uid: string
    title: string
    with_password: number
    password?: string | null
    type_activity?: string | null
    excluded?: number | null
    created?: Date | string | null
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
    difficulty_level?: string | null
    activity_question_response?: activity_question_responseUncheckedCreateNestedManyWithoutActivityInput
    activity_question_users?: activity_question_usersUncheckedCreateNestedManyWithoutActivityInput
    activity_question_users_response?: activity_question_users_responseUncheckedCreateNestedManyWithoutActivityInput
    activity_sentences_users?: activity_sentences_usersUncheckedCreateNestedManyWithoutActivityInput
    activity_sentences_users_response?: activity_sentences_users_responseUncheckedCreateNestedManyWithoutActivityInput
  }

  export type activityUpdateInput = {
    title?: StringFieldUpdateOperationsInput | string
    with_password?: IntFieldUpdateOperationsInput | number
    password?: NullableStringFieldUpdateOperationsInput | string | null
    type_activity?: NullableStringFieldUpdateOperationsInput | string | null
    excluded?: NullableIntFieldUpdateOperationsInput | number | null
    created?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
    difficulty_level?: NullableStringFieldUpdateOperationsInput | string | null
    users?: usersUpdateOneRequiredWithoutActivityInput
    activity_question_response?: activity_question_responseUpdateManyWithoutActivityInput
    activity_question_users?: activity_question_usersUpdateManyWithoutActivityInput
    activity_question_users_response?: activity_question_users_responseUpdateManyWithoutActivityInput
    activity_sentences_users?: activity_sentences_usersUpdateManyWithoutActivityInput
    activity_sentences_users_response?: activity_sentences_users_responseUpdateManyWithoutActivityInput
  }

  export type activityUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    author_uid?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    with_password?: IntFieldUpdateOperationsInput | number
    password?: NullableStringFieldUpdateOperationsInput | string | null
    type_activity?: NullableStringFieldUpdateOperationsInput | string | null
    excluded?: NullableIntFieldUpdateOperationsInput | number | null
    created?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
    difficulty_level?: NullableStringFieldUpdateOperationsInput | string | null
    activity_question_response?: activity_question_responseUncheckedUpdateManyWithoutActivityInput
    activity_question_users?: activity_question_usersUncheckedUpdateManyWithoutActivityInput
    activity_question_users_response?: activity_question_users_responseUncheckedUpdateManyWithoutActivityInput
    activity_sentences_users?: activity_sentences_usersUncheckedUpdateManyWithoutActivityInput
    activity_sentences_users_response?: activity_sentences_users_responseUncheckedUpdateManyWithoutActivityInput
  }

  export type activityCreateManyInput = {
    id?: number
    author_uid: string
    title: string
    with_password: number
    password?: string | null
    type_activity?: string | null
    excluded?: number | null
    created?: Date | string | null
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
    difficulty_level?: string | null
  }

  export type activityUpdateManyMutationInput = {
    title?: StringFieldUpdateOperationsInput | string
    with_password?: IntFieldUpdateOperationsInput | number
    password?: NullableStringFieldUpdateOperationsInput | string | null
    type_activity?: NullableStringFieldUpdateOperationsInput | string | null
    excluded?: NullableIntFieldUpdateOperationsInput | number | null
    created?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
    difficulty_level?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type activityUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    author_uid?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    with_password?: IntFieldUpdateOperationsInput | number
    password?: NullableStringFieldUpdateOperationsInput | string | null
    type_activity?: NullableStringFieldUpdateOperationsInput | string | null
    excluded?: NullableIntFieldUpdateOperationsInput | number | null
    created?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
    difficulty_level?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type activity_question_responseCreateInput = {
    number_question: number
    answer_one: string
    answer_two: string
    answer_tree: string
    answer_four: string
    right_answer: string
    question?: string | null
    activity?: activityCreateNestedOneWithoutActivity_question_responseInput
  }

  export type activity_question_responseUncheckedCreateInput = {
    id?: number
    activity_id?: number | null
    number_question: number
    answer_one: string
    answer_two: string
    answer_tree: string
    answer_four: string
    right_answer: string
    question?: string | null
  }

  export type activity_question_responseUpdateInput = {
    number_question?: IntFieldUpdateOperationsInput | number
    answer_one?: StringFieldUpdateOperationsInput | string
    answer_two?: StringFieldUpdateOperationsInput | string
    answer_tree?: StringFieldUpdateOperationsInput | string
    answer_four?: StringFieldUpdateOperationsInput | string
    right_answer?: StringFieldUpdateOperationsInput | string
    question?: NullableStringFieldUpdateOperationsInput | string | null
    activity?: activityUpdateOneWithoutActivity_question_responseInput
  }

  export type activity_question_responseUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    activity_id?: NullableIntFieldUpdateOperationsInput | number | null
    number_question?: IntFieldUpdateOperationsInput | number
    answer_one?: StringFieldUpdateOperationsInput | string
    answer_two?: StringFieldUpdateOperationsInput | string
    answer_tree?: StringFieldUpdateOperationsInput | string
    answer_four?: StringFieldUpdateOperationsInput | string
    right_answer?: StringFieldUpdateOperationsInput | string
    question?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type activity_question_responseCreateManyInput = {
    id?: number
    activity_id?: number | null
    number_question: number
    answer_one: string
    answer_two: string
    answer_tree: string
    answer_four: string
    right_answer: string
    question?: string | null
  }

  export type activity_question_responseUpdateManyMutationInput = {
    number_question?: IntFieldUpdateOperationsInput | number
    answer_one?: StringFieldUpdateOperationsInput | string
    answer_two?: StringFieldUpdateOperationsInput | string
    answer_tree?: StringFieldUpdateOperationsInput | string
    answer_four?: StringFieldUpdateOperationsInput | string
    right_answer?: StringFieldUpdateOperationsInput | string
    question?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type activity_question_responseUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    activity_id?: NullableIntFieldUpdateOperationsInput | number | null
    number_question?: IntFieldUpdateOperationsInput | number
    answer_one?: StringFieldUpdateOperationsInput | string
    answer_two?: StringFieldUpdateOperationsInput | string
    answer_tree?: StringFieldUpdateOperationsInput | string
    answer_four?: StringFieldUpdateOperationsInput | string
    right_answer?: StringFieldUpdateOperationsInput | string
    question?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type activity_question_usersCreateInput = {
    value?: Decimal | number | string | null
    processed?: number | null
    created?: Date | string | null
    display_to_user?: number | null
    evaluated?: number | null
    activity?: activityCreateNestedOneWithoutActivity_question_usersInput
    users?: usersCreateNestedOneWithoutActivity_question_usersInput
  }

  export type activity_question_usersUncheckedCreateInput = {
    id?: number
    activity_id?: number | null
    user_uid?: string | null
    value?: Decimal | number | string | null
    processed?: number | null
    created?: Date | string | null
    display_to_user?: number | null
    evaluated?: number | null
  }

  export type activity_question_usersUpdateInput = {
    value?: NullableDecimalFieldUpdateOperationsInput | Decimal | number | string | null
    processed?: NullableIntFieldUpdateOperationsInput | number | null
    created?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    display_to_user?: NullableIntFieldUpdateOperationsInput | number | null
    evaluated?: NullableIntFieldUpdateOperationsInput | number | null
    activity?: activityUpdateOneWithoutActivity_question_usersInput
    users?: usersUpdateOneWithoutActivity_question_usersInput
  }

  export type activity_question_usersUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    activity_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_uid?: NullableStringFieldUpdateOperationsInput | string | null
    value?: NullableDecimalFieldUpdateOperationsInput | Decimal | number | string | null
    processed?: NullableIntFieldUpdateOperationsInput | number | null
    created?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    display_to_user?: NullableIntFieldUpdateOperationsInput | number | null
    evaluated?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type activity_question_usersCreateManyInput = {
    id?: number
    activity_id?: number | null
    user_uid?: string | null
    value?: Decimal | number | string | null
    processed?: number | null
    created?: Date | string | null
    display_to_user?: number | null
    evaluated?: number | null
  }

  export type activity_question_usersUpdateManyMutationInput = {
    value?: NullableDecimalFieldUpdateOperationsInput | Decimal | number | string | null
    processed?: NullableIntFieldUpdateOperationsInput | number | null
    created?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    display_to_user?: NullableIntFieldUpdateOperationsInput | number | null
    evaluated?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type activity_question_usersUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    activity_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_uid?: NullableStringFieldUpdateOperationsInput | string | null
    value?: NullableDecimalFieldUpdateOperationsInput | Decimal | number | string | null
    processed?: NullableIntFieldUpdateOperationsInput | number | null
    created?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    display_to_user?: NullableIntFieldUpdateOperationsInput | number | null
    evaluated?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type activity_question_users_responseCreateInput = {
    number_question: number
    answer: string
    comments?: string | null
    activity?: activityCreateNestedOneWithoutActivity_question_users_responseInput
    users?: usersCreateNestedOneWithoutActivity_question_users_responseInput
  }

  export type activity_question_users_responseUncheckedCreateInput = {
    id?: number
    activity_id?: number | null
    user_uid?: string | null
    number_question: number
    answer: string
    comments?: string | null
  }

  export type activity_question_users_responseUpdateInput = {
    number_question?: IntFieldUpdateOperationsInput | number
    answer?: StringFieldUpdateOperationsInput | string
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    activity?: activityUpdateOneWithoutActivity_question_users_responseInput
    users?: usersUpdateOneWithoutActivity_question_users_responseInput
  }

  export type activity_question_users_responseUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    activity_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_uid?: NullableStringFieldUpdateOperationsInput | string | null
    number_question?: IntFieldUpdateOperationsInput | number
    answer?: StringFieldUpdateOperationsInput | string
    comments?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type activity_question_users_responseCreateManyInput = {
    id?: number
    activity_id?: number | null
    user_uid?: string | null
    number_question: number
    answer: string
    comments?: string | null
  }

  export type activity_question_users_responseUpdateManyMutationInput = {
    number_question?: IntFieldUpdateOperationsInput | number
    answer?: StringFieldUpdateOperationsInput | string
    comments?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type activity_question_users_responseUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    activity_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_uid?: NullableStringFieldUpdateOperationsInput | string | null
    number_question?: IntFieldUpdateOperationsInput | number
    answer?: StringFieldUpdateOperationsInput | string
    comments?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type rewardCreateInput = {
    type: number
    name: string
    description: string
    value: Decimal | number | string
    picture?: string | null
    reward_users?: reward_usersCreateNestedManyWithoutRewardInput
  }

  export type rewardUncheckedCreateInput = {
    id?: number
    type: number
    name: string
    description: string
    value: Decimal | number | string
    picture?: string | null
    reward_users?: reward_usersUncheckedCreateNestedManyWithoutRewardInput
  }

  export type rewardUpdateInput = {
    type?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    value?: DecimalFieldUpdateOperationsInput | Decimal | number | string
    picture?: NullableStringFieldUpdateOperationsInput | string | null
    reward_users?: reward_usersUpdateManyWithoutRewardInput
  }

  export type rewardUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    value?: DecimalFieldUpdateOperationsInput | Decimal | number | string
    picture?: NullableStringFieldUpdateOperationsInput | string | null
    reward_users?: reward_usersUncheckedUpdateManyWithoutRewardInput
  }

  export type rewardCreateManyInput = {
    id?: number
    type: number
    name: string
    description: string
    value: Decimal | number | string
    picture?: string | null
  }

  export type rewardUpdateManyMutationInput = {
    type?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    value?: DecimalFieldUpdateOperationsInput | Decimal | number | string
    picture?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type rewardUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    value?: DecimalFieldUpdateOperationsInput | Decimal | number | string
    picture?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type reward_usersCreateInput = {
    amount: number
    reward?: rewardCreateNestedOneWithoutReward_usersInput
    users?: usersCreateNestedOneWithoutReward_usersInput
  }

  export type reward_usersUncheckedCreateInput = {
    id?: number
    user_uid?: string | null
    reward_id?: number | null
    amount: number
  }

  export type reward_usersUpdateInput = {
    amount?: IntFieldUpdateOperationsInput | number
    reward?: rewardUpdateOneWithoutReward_usersInput
    users?: usersUpdateOneWithoutReward_usersInput
  }

  export type reward_usersUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_uid?: NullableStringFieldUpdateOperationsInput | string | null
    reward_id?: NullableIntFieldUpdateOperationsInput | number | null
    amount?: IntFieldUpdateOperationsInput | number
  }

  export type reward_usersCreateManyInput = {
    id?: number
    user_uid?: string | null
    reward_id?: number | null
    amount: number
  }

  export type reward_usersUpdateManyMutationInput = {
    amount?: IntFieldUpdateOperationsInput | number
  }

  export type reward_usersUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_uid?: NullableStringFieldUpdateOperationsInput | string | null
    reward_id?: NullableIntFieldUpdateOperationsInput | number | null
    amount?: IntFieldUpdateOperationsInput | number
  }

  export type activity_sentencesCreateInput = {
    activity_id: number
    number_sentence: number
    complete_sentence: string
    marked_sentence: string
    hidden_words: string
    words_help: string
  }

  export type activity_sentencesUncheckedCreateInput = {
    id?: number
    activity_id: number
    number_sentence: number
    complete_sentence: string
    marked_sentence: string
    hidden_words: string
    words_help: string
  }

  export type activity_sentencesUpdateInput = {
    activity_id?: IntFieldUpdateOperationsInput | number
    number_sentence?: IntFieldUpdateOperationsInput | number
    complete_sentence?: StringFieldUpdateOperationsInput | string
    marked_sentence?: StringFieldUpdateOperationsInput | string
    hidden_words?: StringFieldUpdateOperationsInput | string
    words_help?: StringFieldUpdateOperationsInput | string
  }

  export type activity_sentencesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    activity_id?: IntFieldUpdateOperationsInput | number
    number_sentence?: IntFieldUpdateOperationsInput | number
    complete_sentence?: StringFieldUpdateOperationsInput | string
    marked_sentence?: StringFieldUpdateOperationsInput | string
    hidden_words?: StringFieldUpdateOperationsInput | string
    words_help?: StringFieldUpdateOperationsInput | string
  }

  export type activity_sentencesCreateManyInput = {
    id?: number
    activity_id: number
    number_sentence: number
    complete_sentence: string
    marked_sentence: string
    hidden_words: string
    words_help: string
  }

  export type activity_sentencesUpdateManyMutationInput = {
    activity_id?: IntFieldUpdateOperationsInput | number
    number_sentence?: IntFieldUpdateOperationsInput | number
    complete_sentence?: StringFieldUpdateOperationsInput | string
    marked_sentence?: StringFieldUpdateOperationsInput | string
    hidden_words?: StringFieldUpdateOperationsInput | string
    words_help?: StringFieldUpdateOperationsInput | string
  }

  export type activity_sentencesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    activity_id?: IntFieldUpdateOperationsInput | number
    number_sentence?: IntFieldUpdateOperationsInput | number
    complete_sentence?: StringFieldUpdateOperationsInput | string
    marked_sentence?: StringFieldUpdateOperationsInput | string
    hidden_words?: StringFieldUpdateOperationsInput | string
    words_help?: StringFieldUpdateOperationsInput | string
  }

  export type activity_sentences_usersCreateInput = {
    value?: Decimal | number | string | null
    processed?: number | null
    activity?: activityCreateNestedOneWithoutActivity_sentences_usersInput
    users?: usersCreateNestedOneWithoutActivity_sentences_usersInput
  }

  export type activity_sentences_usersUncheckedCreateInput = {
    id?: number
    activity_id?: number | null
    user_uid?: string | null
    value?: Decimal | number | string | null
    processed?: number | null
  }

  export type activity_sentences_usersUpdateInput = {
    value?: NullableDecimalFieldUpdateOperationsInput | Decimal | number | string | null
    processed?: NullableIntFieldUpdateOperationsInput | number | null
    activity?: activityUpdateOneWithoutActivity_sentences_usersInput
    users?: usersUpdateOneWithoutActivity_sentences_usersInput
  }

  export type activity_sentences_usersUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    activity_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_uid?: NullableStringFieldUpdateOperationsInput | string | null
    value?: NullableDecimalFieldUpdateOperationsInput | Decimal | number | string | null
    processed?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type activity_sentences_usersCreateManyInput = {
    id?: number
    activity_id?: number | null
    user_uid?: string | null
    value?: Decimal | number | string | null
    processed?: number | null
  }

  export type activity_sentences_usersUpdateManyMutationInput = {
    value?: NullableDecimalFieldUpdateOperationsInput | Decimal | number | string | null
    processed?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type activity_sentences_usersUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    activity_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_uid?: NullableStringFieldUpdateOperationsInput | string | null
    value?: NullableDecimalFieldUpdateOperationsInput | Decimal | number | string | null
    processed?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type activity_sentences_users_responseCreateInput = {
    number_sentence: number
    sentences_informed: string
    comments?: string | null
    activity?: activityCreateNestedOneWithoutActivity_sentences_users_responseInput
    users?: usersCreateNestedOneWithoutActivity_sentences_users_responseInput
  }

  export type activity_sentences_users_responseUncheckedCreateInput = {
    id?: number
    activity_id?: number | null
    user_uid?: string | null
    number_sentence: number
    sentences_informed: string
    comments?: string | null
  }

  export type activity_sentences_users_responseUpdateInput = {
    number_sentence?: IntFieldUpdateOperationsInput | number
    sentences_informed?: StringFieldUpdateOperationsInput | string
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    activity?: activityUpdateOneWithoutActivity_sentences_users_responseInput
    users?: usersUpdateOneWithoutActivity_sentences_users_responseInput
  }

  export type activity_sentences_users_responseUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    activity_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_uid?: NullableStringFieldUpdateOperationsInput | string | null
    number_sentence?: IntFieldUpdateOperationsInput | number
    sentences_informed?: StringFieldUpdateOperationsInput | string
    comments?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type activity_sentences_users_responseCreateManyInput = {
    id?: number
    activity_id?: number | null
    user_uid?: string | null
    number_sentence: number
    sentences_informed: string
    comments?: string | null
  }

  export type activity_sentences_users_responseUpdateManyMutationInput = {
    number_sentence?: IntFieldUpdateOperationsInput | number
    sentences_informed?: StringFieldUpdateOperationsInput | string
    comments?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type activity_sentences_users_responseUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    activity_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_uid?: NullableStringFieldUpdateOperationsInput | string | null
    number_sentence?: IntFieldUpdateOperationsInput | number
    sentences_informed?: StringFieldUpdateOperationsInput | string
    comments?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type notificationCreateInput = {
    recipient_uid: string
    notification_text: string
    notification_date: Date | string
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
    users: usersCreateNestedOneWithoutNotificationInput
  }

  export type notificationUncheckedCreateInput = {
    id?: number
    sender_uid: string
    recipient_uid: string
    notification_text: string
    notification_date: Date | string
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
  }

  export type notificationUpdateInput = {
    recipient_uid?: StringFieldUpdateOperationsInput | string
    notification_text?: StringFieldUpdateOperationsInput | string
    notification_date?: DateTimeFieldUpdateOperationsInput | Date | string
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
    users?: usersUpdateOneRequiredWithoutNotificationInput
  }

  export type notificationUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    sender_uid?: StringFieldUpdateOperationsInput | string
    recipient_uid?: StringFieldUpdateOperationsInput | string
    notification_text?: StringFieldUpdateOperationsInput | string
    notification_date?: DateTimeFieldUpdateOperationsInput | Date | string
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type notificationCreateManyInput = {
    id?: number
    sender_uid: string
    recipient_uid: string
    notification_text: string
    notification_date: Date | string
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
  }

  export type notificationUpdateManyMutationInput = {
    recipient_uid?: StringFieldUpdateOperationsInput | string
    notification_text?: StringFieldUpdateOperationsInput | string
    notification_date?: DateTimeFieldUpdateOperationsInput | Date | string
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type notificationUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    sender_uid?: StringFieldUpdateOperationsInput | string
    recipient_uid?: StringFieldUpdateOperationsInput | string
    notification_text?: StringFieldUpdateOperationsInput | string
    notification_date?: DateTimeFieldUpdateOperationsInput | Date | string
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type eduvidaCreateInput = {
    title: string
    help_text: string
    help_type?: string | null
    help_close: number
    created: Date | string
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
    users: usersCreateNestedOneWithoutEduvidaInput
    eduvida_comment?: eduvida_commentCreateNestedManyWithoutEduvidaInput
  }

  export type eduvidaUncheckedCreateInput = {
    id?: number
    author_uid: string
    title: string
    help_text: string
    help_type?: string | null
    help_close: number
    created: Date | string
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
    eduvida_comment?: eduvida_commentUncheckedCreateNestedManyWithoutEduvidaInput
  }

  export type eduvidaUpdateInput = {
    title?: StringFieldUpdateOperationsInput | string
    help_text?: StringFieldUpdateOperationsInput | string
    help_type?: NullableStringFieldUpdateOperationsInput | string | null
    help_close?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
    users?: usersUpdateOneRequiredWithoutEduvidaInput
    eduvida_comment?: eduvida_commentUpdateManyWithoutEduvidaInput
  }

  export type eduvidaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    author_uid?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    help_text?: StringFieldUpdateOperationsInput | string
    help_type?: NullableStringFieldUpdateOperationsInput | string | null
    help_close?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
    eduvida_comment?: eduvida_commentUncheckedUpdateManyWithoutEduvidaInput
  }

  export type eduvidaCreateManyInput = {
    id?: number
    author_uid: string
    title: string
    help_text: string
    help_type?: string | null
    help_close: number
    created: Date | string
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
  }

  export type eduvidaUpdateManyMutationInput = {
    title?: StringFieldUpdateOperationsInput | string
    help_text?: StringFieldUpdateOperationsInput | string
    help_type?: NullableStringFieldUpdateOperationsInput | string | null
    help_close?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type eduvidaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    author_uid?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    help_text?: StringFieldUpdateOperationsInput | string
    help_type?: NullableStringFieldUpdateOperationsInput | string | null
    help_close?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type eduvida_commentCreateInput = {
    comment: string
    created: Date | string
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
    eduvida?: eduvidaCreateNestedOneWithoutEduvida_commentInput
    users?: usersCreateNestedOneWithoutEduvida_commentInput
  }

  export type eduvida_commentUncheckedCreateInput = {
    id?: number
    eduvida_id?: number | null
    user_uid?: string | null
    comment: string
    created: Date | string
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
  }

  export type eduvida_commentUpdateInput = {
    comment?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
    eduvida?: eduvidaUpdateOneWithoutEduvida_commentInput
    users?: usersUpdateOneWithoutEduvida_commentInput
  }

  export type eduvida_commentUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    eduvida_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_uid?: NullableStringFieldUpdateOperationsInput | string | null
    comment?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type eduvida_commentCreateManyInput = {
    id?: number
    eduvida_id?: number | null
    user_uid?: string | null
    comment: string
    created: Date | string
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
  }

  export type eduvida_commentUpdateManyMutationInput = {
    comment?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type eduvida_commentUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    eduvida_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_uid?: NullableStringFieldUpdateOperationsInput | string | null
    comment?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type IntFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntFilter | number
  }

  export type StringFilter = {
    equals?: string
    in?: Enumerable<string>
    notIn?: Enumerable<string>
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    mode?: QueryMode
    not?: NestedStringFilter | string
  }

  export type StringNullableFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    mode?: QueryMode
    not?: NestedStringNullableFilter | string | null
  }

  export type DecimalNullableFilter = {
    equals?: Decimal | number | string | null
    in?: Enumerable<Decimal> | Enumerable<number> | Enumerable<string> | null
    notIn?: Enumerable<Decimal> | Enumerable<number> | Enumerable<string> | null
    lt?: Decimal | number | string
    lte?: Decimal | number | string
    gt?: Decimal | number | string
    gte?: Decimal | number | string
    not?: NestedDecimalNullableFilter | Decimal | number | string | null
  }

  export type ActivityListRelationFilter = {
    every?: activityWhereInput
    some?: activityWhereInput
    none?: activityWhereInput
  }

  export type Activity_question_usersListRelationFilter = {
    every?: activity_question_usersWhereInput
    some?: activity_question_usersWhereInput
    none?: activity_question_usersWhereInput
  }

  export type Activity_question_users_responseListRelationFilter = {
    every?: activity_question_users_responseWhereInput
    some?: activity_question_users_responseWhereInput
    none?: activity_question_users_responseWhereInput
  }

  export type Activity_sentences_usersListRelationFilter = {
    every?: activity_sentences_usersWhereInput
    some?: activity_sentences_usersWhereInput
    none?: activity_sentences_usersWhereInput
  }

  export type Activity_sentences_users_responseListRelationFilter = {
    every?: activity_sentences_users_responseWhereInput
    some?: activity_sentences_users_responseWhereInput
    none?: activity_sentences_users_responseWhereInput
  }

  export type EduvidaListRelationFilter = {
    every?: eduvidaWhereInput
    some?: eduvidaWhereInput
    none?: eduvidaWhereInput
  }

  export type Eduvida_commentListRelationFilter = {
    every?: eduvida_commentWhereInput
    some?: eduvida_commentWhereInput
    none?: eduvida_commentWhereInput
  }

  export type NotificationListRelationFilter = {
    every?: notificationWhereInput
    some?: notificationWhereInput
    none?: notificationWhereInput
  }

  export type Reward_usersListRelationFilter = {
    every?: reward_usersWhereInput
    some?: reward_usersWhereInput
    none?: reward_usersWhereInput
  }

  export type activityOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type activity_question_usersOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type activity_question_users_responseOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type activity_sentences_usersOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type activity_sentences_users_responseOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type eduvidaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type eduvida_commentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type notificationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type reward_usersOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type usersCountOrderByAggregateInput = {
    id?: SortOrder
    firebase_uid?: SortOrder
    email?: SortOrder
    name?: SortOrder
    last_name?: SortOrder
    score?: SortOrder
    image_reference?: SortOrder
    image_url?: SortOrder
    image_type?: SortOrder
    image_size_wh?: SortOrder
  }

  export type usersAvgOrderByAggregateInput = {
    id?: SortOrder
    score?: SortOrder
  }

  export type usersMaxOrderByAggregateInput = {
    id?: SortOrder
    firebase_uid?: SortOrder
    email?: SortOrder
    name?: SortOrder
    last_name?: SortOrder
    score?: SortOrder
    image_reference?: SortOrder
    image_url?: SortOrder
    image_type?: SortOrder
    image_size_wh?: SortOrder
  }

  export type usersMinOrderByAggregateInput = {
    id?: SortOrder
    firebase_uid?: SortOrder
    email?: SortOrder
    name?: SortOrder
    last_name?: SortOrder
    score?: SortOrder
    image_reference?: SortOrder
    image_url?: SortOrder
    image_type?: SortOrder
    image_size_wh?: SortOrder
  }

  export type usersSumOrderByAggregateInput = {
    id?: SortOrder
    score?: SortOrder
  }

  export type IntWithAggregatesFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntWithAggregatesFilter | number
    _count?: NestedIntFilter
    _avg?: NestedFloatFilter
    _sum?: NestedIntFilter
    _min?: NestedIntFilter
    _max?: NestedIntFilter
  }

  export type StringWithAggregatesFilter = {
    equals?: string
    in?: Enumerable<string>
    notIn?: Enumerable<string>
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter | string
    _count?: NestedIntFilter
    _min?: NestedStringFilter
    _max?: NestedStringFilter
  }

  export type StringNullableWithAggregatesFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter | string | null
    _count?: NestedIntNullableFilter
    _min?: NestedStringNullableFilter
    _max?: NestedStringNullableFilter
  }

  export type DecimalNullableWithAggregatesFilter = {
    equals?: Decimal | number | string | null
    in?: Enumerable<Decimal> | Enumerable<number> | Enumerable<string> | null
    notIn?: Enumerable<Decimal> | Enumerable<number> | Enumerable<string> | null
    lt?: Decimal | number | string
    lte?: Decimal | number | string
    gt?: Decimal | number | string
    gte?: Decimal | number | string
    not?: NestedDecimalNullableWithAggregatesFilter | Decimal | number | string | null
    _count?: NestedIntNullableFilter
    _avg?: NestedDecimalNullableFilter
    _sum?: NestedDecimalNullableFilter
    _min?: NestedDecimalNullableFilter
    _max?: NestedDecimalNullableFilter
  }

  export type menu_main_activityCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    name_icon?: SortOrder
    color_icon?: SortOrder
    color_title?: SortOrder
    color_background?: SortOrder
  }

  export type menu_main_activityAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type menu_main_activityMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    name_icon?: SortOrder
    color_icon?: SortOrder
    color_title?: SortOrder
    color_background?: SortOrder
  }

  export type menu_main_activityMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    name_icon?: SortOrder
    color_icon?: SortOrder
    color_title?: SortOrder
    color_background?: SortOrder
  }

  export type menu_main_activitySumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type IntNullableFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntNullableFilter | number | null
  }

  export type DateTimeNullableFilter = {
    equals?: Date | string | null
    in?: Enumerable<Date> | Enumerable<string> | null
    notIn?: Enumerable<Date> | Enumerable<string> | null
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeNullableFilter | Date | string | null
  }

  export type UsersRelationFilter = {
    is?: usersWhereInput | null
    isNot?: usersWhereInput | null
  }

  export type Activity_question_responseListRelationFilter = {
    every?: activity_question_responseWhereInput
    some?: activity_question_responseWhereInput
    none?: activity_question_responseWhereInput
  }

  export type activity_question_responseOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type activityCountOrderByAggregateInput = {
    id?: SortOrder
    author_uid?: SortOrder
    title?: SortOrder
    with_password?: SortOrder
    password?: SortOrder
    type_activity?: SortOrder
    excluded?: SortOrder
    created?: SortOrder
    image_reference?: SortOrder
    image_url?: SortOrder
    image_type?: SortOrder
    image_size_wh?: SortOrder
    difficulty_level?: SortOrder
  }

  export type activityAvgOrderByAggregateInput = {
    id?: SortOrder
    with_password?: SortOrder
    excluded?: SortOrder
  }

  export type activityMaxOrderByAggregateInput = {
    id?: SortOrder
    author_uid?: SortOrder
    title?: SortOrder
    with_password?: SortOrder
    password?: SortOrder
    type_activity?: SortOrder
    excluded?: SortOrder
    created?: SortOrder
    image_reference?: SortOrder
    image_url?: SortOrder
    image_type?: SortOrder
    image_size_wh?: SortOrder
    difficulty_level?: SortOrder
  }

  export type activityMinOrderByAggregateInput = {
    id?: SortOrder
    author_uid?: SortOrder
    title?: SortOrder
    with_password?: SortOrder
    password?: SortOrder
    type_activity?: SortOrder
    excluded?: SortOrder
    created?: SortOrder
    image_reference?: SortOrder
    image_url?: SortOrder
    image_type?: SortOrder
    image_size_wh?: SortOrder
    difficulty_level?: SortOrder
  }

  export type activitySumOrderByAggregateInput = {
    id?: SortOrder
    with_password?: SortOrder
    excluded?: SortOrder
  }

  export type IntNullableWithAggregatesFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntNullableWithAggregatesFilter | number | null
    _count?: NestedIntNullableFilter
    _avg?: NestedFloatNullableFilter
    _sum?: NestedIntNullableFilter
    _min?: NestedIntNullableFilter
    _max?: NestedIntNullableFilter
  }

  export type DateTimeNullableWithAggregatesFilter = {
    equals?: Date | string | null
    in?: Enumerable<Date> | Enumerable<string> | null
    notIn?: Enumerable<Date> | Enumerable<string> | null
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeNullableWithAggregatesFilter | Date | string | null
    _count?: NestedIntNullableFilter
    _min?: NestedDateTimeNullableFilter
    _max?: NestedDateTimeNullableFilter
  }

  export type ActivityRelationFilter = {
    is?: activityWhereInput | null
    isNot?: activityWhereInput | null
  }

  export type activity_question_responseCountOrderByAggregateInput = {
    id?: SortOrder
    activity_id?: SortOrder
    number_question?: SortOrder
    answer_one?: SortOrder
    answer_two?: SortOrder
    answer_tree?: SortOrder
    answer_four?: SortOrder
    right_answer?: SortOrder
    question?: SortOrder
  }

  export type activity_question_responseAvgOrderByAggregateInput = {
    id?: SortOrder
    activity_id?: SortOrder
    number_question?: SortOrder
  }

  export type activity_question_responseMaxOrderByAggregateInput = {
    id?: SortOrder
    activity_id?: SortOrder
    number_question?: SortOrder
    answer_one?: SortOrder
    answer_two?: SortOrder
    answer_tree?: SortOrder
    answer_four?: SortOrder
    right_answer?: SortOrder
    question?: SortOrder
  }

  export type activity_question_responseMinOrderByAggregateInput = {
    id?: SortOrder
    activity_id?: SortOrder
    number_question?: SortOrder
    answer_one?: SortOrder
    answer_two?: SortOrder
    answer_tree?: SortOrder
    answer_four?: SortOrder
    right_answer?: SortOrder
    question?: SortOrder
  }

  export type activity_question_responseSumOrderByAggregateInput = {
    id?: SortOrder
    activity_id?: SortOrder
    number_question?: SortOrder
  }

  export type activity_question_usersCountOrderByAggregateInput = {
    id?: SortOrder
    activity_id?: SortOrder
    user_uid?: SortOrder
    value?: SortOrder
    processed?: SortOrder
    created?: SortOrder
    display_to_user?: SortOrder
    evaluated?: SortOrder
  }

  export type activity_question_usersAvgOrderByAggregateInput = {
    id?: SortOrder
    activity_id?: SortOrder
    value?: SortOrder
    processed?: SortOrder
    display_to_user?: SortOrder
    evaluated?: SortOrder
  }

  export type activity_question_usersMaxOrderByAggregateInput = {
    id?: SortOrder
    activity_id?: SortOrder
    user_uid?: SortOrder
    value?: SortOrder
    processed?: SortOrder
    created?: SortOrder
    display_to_user?: SortOrder
    evaluated?: SortOrder
  }

  export type activity_question_usersMinOrderByAggregateInput = {
    id?: SortOrder
    activity_id?: SortOrder
    user_uid?: SortOrder
    value?: SortOrder
    processed?: SortOrder
    created?: SortOrder
    display_to_user?: SortOrder
    evaluated?: SortOrder
  }

  export type activity_question_usersSumOrderByAggregateInput = {
    id?: SortOrder
    activity_id?: SortOrder
    value?: SortOrder
    processed?: SortOrder
    display_to_user?: SortOrder
    evaluated?: SortOrder
  }

  export type activity_question_users_responseCountOrderByAggregateInput = {
    id?: SortOrder
    activity_id?: SortOrder
    user_uid?: SortOrder
    number_question?: SortOrder
    answer?: SortOrder
    comments?: SortOrder
  }

  export type activity_question_users_responseAvgOrderByAggregateInput = {
    id?: SortOrder
    activity_id?: SortOrder
    number_question?: SortOrder
  }

  export type activity_question_users_responseMaxOrderByAggregateInput = {
    id?: SortOrder
    activity_id?: SortOrder
    user_uid?: SortOrder
    number_question?: SortOrder
    answer?: SortOrder
    comments?: SortOrder
  }

  export type activity_question_users_responseMinOrderByAggregateInput = {
    id?: SortOrder
    activity_id?: SortOrder
    user_uid?: SortOrder
    number_question?: SortOrder
    answer?: SortOrder
    comments?: SortOrder
  }

  export type activity_question_users_responseSumOrderByAggregateInput = {
    id?: SortOrder
    activity_id?: SortOrder
    number_question?: SortOrder
  }

  export type DecimalFilter = {
    equals?: Decimal | number | string
    in?: Enumerable<Decimal> | Enumerable<number> | Enumerable<string>
    notIn?: Enumerable<Decimal> | Enumerable<number> | Enumerable<string>
    lt?: Decimal | number | string
    lte?: Decimal | number | string
    gt?: Decimal | number | string
    gte?: Decimal | number | string
    not?: NestedDecimalFilter | Decimal | number | string
  }

  export type rewardCountOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    name?: SortOrder
    description?: SortOrder
    value?: SortOrder
    picture?: SortOrder
  }

  export type rewardAvgOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    value?: SortOrder
  }

  export type rewardMaxOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    name?: SortOrder
    description?: SortOrder
    value?: SortOrder
    picture?: SortOrder
  }

  export type rewardMinOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    name?: SortOrder
    description?: SortOrder
    value?: SortOrder
    picture?: SortOrder
  }

  export type rewardSumOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    value?: SortOrder
  }

  export type DecimalWithAggregatesFilter = {
    equals?: Decimal | number | string
    in?: Enumerable<Decimal> | Enumerable<number> | Enumerable<string>
    notIn?: Enumerable<Decimal> | Enumerable<number> | Enumerable<string>
    lt?: Decimal | number | string
    lte?: Decimal | number | string
    gt?: Decimal | number | string
    gte?: Decimal | number | string
    not?: NestedDecimalWithAggregatesFilter | Decimal | number | string
    _count?: NestedIntFilter
    _avg?: NestedDecimalFilter
    _sum?: NestedDecimalFilter
    _min?: NestedDecimalFilter
    _max?: NestedDecimalFilter
  }

  export type RewardRelationFilter = {
    is?: rewardWhereInput | null
    isNot?: rewardWhereInput | null
  }

  export type reward_usersCountOrderByAggregateInput = {
    id?: SortOrder
    user_uid?: SortOrder
    reward_id?: SortOrder
    amount?: SortOrder
  }

  export type reward_usersAvgOrderByAggregateInput = {
    id?: SortOrder
    reward_id?: SortOrder
    amount?: SortOrder
  }

  export type reward_usersMaxOrderByAggregateInput = {
    id?: SortOrder
    user_uid?: SortOrder
    reward_id?: SortOrder
    amount?: SortOrder
  }

  export type reward_usersMinOrderByAggregateInput = {
    id?: SortOrder
    user_uid?: SortOrder
    reward_id?: SortOrder
    amount?: SortOrder
  }

  export type reward_usersSumOrderByAggregateInput = {
    id?: SortOrder
    reward_id?: SortOrder
    amount?: SortOrder
  }

  export type activity_sentencesCountOrderByAggregateInput = {
    id?: SortOrder
    activity_id?: SortOrder
    number_sentence?: SortOrder
    complete_sentence?: SortOrder
    marked_sentence?: SortOrder
    hidden_words?: SortOrder
    words_help?: SortOrder
  }

  export type activity_sentencesAvgOrderByAggregateInput = {
    id?: SortOrder
    activity_id?: SortOrder
    number_sentence?: SortOrder
  }

  export type activity_sentencesMaxOrderByAggregateInput = {
    id?: SortOrder
    activity_id?: SortOrder
    number_sentence?: SortOrder
    complete_sentence?: SortOrder
    marked_sentence?: SortOrder
    hidden_words?: SortOrder
    words_help?: SortOrder
  }

  export type activity_sentencesMinOrderByAggregateInput = {
    id?: SortOrder
    activity_id?: SortOrder
    number_sentence?: SortOrder
    complete_sentence?: SortOrder
    marked_sentence?: SortOrder
    hidden_words?: SortOrder
    words_help?: SortOrder
  }

  export type activity_sentencesSumOrderByAggregateInput = {
    id?: SortOrder
    activity_id?: SortOrder
    number_sentence?: SortOrder
  }

  export type activity_sentences_usersCountOrderByAggregateInput = {
    id?: SortOrder
    activity_id?: SortOrder
    user_uid?: SortOrder
    value?: SortOrder
    processed?: SortOrder
  }

  export type activity_sentences_usersAvgOrderByAggregateInput = {
    id?: SortOrder
    activity_id?: SortOrder
    value?: SortOrder
    processed?: SortOrder
  }

  export type activity_sentences_usersMaxOrderByAggregateInput = {
    id?: SortOrder
    activity_id?: SortOrder
    user_uid?: SortOrder
    value?: SortOrder
    processed?: SortOrder
  }

  export type activity_sentences_usersMinOrderByAggregateInput = {
    id?: SortOrder
    activity_id?: SortOrder
    user_uid?: SortOrder
    value?: SortOrder
    processed?: SortOrder
  }

  export type activity_sentences_usersSumOrderByAggregateInput = {
    id?: SortOrder
    activity_id?: SortOrder
    value?: SortOrder
    processed?: SortOrder
  }

  export type activity_sentences_users_responseCountOrderByAggregateInput = {
    id?: SortOrder
    activity_id?: SortOrder
    user_uid?: SortOrder
    number_sentence?: SortOrder
    sentences_informed?: SortOrder
    comments?: SortOrder
  }

  export type activity_sentences_users_responseAvgOrderByAggregateInput = {
    id?: SortOrder
    activity_id?: SortOrder
    number_sentence?: SortOrder
  }

  export type activity_sentences_users_responseMaxOrderByAggregateInput = {
    id?: SortOrder
    activity_id?: SortOrder
    user_uid?: SortOrder
    number_sentence?: SortOrder
    sentences_informed?: SortOrder
    comments?: SortOrder
  }

  export type activity_sentences_users_responseMinOrderByAggregateInput = {
    id?: SortOrder
    activity_id?: SortOrder
    user_uid?: SortOrder
    number_sentence?: SortOrder
    sentences_informed?: SortOrder
    comments?: SortOrder
  }

  export type activity_sentences_users_responseSumOrderByAggregateInput = {
    id?: SortOrder
    activity_id?: SortOrder
    number_sentence?: SortOrder
  }

  export type DateTimeFilter = {
    equals?: Date | string
    in?: Enumerable<Date> | Enumerable<string>
    notIn?: Enumerable<Date> | Enumerable<string>
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeFilter | Date | string
  }

  export type notificationCountOrderByAggregateInput = {
    id?: SortOrder
    sender_uid?: SortOrder
    recipient_uid?: SortOrder
    notification_text?: SortOrder
    notification_date?: SortOrder
    image_reference?: SortOrder
    image_url?: SortOrder
    image_type?: SortOrder
    image_size_wh?: SortOrder
  }

  export type notificationAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type notificationMaxOrderByAggregateInput = {
    id?: SortOrder
    sender_uid?: SortOrder
    recipient_uid?: SortOrder
    notification_text?: SortOrder
    notification_date?: SortOrder
    image_reference?: SortOrder
    image_url?: SortOrder
    image_type?: SortOrder
    image_size_wh?: SortOrder
  }

  export type notificationMinOrderByAggregateInput = {
    id?: SortOrder
    sender_uid?: SortOrder
    recipient_uid?: SortOrder
    notification_text?: SortOrder
    notification_date?: SortOrder
    image_reference?: SortOrder
    image_url?: SortOrder
    image_type?: SortOrder
    image_size_wh?: SortOrder
  }

  export type notificationSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type DateTimeWithAggregatesFilter = {
    equals?: Date | string
    in?: Enumerable<Date> | Enumerable<string>
    notIn?: Enumerable<Date> | Enumerable<string>
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeWithAggregatesFilter | Date | string
    _count?: NestedIntFilter
    _min?: NestedDateTimeFilter
    _max?: NestedDateTimeFilter
  }

  export type eduvidaCountOrderByAggregateInput = {
    id?: SortOrder
    author_uid?: SortOrder
    title?: SortOrder
    help_text?: SortOrder
    help_type?: SortOrder
    help_close?: SortOrder
    created?: SortOrder
    image_reference?: SortOrder
    image_url?: SortOrder
    image_type?: SortOrder
    image_size_wh?: SortOrder
  }

  export type eduvidaAvgOrderByAggregateInput = {
    id?: SortOrder
    help_close?: SortOrder
  }

  export type eduvidaMaxOrderByAggregateInput = {
    id?: SortOrder
    author_uid?: SortOrder
    title?: SortOrder
    help_text?: SortOrder
    help_type?: SortOrder
    help_close?: SortOrder
    created?: SortOrder
    image_reference?: SortOrder
    image_url?: SortOrder
    image_type?: SortOrder
    image_size_wh?: SortOrder
  }

  export type eduvidaMinOrderByAggregateInput = {
    id?: SortOrder
    author_uid?: SortOrder
    title?: SortOrder
    help_text?: SortOrder
    help_type?: SortOrder
    help_close?: SortOrder
    created?: SortOrder
    image_reference?: SortOrder
    image_url?: SortOrder
    image_type?: SortOrder
    image_size_wh?: SortOrder
  }

  export type eduvidaSumOrderByAggregateInput = {
    id?: SortOrder
    help_close?: SortOrder
  }

  export type EduvidaRelationFilter = {
    is?: eduvidaWhereInput | null
    isNot?: eduvidaWhereInput | null
  }

  export type eduvida_commentCountOrderByAggregateInput = {
    id?: SortOrder
    eduvida_id?: SortOrder
    user_uid?: SortOrder
    comment?: SortOrder
    created?: SortOrder
    image_reference?: SortOrder
    image_url?: SortOrder
    image_type?: SortOrder
    image_size_wh?: SortOrder
  }

  export type eduvida_commentAvgOrderByAggregateInput = {
    id?: SortOrder
    eduvida_id?: SortOrder
  }

  export type eduvida_commentMaxOrderByAggregateInput = {
    id?: SortOrder
    eduvida_id?: SortOrder
    user_uid?: SortOrder
    comment?: SortOrder
    created?: SortOrder
    image_reference?: SortOrder
    image_url?: SortOrder
    image_type?: SortOrder
    image_size_wh?: SortOrder
  }

  export type eduvida_commentMinOrderByAggregateInput = {
    id?: SortOrder
    eduvida_id?: SortOrder
    user_uid?: SortOrder
    comment?: SortOrder
    created?: SortOrder
    image_reference?: SortOrder
    image_url?: SortOrder
    image_type?: SortOrder
    image_size_wh?: SortOrder
  }

  export type eduvida_commentSumOrderByAggregateInput = {
    id?: SortOrder
    eduvida_id?: SortOrder
  }

  export type activityCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<activityCreateWithoutUsersInput>, Enumerable<activityUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<activityCreateOrConnectWithoutUsersInput>
    createMany?: activityCreateManyUsersInputEnvelope
    connect?: Enumerable<activityWhereUniqueInput>
  }

  export type activity_question_usersCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<activity_question_usersCreateWithoutUsersInput>, Enumerable<activity_question_usersUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<activity_question_usersCreateOrConnectWithoutUsersInput>
    createMany?: activity_question_usersCreateManyUsersInputEnvelope
    connect?: Enumerable<activity_question_usersWhereUniqueInput>
  }

  export type activity_question_users_responseCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<activity_question_users_responseCreateWithoutUsersInput>, Enumerable<activity_question_users_responseUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<activity_question_users_responseCreateOrConnectWithoutUsersInput>
    createMany?: activity_question_users_responseCreateManyUsersInputEnvelope
    connect?: Enumerable<activity_question_users_responseWhereUniqueInput>
  }

  export type activity_sentences_usersCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<activity_sentences_usersCreateWithoutUsersInput>, Enumerable<activity_sentences_usersUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<activity_sentences_usersCreateOrConnectWithoutUsersInput>
    createMany?: activity_sentences_usersCreateManyUsersInputEnvelope
    connect?: Enumerable<activity_sentences_usersWhereUniqueInput>
  }

  export type activity_sentences_users_responseCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<activity_sentences_users_responseCreateWithoutUsersInput>, Enumerable<activity_sentences_users_responseUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<activity_sentences_users_responseCreateOrConnectWithoutUsersInput>
    createMany?: activity_sentences_users_responseCreateManyUsersInputEnvelope
    connect?: Enumerable<activity_sentences_users_responseWhereUniqueInput>
  }

  export type eduvidaCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<eduvidaCreateWithoutUsersInput>, Enumerable<eduvidaUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<eduvidaCreateOrConnectWithoutUsersInput>
    createMany?: eduvidaCreateManyUsersInputEnvelope
    connect?: Enumerable<eduvidaWhereUniqueInput>
  }

  export type eduvida_commentCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<eduvida_commentCreateWithoutUsersInput>, Enumerable<eduvida_commentUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<eduvida_commentCreateOrConnectWithoutUsersInput>
    createMany?: eduvida_commentCreateManyUsersInputEnvelope
    connect?: Enumerable<eduvida_commentWhereUniqueInput>
  }

  export type notificationCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<notificationCreateWithoutUsersInput>, Enumerable<notificationUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<notificationCreateOrConnectWithoutUsersInput>
    createMany?: notificationCreateManyUsersInputEnvelope
    connect?: Enumerable<notificationWhereUniqueInput>
  }

  export type reward_usersCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<reward_usersCreateWithoutUsersInput>, Enumerable<reward_usersUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<reward_usersCreateOrConnectWithoutUsersInput>
    createMany?: reward_usersCreateManyUsersInputEnvelope
    connect?: Enumerable<reward_usersWhereUniqueInput>
  }

  export type activityUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<activityCreateWithoutUsersInput>, Enumerable<activityUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<activityCreateOrConnectWithoutUsersInput>
    createMany?: activityCreateManyUsersInputEnvelope
    connect?: Enumerable<activityWhereUniqueInput>
  }

  export type activity_question_usersUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<activity_question_usersCreateWithoutUsersInput>, Enumerable<activity_question_usersUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<activity_question_usersCreateOrConnectWithoutUsersInput>
    createMany?: activity_question_usersCreateManyUsersInputEnvelope
    connect?: Enumerable<activity_question_usersWhereUniqueInput>
  }

  export type activity_question_users_responseUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<activity_question_users_responseCreateWithoutUsersInput>, Enumerable<activity_question_users_responseUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<activity_question_users_responseCreateOrConnectWithoutUsersInput>
    createMany?: activity_question_users_responseCreateManyUsersInputEnvelope
    connect?: Enumerable<activity_question_users_responseWhereUniqueInput>
  }

  export type activity_sentences_usersUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<activity_sentences_usersCreateWithoutUsersInput>, Enumerable<activity_sentences_usersUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<activity_sentences_usersCreateOrConnectWithoutUsersInput>
    createMany?: activity_sentences_usersCreateManyUsersInputEnvelope
    connect?: Enumerable<activity_sentences_usersWhereUniqueInput>
  }

  export type activity_sentences_users_responseUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<activity_sentences_users_responseCreateWithoutUsersInput>, Enumerable<activity_sentences_users_responseUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<activity_sentences_users_responseCreateOrConnectWithoutUsersInput>
    createMany?: activity_sentences_users_responseCreateManyUsersInputEnvelope
    connect?: Enumerable<activity_sentences_users_responseWhereUniqueInput>
  }

  export type eduvidaUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<eduvidaCreateWithoutUsersInput>, Enumerable<eduvidaUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<eduvidaCreateOrConnectWithoutUsersInput>
    createMany?: eduvidaCreateManyUsersInputEnvelope
    connect?: Enumerable<eduvidaWhereUniqueInput>
  }

  export type eduvida_commentUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<eduvida_commentCreateWithoutUsersInput>, Enumerable<eduvida_commentUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<eduvida_commentCreateOrConnectWithoutUsersInput>
    createMany?: eduvida_commentCreateManyUsersInputEnvelope
    connect?: Enumerable<eduvida_commentWhereUniqueInput>
  }

  export type notificationUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<notificationCreateWithoutUsersInput>, Enumerable<notificationUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<notificationCreateOrConnectWithoutUsersInput>
    createMany?: notificationCreateManyUsersInputEnvelope
    connect?: Enumerable<notificationWhereUniqueInput>
  }

  export type reward_usersUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<reward_usersCreateWithoutUsersInput>, Enumerable<reward_usersUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<reward_usersCreateOrConnectWithoutUsersInput>
    createMany?: reward_usersCreateManyUsersInputEnvelope
    connect?: Enumerable<reward_usersWhereUniqueInput>
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | number | string | null
    increment?: Decimal | number | string
    decrement?: Decimal | number | string
    multiply?: Decimal | number | string
    divide?: Decimal | number | string
  }

  export type activityUpdateManyWithoutUsersInput = {
    create?: XOR<Enumerable<activityCreateWithoutUsersInput>, Enumerable<activityUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<activityCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<activityUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: activityCreateManyUsersInputEnvelope
    set?: Enumerable<activityWhereUniqueInput>
    disconnect?: Enumerable<activityWhereUniqueInput>
    delete?: Enumerable<activityWhereUniqueInput>
    connect?: Enumerable<activityWhereUniqueInput>
    update?: Enumerable<activityUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<activityUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<activityScalarWhereInput>
  }

  export type activity_question_usersUpdateManyWithoutUsersInput = {
    create?: XOR<Enumerable<activity_question_usersCreateWithoutUsersInput>, Enumerable<activity_question_usersUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<activity_question_usersCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<activity_question_usersUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: activity_question_usersCreateManyUsersInputEnvelope
    set?: Enumerable<activity_question_usersWhereUniqueInput>
    disconnect?: Enumerable<activity_question_usersWhereUniqueInput>
    delete?: Enumerable<activity_question_usersWhereUniqueInput>
    connect?: Enumerable<activity_question_usersWhereUniqueInput>
    update?: Enumerable<activity_question_usersUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<activity_question_usersUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<activity_question_usersScalarWhereInput>
  }

  export type activity_question_users_responseUpdateManyWithoutUsersInput = {
    create?: XOR<Enumerable<activity_question_users_responseCreateWithoutUsersInput>, Enumerable<activity_question_users_responseUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<activity_question_users_responseCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<activity_question_users_responseUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: activity_question_users_responseCreateManyUsersInputEnvelope
    set?: Enumerable<activity_question_users_responseWhereUniqueInput>
    disconnect?: Enumerable<activity_question_users_responseWhereUniqueInput>
    delete?: Enumerable<activity_question_users_responseWhereUniqueInput>
    connect?: Enumerable<activity_question_users_responseWhereUniqueInput>
    update?: Enumerable<activity_question_users_responseUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<activity_question_users_responseUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<activity_question_users_responseScalarWhereInput>
  }

  export type activity_sentences_usersUpdateManyWithoutUsersInput = {
    create?: XOR<Enumerable<activity_sentences_usersCreateWithoutUsersInput>, Enumerable<activity_sentences_usersUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<activity_sentences_usersCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<activity_sentences_usersUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: activity_sentences_usersCreateManyUsersInputEnvelope
    set?: Enumerable<activity_sentences_usersWhereUniqueInput>
    disconnect?: Enumerable<activity_sentences_usersWhereUniqueInput>
    delete?: Enumerable<activity_sentences_usersWhereUniqueInput>
    connect?: Enumerable<activity_sentences_usersWhereUniqueInput>
    update?: Enumerable<activity_sentences_usersUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<activity_sentences_usersUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<activity_sentences_usersScalarWhereInput>
  }

  export type activity_sentences_users_responseUpdateManyWithoutUsersInput = {
    create?: XOR<Enumerable<activity_sentences_users_responseCreateWithoutUsersInput>, Enumerable<activity_sentences_users_responseUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<activity_sentences_users_responseCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<activity_sentences_users_responseUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: activity_sentences_users_responseCreateManyUsersInputEnvelope
    set?: Enumerable<activity_sentences_users_responseWhereUniqueInput>
    disconnect?: Enumerable<activity_sentences_users_responseWhereUniqueInput>
    delete?: Enumerable<activity_sentences_users_responseWhereUniqueInput>
    connect?: Enumerable<activity_sentences_users_responseWhereUniqueInput>
    update?: Enumerable<activity_sentences_users_responseUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<activity_sentences_users_responseUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<activity_sentences_users_responseScalarWhereInput>
  }

  export type eduvidaUpdateManyWithoutUsersInput = {
    create?: XOR<Enumerable<eduvidaCreateWithoutUsersInput>, Enumerable<eduvidaUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<eduvidaCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<eduvidaUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: eduvidaCreateManyUsersInputEnvelope
    set?: Enumerable<eduvidaWhereUniqueInput>
    disconnect?: Enumerable<eduvidaWhereUniqueInput>
    delete?: Enumerable<eduvidaWhereUniqueInput>
    connect?: Enumerable<eduvidaWhereUniqueInput>
    update?: Enumerable<eduvidaUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<eduvidaUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<eduvidaScalarWhereInput>
  }

  export type eduvida_commentUpdateManyWithoutUsersInput = {
    create?: XOR<Enumerable<eduvida_commentCreateWithoutUsersInput>, Enumerable<eduvida_commentUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<eduvida_commentCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<eduvida_commentUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: eduvida_commentCreateManyUsersInputEnvelope
    set?: Enumerable<eduvida_commentWhereUniqueInput>
    disconnect?: Enumerable<eduvida_commentWhereUniqueInput>
    delete?: Enumerable<eduvida_commentWhereUniqueInput>
    connect?: Enumerable<eduvida_commentWhereUniqueInput>
    update?: Enumerable<eduvida_commentUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<eduvida_commentUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<eduvida_commentScalarWhereInput>
  }

  export type notificationUpdateManyWithoutUsersInput = {
    create?: XOR<Enumerable<notificationCreateWithoutUsersInput>, Enumerable<notificationUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<notificationCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<notificationUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: notificationCreateManyUsersInputEnvelope
    set?: Enumerable<notificationWhereUniqueInput>
    disconnect?: Enumerable<notificationWhereUniqueInput>
    delete?: Enumerable<notificationWhereUniqueInput>
    connect?: Enumerable<notificationWhereUniqueInput>
    update?: Enumerable<notificationUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<notificationUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<notificationScalarWhereInput>
  }

  export type reward_usersUpdateManyWithoutUsersInput = {
    create?: XOR<Enumerable<reward_usersCreateWithoutUsersInput>, Enumerable<reward_usersUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<reward_usersCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<reward_usersUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: reward_usersCreateManyUsersInputEnvelope
    set?: Enumerable<reward_usersWhereUniqueInput>
    disconnect?: Enumerable<reward_usersWhereUniqueInput>
    delete?: Enumerable<reward_usersWhereUniqueInput>
    connect?: Enumerable<reward_usersWhereUniqueInput>
    update?: Enumerable<reward_usersUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<reward_usersUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<reward_usersScalarWhereInput>
  }

  export type activityUncheckedUpdateManyWithoutUsersInput = {
    create?: XOR<Enumerable<activityCreateWithoutUsersInput>, Enumerable<activityUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<activityCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<activityUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: activityCreateManyUsersInputEnvelope
    set?: Enumerable<activityWhereUniqueInput>
    disconnect?: Enumerable<activityWhereUniqueInput>
    delete?: Enumerable<activityWhereUniqueInput>
    connect?: Enumerable<activityWhereUniqueInput>
    update?: Enumerable<activityUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<activityUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<activityScalarWhereInput>
  }

  export type activity_question_usersUncheckedUpdateManyWithoutUsersInput = {
    create?: XOR<Enumerable<activity_question_usersCreateWithoutUsersInput>, Enumerable<activity_question_usersUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<activity_question_usersCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<activity_question_usersUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: activity_question_usersCreateManyUsersInputEnvelope
    set?: Enumerable<activity_question_usersWhereUniqueInput>
    disconnect?: Enumerable<activity_question_usersWhereUniqueInput>
    delete?: Enumerable<activity_question_usersWhereUniqueInput>
    connect?: Enumerable<activity_question_usersWhereUniqueInput>
    update?: Enumerable<activity_question_usersUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<activity_question_usersUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<activity_question_usersScalarWhereInput>
  }

  export type activity_question_users_responseUncheckedUpdateManyWithoutUsersInput = {
    create?: XOR<Enumerable<activity_question_users_responseCreateWithoutUsersInput>, Enumerable<activity_question_users_responseUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<activity_question_users_responseCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<activity_question_users_responseUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: activity_question_users_responseCreateManyUsersInputEnvelope
    set?: Enumerable<activity_question_users_responseWhereUniqueInput>
    disconnect?: Enumerable<activity_question_users_responseWhereUniqueInput>
    delete?: Enumerable<activity_question_users_responseWhereUniqueInput>
    connect?: Enumerable<activity_question_users_responseWhereUniqueInput>
    update?: Enumerable<activity_question_users_responseUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<activity_question_users_responseUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<activity_question_users_responseScalarWhereInput>
  }

  export type activity_sentences_usersUncheckedUpdateManyWithoutUsersInput = {
    create?: XOR<Enumerable<activity_sentences_usersCreateWithoutUsersInput>, Enumerable<activity_sentences_usersUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<activity_sentences_usersCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<activity_sentences_usersUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: activity_sentences_usersCreateManyUsersInputEnvelope
    set?: Enumerable<activity_sentences_usersWhereUniqueInput>
    disconnect?: Enumerable<activity_sentences_usersWhereUniqueInput>
    delete?: Enumerable<activity_sentences_usersWhereUniqueInput>
    connect?: Enumerable<activity_sentences_usersWhereUniqueInput>
    update?: Enumerable<activity_sentences_usersUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<activity_sentences_usersUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<activity_sentences_usersScalarWhereInput>
  }

  export type activity_sentences_users_responseUncheckedUpdateManyWithoutUsersInput = {
    create?: XOR<Enumerable<activity_sentences_users_responseCreateWithoutUsersInput>, Enumerable<activity_sentences_users_responseUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<activity_sentences_users_responseCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<activity_sentences_users_responseUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: activity_sentences_users_responseCreateManyUsersInputEnvelope
    set?: Enumerable<activity_sentences_users_responseWhereUniqueInput>
    disconnect?: Enumerable<activity_sentences_users_responseWhereUniqueInput>
    delete?: Enumerable<activity_sentences_users_responseWhereUniqueInput>
    connect?: Enumerable<activity_sentences_users_responseWhereUniqueInput>
    update?: Enumerable<activity_sentences_users_responseUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<activity_sentences_users_responseUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<activity_sentences_users_responseScalarWhereInput>
  }

  export type eduvidaUncheckedUpdateManyWithoutUsersInput = {
    create?: XOR<Enumerable<eduvidaCreateWithoutUsersInput>, Enumerable<eduvidaUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<eduvidaCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<eduvidaUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: eduvidaCreateManyUsersInputEnvelope
    set?: Enumerable<eduvidaWhereUniqueInput>
    disconnect?: Enumerable<eduvidaWhereUniqueInput>
    delete?: Enumerable<eduvidaWhereUniqueInput>
    connect?: Enumerable<eduvidaWhereUniqueInput>
    update?: Enumerable<eduvidaUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<eduvidaUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<eduvidaScalarWhereInput>
  }

  export type eduvida_commentUncheckedUpdateManyWithoutUsersInput = {
    create?: XOR<Enumerable<eduvida_commentCreateWithoutUsersInput>, Enumerable<eduvida_commentUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<eduvida_commentCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<eduvida_commentUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: eduvida_commentCreateManyUsersInputEnvelope
    set?: Enumerable<eduvida_commentWhereUniqueInput>
    disconnect?: Enumerable<eduvida_commentWhereUniqueInput>
    delete?: Enumerable<eduvida_commentWhereUniqueInput>
    connect?: Enumerable<eduvida_commentWhereUniqueInput>
    update?: Enumerable<eduvida_commentUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<eduvida_commentUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<eduvida_commentScalarWhereInput>
  }

  export type notificationUncheckedUpdateManyWithoutUsersInput = {
    create?: XOR<Enumerable<notificationCreateWithoutUsersInput>, Enumerable<notificationUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<notificationCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<notificationUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: notificationCreateManyUsersInputEnvelope
    set?: Enumerable<notificationWhereUniqueInput>
    disconnect?: Enumerable<notificationWhereUniqueInput>
    delete?: Enumerable<notificationWhereUniqueInput>
    connect?: Enumerable<notificationWhereUniqueInput>
    update?: Enumerable<notificationUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<notificationUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<notificationScalarWhereInput>
  }

  export type reward_usersUncheckedUpdateManyWithoutUsersInput = {
    create?: XOR<Enumerable<reward_usersCreateWithoutUsersInput>, Enumerable<reward_usersUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<reward_usersCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<reward_usersUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: reward_usersCreateManyUsersInputEnvelope
    set?: Enumerable<reward_usersWhereUniqueInput>
    disconnect?: Enumerable<reward_usersWhereUniqueInput>
    delete?: Enumerable<reward_usersWhereUniqueInput>
    connect?: Enumerable<reward_usersWhereUniqueInput>
    update?: Enumerable<reward_usersUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<reward_usersUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<reward_usersScalarWhereInput>
  }

  export type usersCreateNestedOneWithoutActivityInput = {
    create?: XOR<usersCreateWithoutActivityInput, usersUncheckedCreateWithoutActivityInput>
    connectOrCreate?: usersCreateOrConnectWithoutActivityInput
    connect?: usersWhereUniqueInput
  }

  export type activity_question_responseCreateNestedManyWithoutActivityInput = {
    create?: XOR<Enumerable<activity_question_responseCreateWithoutActivityInput>, Enumerable<activity_question_responseUncheckedCreateWithoutActivityInput>>
    connectOrCreate?: Enumerable<activity_question_responseCreateOrConnectWithoutActivityInput>
    createMany?: activity_question_responseCreateManyActivityInputEnvelope
    connect?: Enumerable<activity_question_responseWhereUniqueInput>
  }

  export type activity_question_usersCreateNestedManyWithoutActivityInput = {
    create?: XOR<Enumerable<activity_question_usersCreateWithoutActivityInput>, Enumerable<activity_question_usersUncheckedCreateWithoutActivityInput>>
    connectOrCreate?: Enumerable<activity_question_usersCreateOrConnectWithoutActivityInput>
    createMany?: activity_question_usersCreateManyActivityInputEnvelope
    connect?: Enumerable<activity_question_usersWhereUniqueInput>
  }

  export type activity_question_users_responseCreateNestedManyWithoutActivityInput = {
    create?: XOR<Enumerable<activity_question_users_responseCreateWithoutActivityInput>, Enumerable<activity_question_users_responseUncheckedCreateWithoutActivityInput>>
    connectOrCreate?: Enumerable<activity_question_users_responseCreateOrConnectWithoutActivityInput>
    createMany?: activity_question_users_responseCreateManyActivityInputEnvelope
    connect?: Enumerable<activity_question_users_responseWhereUniqueInput>
  }

  export type activity_sentences_usersCreateNestedManyWithoutActivityInput = {
    create?: XOR<Enumerable<activity_sentences_usersCreateWithoutActivityInput>, Enumerable<activity_sentences_usersUncheckedCreateWithoutActivityInput>>
    connectOrCreate?: Enumerable<activity_sentences_usersCreateOrConnectWithoutActivityInput>
    createMany?: activity_sentences_usersCreateManyActivityInputEnvelope
    connect?: Enumerable<activity_sentences_usersWhereUniqueInput>
  }

  export type activity_sentences_users_responseCreateNestedManyWithoutActivityInput = {
    create?: XOR<Enumerable<activity_sentences_users_responseCreateWithoutActivityInput>, Enumerable<activity_sentences_users_responseUncheckedCreateWithoutActivityInput>>
    connectOrCreate?: Enumerable<activity_sentences_users_responseCreateOrConnectWithoutActivityInput>
    createMany?: activity_sentences_users_responseCreateManyActivityInputEnvelope
    connect?: Enumerable<activity_sentences_users_responseWhereUniqueInput>
  }

  export type activity_question_responseUncheckedCreateNestedManyWithoutActivityInput = {
    create?: XOR<Enumerable<activity_question_responseCreateWithoutActivityInput>, Enumerable<activity_question_responseUncheckedCreateWithoutActivityInput>>
    connectOrCreate?: Enumerable<activity_question_responseCreateOrConnectWithoutActivityInput>
    createMany?: activity_question_responseCreateManyActivityInputEnvelope
    connect?: Enumerable<activity_question_responseWhereUniqueInput>
  }

  export type activity_question_usersUncheckedCreateNestedManyWithoutActivityInput = {
    create?: XOR<Enumerable<activity_question_usersCreateWithoutActivityInput>, Enumerable<activity_question_usersUncheckedCreateWithoutActivityInput>>
    connectOrCreate?: Enumerable<activity_question_usersCreateOrConnectWithoutActivityInput>
    createMany?: activity_question_usersCreateManyActivityInputEnvelope
    connect?: Enumerable<activity_question_usersWhereUniqueInput>
  }

  export type activity_question_users_responseUncheckedCreateNestedManyWithoutActivityInput = {
    create?: XOR<Enumerable<activity_question_users_responseCreateWithoutActivityInput>, Enumerable<activity_question_users_responseUncheckedCreateWithoutActivityInput>>
    connectOrCreate?: Enumerable<activity_question_users_responseCreateOrConnectWithoutActivityInput>
    createMany?: activity_question_users_responseCreateManyActivityInputEnvelope
    connect?: Enumerable<activity_question_users_responseWhereUniqueInput>
  }

  export type activity_sentences_usersUncheckedCreateNestedManyWithoutActivityInput = {
    create?: XOR<Enumerable<activity_sentences_usersCreateWithoutActivityInput>, Enumerable<activity_sentences_usersUncheckedCreateWithoutActivityInput>>
    connectOrCreate?: Enumerable<activity_sentences_usersCreateOrConnectWithoutActivityInput>
    createMany?: activity_sentences_usersCreateManyActivityInputEnvelope
    connect?: Enumerable<activity_sentences_usersWhereUniqueInput>
  }

  export type activity_sentences_users_responseUncheckedCreateNestedManyWithoutActivityInput = {
    create?: XOR<Enumerable<activity_sentences_users_responseCreateWithoutActivityInput>, Enumerable<activity_sentences_users_responseUncheckedCreateWithoutActivityInput>>
    connectOrCreate?: Enumerable<activity_sentences_users_responseCreateOrConnectWithoutActivityInput>
    createMany?: activity_sentences_users_responseCreateManyActivityInputEnvelope
    connect?: Enumerable<activity_sentences_users_responseWhereUniqueInput>
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type usersUpdateOneRequiredWithoutActivityInput = {
    create?: XOR<usersCreateWithoutActivityInput, usersUncheckedCreateWithoutActivityInput>
    connectOrCreate?: usersCreateOrConnectWithoutActivityInput
    upsert?: usersUpsertWithoutActivityInput
    connect?: usersWhereUniqueInput
    update?: XOR<usersUpdateWithoutActivityInput, usersUncheckedUpdateWithoutActivityInput>
  }

  export type activity_question_responseUpdateManyWithoutActivityInput = {
    create?: XOR<Enumerable<activity_question_responseCreateWithoutActivityInput>, Enumerable<activity_question_responseUncheckedCreateWithoutActivityInput>>
    connectOrCreate?: Enumerable<activity_question_responseCreateOrConnectWithoutActivityInput>
    upsert?: Enumerable<activity_question_responseUpsertWithWhereUniqueWithoutActivityInput>
    createMany?: activity_question_responseCreateManyActivityInputEnvelope
    set?: Enumerable<activity_question_responseWhereUniqueInput>
    disconnect?: Enumerable<activity_question_responseWhereUniqueInput>
    delete?: Enumerable<activity_question_responseWhereUniqueInput>
    connect?: Enumerable<activity_question_responseWhereUniqueInput>
    update?: Enumerable<activity_question_responseUpdateWithWhereUniqueWithoutActivityInput>
    updateMany?: Enumerable<activity_question_responseUpdateManyWithWhereWithoutActivityInput>
    deleteMany?: Enumerable<activity_question_responseScalarWhereInput>
  }

  export type activity_question_usersUpdateManyWithoutActivityInput = {
    create?: XOR<Enumerable<activity_question_usersCreateWithoutActivityInput>, Enumerable<activity_question_usersUncheckedCreateWithoutActivityInput>>
    connectOrCreate?: Enumerable<activity_question_usersCreateOrConnectWithoutActivityInput>
    upsert?: Enumerable<activity_question_usersUpsertWithWhereUniqueWithoutActivityInput>
    createMany?: activity_question_usersCreateManyActivityInputEnvelope
    set?: Enumerable<activity_question_usersWhereUniqueInput>
    disconnect?: Enumerable<activity_question_usersWhereUniqueInput>
    delete?: Enumerable<activity_question_usersWhereUniqueInput>
    connect?: Enumerable<activity_question_usersWhereUniqueInput>
    update?: Enumerable<activity_question_usersUpdateWithWhereUniqueWithoutActivityInput>
    updateMany?: Enumerable<activity_question_usersUpdateManyWithWhereWithoutActivityInput>
    deleteMany?: Enumerable<activity_question_usersScalarWhereInput>
  }

  export type activity_question_users_responseUpdateManyWithoutActivityInput = {
    create?: XOR<Enumerable<activity_question_users_responseCreateWithoutActivityInput>, Enumerable<activity_question_users_responseUncheckedCreateWithoutActivityInput>>
    connectOrCreate?: Enumerable<activity_question_users_responseCreateOrConnectWithoutActivityInput>
    upsert?: Enumerable<activity_question_users_responseUpsertWithWhereUniqueWithoutActivityInput>
    createMany?: activity_question_users_responseCreateManyActivityInputEnvelope
    set?: Enumerable<activity_question_users_responseWhereUniqueInput>
    disconnect?: Enumerable<activity_question_users_responseWhereUniqueInput>
    delete?: Enumerable<activity_question_users_responseWhereUniqueInput>
    connect?: Enumerable<activity_question_users_responseWhereUniqueInput>
    update?: Enumerable<activity_question_users_responseUpdateWithWhereUniqueWithoutActivityInput>
    updateMany?: Enumerable<activity_question_users_responseUpdateManyWithWhereWithoutActivityInput>
    deleteMany?: Enumerable<activity_question_users_responseScalarWhereInput>
  }

  export type activity_sentences_usersUpdateManyWithoutActivityInput = {
    create?: XOR<Enumerable<activity_sentences_usersCreateWithoutActivityInput>, Enumerable<activity_sentences_usersUncheckedCreateWithoutActivityInput>>
    connectOrCreate?: Enumerable<activity_sentences_usersCreateOrConnectWithoutActivityInput>
    upsert?: Enumerable<activity_sentences_usersUpsertWithWhereUniqueWithoutActivityInput>
    createMany?: activity_sentences_usersCreateManyActivityInputEnvelope
    set?: Enumerable<activity_sentences_usersWhereUniqueInput>
    disconnect?: Enumerable<activity_sentences_usersWhereUniqueInput>
    delete?: Enumerable<activity_sentences_usersWhereUniqueInput>
    connect?: Enumerable<activity_sentences_usersWhereUniqueInput>
    update?: Enumerable<activity_sentences_usersUpdateWithWhereUniqueWithoutActivityInput>
    updateMany?: Enumerable<activity_sentences_usersUpdateManyWithWhereWithoutActivityInput>
    deleteMany?: Enumerable<activity_sentences_usersScalarWhereInput>
  }

  export type activity_sentences_users_responseUpdateManyWithoutActivityInput = {
    create?: XOR<Enumerable<activity_sentences_users_responseCreateWithoutActivityInput>, Enumerable<activity_sentences_users_responseUncheckedCreateWithoutActivityInput>>
    connectOrCreate?: Enumerable<activity_sentences_users_responseCreateOrConnectWithoutActivityInput>
    upsert?: Enumerable<activity_sentences_users_responseUpsertWithWhereUniqueWithoutActivityInput>
    createMany?: activity_sentences_users_responseCreateManyActivityInputEnvelope
    set?: Enumerable<activity_sentences_users_responseWhereUniqueInput>
    disconnect?: Enumerable<activity_sentences_users_responseWhereUniqueInput>
    delete?: Enumerable<activity_sentences_users_responseWhereUniqueInput>
    connect?: Enumerable<activity_sentences_users_responseWhereUniqueInput>
    update?: Enumerable<activity_sentences_users_responseUpdateWithWhereUniqueWithoutActivityInput>
    updateMany?: Enumerable<activity_sentences_users_responseUpdateManyWithWhereWithoutActivityInput>
    deleteMany?: Enumerable<activity_sentences_users_responseScalarWhereInput>
  }

  export type activity_question_responseUncheckedUpdateManyWithoutActivityInput = {
    create?: XOR<Enumerable<activity_question_responseCreateWithoutActivityInput>, Enumerable<activity_question_responseUncheckedCreateWithoutActivityInput>>
    connectOrCreate?: Enumerable<activity_question_responseCreateOrConnectWithoutActivityInput>
    upsert?: Enumerable<activity_question_responseUpsertWithWhereUniqueWithoutActivityInput>
    createMany?: activity_question_responseCreateManyActivityInputEnvelope
    set?: Enumerable<activity_question_responseWhereUniqueInput>
    disconnect?: Enumerable<activity_question_responseWhereUniqueInput>
    delete?: Enumerable<activity_question_responseWhereUniqueInput>
    connect?: Enumerable<activity_question_responseWhereUniqueInput>
    update?: Enumerable<activity_question_responseUpdateWithWhereUniqueWithoutActivityInput>
    updateMany?: Enumerable<activity_question_responseUpdateManyWithWhereWithoutActivityInput>
    deleteMany?: Enumerable<activity_question_responseScalarWhereInput>
  }

  export type activity_question_usersUncheckedUpdateManyWithoutActivityInput = {
    create?: XOR<Enumerable<activity_question_usersCreateWithoutActivityInput>, Enumerable<activity_question_usersUncheckedCreateWithoutActivityInput>>
    connectOrCreate?: Enumerable<activity_question_usersCreateOrConnectWithoutActivityInput>
    upsert?: Enumerable<activity_question_usersUpsertWithWhereUniqueWithoutActivityInput>
    createMany?: activity_question_usersCreateManyActivityInputEnvelope
    set?: Enumerable<activity_question_usersWhereUniqueInput>
    disconnect?: Enumerable<activity_question_usersWhereUniqueInput>
    delete?: Enumerable<activity_question_usersWhereUniqueInput>
    connect?: Enumerable<activity_question_usersWhereUniqueInput>
    update?: Enumerable<activity_question_usersUpdateWithWhereUniqueWithoutActivityInput>
    updateMany?: Enumerable<activity_question_usersUpdateManyWithWhereWithoutActivityInput>
    deleteMany?: Enumerable<activity_question_usersScalarWhereInput>
  }

  export type activity_question_users_responseUncheckedUpdateManyWithoutActivityInput = {
    create?: XOR<Enumerable<activity_question_users_responseCreateWithoutActivityInput>, Enumerable<activity_question_users_responseUncheckedCreateWithoutActivityInput>>
    connectOrCreate?: Enumerable<activity_question_users_responseCreateOrConnectWithoutActivityInput>
    upsert?: Enumerable<activity_question_users_responseUpsertWithWhereUniqueWithoutActivityInput>
    createMany?: activity_question_users_responseCreateManyActivityInputEnvelope
    set?: Enumerable<activity_question_users_responseWhereUniqueInput>
    disconnect?: Enumerable<activity_question_users_responseWhereUniqueInput>
    delete?: Enumerable<activity_question_users_responseWhereUniqueInput>
    connect?: Enumerable<activity_question_users_responseWhereUniqueInput>
    update?: Enumerable<activity_question_users_responseUpdateWithWhereUniqueWithoutActivityInput>
    updateMany?: Enumerable<activity_question_users_responseUpdateManyWithWhereWithoutActivityInput>
    deleteMany?: Enumerable<activity_question_users_responseScalarWhereInput>
  }

  export type activity_sentences_usersUncheckedUpdateManyWithoutActivityInput = {
    create?: XOR<Enumerable<activity_sentences_usersCreateWithoutActivityInput>, Enumerable<activity_sentences_usersUncheckedCreateWithoutActivityInput>>
    connectOrCreate?: Enumerable<activity_sentences_usersCreateOrConnectWithoutActivityInput>
    upsert?: Enumerable<activity_sentences_usersUpsertWithWhereUniqueWithoutActivityInput>
    createMany?: activity_sentences_usersCreateManyActivityInputEnvelope
    set?: Enumerable<activity_sentences_usersWhereUniqueInput>
    disconnect?: Enumerable<activity_sentences_usersWhereUniqueInput>
    delete?: Enumerable<activity_sentences_usersWhereUniqueInput>
    connect?: Enumerable<activity_sentences_usersWhereUniqueInput>
    update?: Enumerable<activity_sentences_usersUpdateWithWhereUniqueWithoutActivityInput>
    updateMany?: Enumerable<activity_sentences_usersUpdateManyWithWhereWithoutActivityInput>
    deleteMany?: Enumerable<activity_sentences_usersScalarWhereInput>
  }

  export type activity_sentences_users_responseUncheckedUpdateManyWithoutActivityInput = {
    create?: XOR<Enumerable<activity_sentences_users_responseCreateWithoutActivityInput>, Enumerable<activity_sentences_users_responseUncheckedCreateWithoutActivityInput>>
    connectOrCreate?: Enumerable<activity_sentences_users_responseCreateOrConnectWithoutActivityInput>
    upsert?: Enumerable<activity_sentences_users_responseUpsertWithWhereUniqueWithoutActivityInput>
    createMany?: activity_sentences_users_responseCreateManyActivityInputEnvelope
    set?: Enumerable<activity_sentences_users_responseWhereUniqueInput>
    disconnect?: Enumerable<activity_sentences_users_responseWhereUniqueInput>
    delete?: Enumerable<activity_sentences_users_responseWhereUniqueInput>
    connect?: Enumerable<activity_sentences_users_responseWhereUniqueInput>
    update?: Enumerable<activity_sentences_users_responseUpdateWithWhereUniqueWithoutActivityInput>
    updateMany?: Enumerable<activity_sentences_users_responseUpdateManyWithWhereWithoutActivityInput>
    deleteMany?: Enumerable<activity_sentences_users_responseScalarWhereInput>
  }

  export type activityCreateNestedOneWithoutActivity_question_responseInput = {
    create?: XOR<activityCreateWithoutActivity_question_responseInput, activityUncheckedCreateWithoutActivity_question_responseInput>
    connectOrCreate?: activityCreateOrConnectWithoutActivity_question_responseInput
    connect?: activityWhereUniqueInput
  }

  export type activityUpdateOneWithoutActivity_question_responseInput = {
    create?: XOR<activityCreateWithoutActivity_question_responseInput, activityUncheckedCreateWithoutActivity_question_responseInput>
    connectOrCreate?: activityCreateOrConnectWithoutActivity_question_responseInput
    upsert?: activityUpsertWithoutActivity_question_responseInput
    disconnect?: boolean
    delete?: boolean
    connect?: activityWhereUniqueInput
    update?: XOR<activityUpdateWithoutActivity_question_responseInput, activityUncheckedUpdateWithoutActivity_question_responseInput>
  }

  export type activityCreateNestedOneWithoutActivity_question_usersInput = {
    create?: XOR<activityCreateWithoutActivity_question_usersInput, activityUncheckedCreateWithoutActivity_question_usersInput>
    connectOrCreate?: activityCreateOrConnectWithoutActivity_question_usersInput
    connect?: activityWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutActivity_question_usersInput = {
    create?: XOR<usersCreateWithoutActivity_question_usersInput, usersUncheckedCreateWithoutActivity_question_usersInput>
    connectOrCreate?: usersCreateOrConnectWithoutActivity_question_usersInput
    connect?: usersWhereUniqueInput
  }

  export type activityUpdateOneWithoutActivity_question_usersInput = {
    create?: XOR<activityCreateWithoutActivity_question_usersInput, activityUncheckedCreateWithoutActivity_question_usersInput>
    connectOrCreate?: activityCreateOrConnectWithoutActivity_question_usersInput
    upsert?: activityUpsertWithoutActivity_question_usersInput
    disconnect?: boolean
    delete?: boolean
    connect?: activityWhereUniqueInput
    update?: XOR<activityUpdateWithoutActivity_question_usersInput, activityUncheckedUpdateWithoutActivity_question_usersInput>
  }

  export type usersUpdateOneWithoutActivity_question_usersInput = {
    create?: XOR<usersCreateWithoutActivity_question_usersInput, usersUncheckedCreateWithoutActivity_question_usersInput>
    connectOrCreate?: usersCreateOrConnectWithoutActivity_question_usersInput
    upsert?: usersUpsertWithoutActivity_question_usersInput
    disconnect?: boolean
    delete?: boolean
    connect?: usersWhereUniqueInput
    update?: XOR<usersUpdateWithoutActivity_question_usersInput, usersUncheckedUpdateWithoutActivity_question_usersInput>
  }

  export type activityCreateNestedOneWithoutActivity_question_users_responseInput = {
    create?: XOR<activityCreateWithoutActivity_question_users_responseInput, activityUncheckedCreateWithoutActivity_question_users_responseInput>
    connectOrCreate?: activityCreateOrConnectWithoutActivity_question_users_responseInput
    connect?: activityWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutActivity_question_users_responseInput = {
    create?: XOR<usersCreateWithoutActivity_question_users_responseInput, usersUncheckedCreateWithoutActivity_question_users_responseInput>
    connectOrCreate?: usersCreateOrConnectWithoutActivity_question_users_responseInput
    connect?: usersWhereUniqueInput
  }

  export type activityUpdateOneWithoutActivity_question_users_responseInput = {
    create?: XOR<activityCreateWithoutActivity_question_users_responseInput, activityUncheckedCreateWithoutActivity_question_users_responseInput>
    connectOrCreate?: activityCreateOrConnectWithoutActivity_question_users_responseInput
    upsert?: activityUpsertWithoutActivity_question_users_responseInput
    disconnect?: boolean
    delete?: boolean
    connect?: activityWhereUniqueInput
    update?: XOR<activityUpdateWithoutActivity_question_users_responseInput, activityUncheckedUpdateWithoutActivity_question_users_responseInput>
  }

  export type usersUpdateOneWithoutActivity_question_users_responseInput = {
    create?: XOR<usersCreateWithoutActivity_question_users_responseInput, usersUncheckedCreateWithoutActivity_question_users_responseInput>
    connectOrCreate?: usersCreateOrConnectWithoutActivity_question_users_responseInput
    upsert?: usersUpsertWithoutActivity_question_users_responseInput
    disconnect?: boolean
    delete?: boolean
    connect?: usersWhereUniqueInput
    update?: XOR<usersUpdateWithoutActivity_question_users_responseInput, usersUncheckedUpdateWithoutActivity_question_users_responseInput>
  }

  export type reward_usersCreateNestedManyWithoutRewardInput = {
    create?: XOR<Enumerable<reward_usersCreateWithoutRewardInput>, Enumerable<reward_usersUncheckedCreateWithoutRewardInput>>
    connectOrCreate?: Enumerable<reward_usersCreateOrConnectWithoutRewardInput>
    createMany?: reward_usersCreateManyRewardInputEnvelope
    connect?: Enumerable<reward_usersWhereUniqueInput>
  }

  export type reward_usersUncheckedCreateNestedManyWithoutRewardInput = {
    create?: XOR<Enumerable<reward_usersCreateWithoutRewardInput>, Enumerable<reward_usersUncheckedCreateWithoutRewardInput>>
    connectOrCreate?: Enumerable<reward_usersCreateOrConnectWithoutRewardInput>
    createMany?: reward_usersCreateManyRewardInputEnvelope
    connect?: Enumerable<reward_usersWhereUniqueInput>
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | number | string
    increment?: Decimal | number | string
    decrement?: Decimal | number | string
    multiply?: Decimal | number | string
    divide?: Decimal | number | string
  }

  export type reward_usersUpdateManyWithoutRewardInput = {
    create?: XOR<Enumerable<reward_usersCreateWithoutRewardInput>, Enumerable<reward_usersUncheckedCreateWithoutRewardInput>>
    connectOrCreate?: Enumerable<reward_usersCreateOrConnectWithoutRewardInput>
    upsert?: Enumerable<reward_usersUpsertWithWhereUniqueWithoutRewardInput>
    createMany?: reward_usersCreateManyRewardInputEnvelope
    set?: Enumerable<reward_usersWhereUniqueInput>
    disconnect?: Enumerable<reward_usersWhereUniqueInput>
    delete?: Enumerable<reward_usersWhereUniqueInput>
    connect?: Enumerable<reward_usersWhereUniqueInput>
    update?: Enumerable<reward_usersUpdateWithWhereUniqueWithoutRewardInput>
    updateMany?: Enumerable<reward_usersUpdateManyWithWhereWithoutRewardInput>
    deleteMany?: Enumerable<reward_usersScalarWhereInput>
  }

  export type reward_usersUncheckedUpdateManyWithoutRewardInput = {
    create?: XOR<Enumerable<reward_usersCreateWithoutRewardInput>, Enumerable<reward_usersUncheckedCreateWithoutRewardInput>>
    connectOrCreate?: Enumerable<reward_usersCreateOrConnectWithoutRewardInput>
    upsert?: Enumerable<reward_usersUpsertWithWhereUniqueWithoutRewardInput>
    createMany?: reward_usersCreateManyRewardInputEnvelope
    set?: Enumerable<reward_usersWhereUniqueInput>
    disconnect?: Enumerable<reward_usersWhereUniqueInput>
    delete?: Enumerable<reward_usersWhereUniqueInput>
    connect?: Enumerable<reward_usersWhereUniqueInput>
    update?: Enumerable<reward_usersUpdateWithWhereUniqueWithoutRewardInput>
    updateMany?: Enumerable<reward_usersUpdateManyWithWhereWithoutRewardInput>
    deleteMany?: Enumerable<reward_usersScalarWhereInput>
  }

  export type rewardCreateNestedOneWithoutReward_usersInput = {
    create?: XOR<rewardCreateWithoutReward_usersInput, rewardUncheckedCreateWithoutReward_usersInput>
    connectOrCreate?: rewardCreateOrConnectWithoutReward_usersInput
    connect?: rewardWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutReward_usersInput = {
    create?: XOR<usersCreateWithoutReward_usersInput, usersUncheckedCreateWithoutReward_usersInput>
    connectOrCreate?: usersCreateOrConnectWithoutReward_usersInput
    connect?: usersWhereUniqueInput
  }

  export type rewardUpdateOneWithoutReward_usersInput = {
    create?: XOR<rewardCreateWithoutReward_usersInput, rewardUncheckedCreateWithoutReward_usersInput>
    connectOrCreate?: rewardCreateOrConnectWithoutReward_usersInput
    upsert?: rewardUpsertWithoutReward_usersInput
    disconnect?: boolean
    delete?: boolean
    connect?: rewardWhereUniqueInput
    update?: XOR<rewardUpdateWithoutReward_usersInput, rewardUncheckedUpdateWithoutReward_usersInput>
  }

  export type usersUpdateOneWithoutReward_usersInput = {
    create?: XOR<usersCreateWithoutReward_usersInput, usersUncheckedCreateWithoutReward_usersInput>
    connectOrCreate?: usersCreateOrConnectWithoutReward_usersInput
    upsert?: usersUpsertWithoutReward_usersInput
    disconnect?: boolean
    delete?: boolean
    connect?: usersWhereUniqueInput
    update?: XOR<usersUpdateWithoutReward_usersInput, usersUncheckedUpdateWithoutReward_usersInput>
  }

  export type activityCreateNestedOneWithoutActivity_sentences_usersInput = {
    create?: XOR<activityCreateWithoutActivity_sentences_usersInput, activityUncheckedCreateWithoutActivity_sentences_usersInput>
    connectOrCreate?: activityCreateOrConnectWithoutActivity_sentences_usersInput
    connect?: activityWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutActivity_sentences_usersInput = {
    create?: XOR<usersCreateWithoutActivity_sentences_usersInput, usersUncheckedCreateWithoutActivity_sentences_usersInput>
    connectOrCreate?: usersCreateOrConnectWithoutActivity_sentences_usersInput
    connect?: usersWhereUniqueInput
  }

  export type activityUpdateOneWithoutActivity_sentences_usersInput = {
    create?: XOR<activityCreateWithoutActivity_sentences_usersInput, activityUncheckedCreateWithoutActivity_sentences_usersInput>
    connectOrCreate?: activityCreateOrConnectWithoutActivity_sentences_usersInput
    upsert?: activityUpsertWithoutActivity_sentences_usersInput
    disconnect?: boolean
    delete?: boolean
    connect?: activityWhereUniqueInput
    update?: XOR<activityUpdateWithoutActivity_sentences_usersInput, activityUncheckedUpdateWithoutActivity_sentences_usersInput>
  }

  export type usersUpdateOneWithoutActivity_sentences_usersInput = {
    create?: XOR<usersCreateWithoutActivity_sentences_usersInput, usersUncheckedCreateWithoutActivity_sentences_usersInput>
    connectOrCreate?: usersCreateOrConnectWithoutActivity_sentences_usersInput
    upsert?: usersUpsertWithoutActivity_sentences_usersInput
    disconnect?: boolean
    delete?: boolean
    connect?: usersWhereUniqueInput
    update?: XOR<usersUpdateWithoutActivity_sentences_usersInput, usersUncheckedUpdateWithoutActivity_sentences_usersInput>
  }

  export type activityCreateNestedOneWithoutActivity_sentences_users_responseInput = {
    create?: XOR<activityCreateWithoutActivity_sentences_users_responseInput, activityUncheckedCreateWithoutActivity_sentences_users_responseInput>
    connectOrCreate?: activityCreateOrConnectWithoutActivity_sentences_users_responseInput
    connect?: activityWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutActivity_sentences_users_responseInput = {
    create?: XOR<usersCreateWithoutActivity_sentences_users_responseInput, usersUncheckedCreateWithoutActivity_sentences_users_responseInput>
    connectOrCreate?: usersCreateOrConnectWithoutActivity_sentences_users_responseInput
    connect?: usersWhereUniqueInput
  }

  export type activityUpdateOneWithoutActivity_sentences_users_responseInput = {
    create?: XOR<activityCreateWithoutActivity_sentences_users_responseInput, activityUncheckedCreateWithoutActivity_sentences_users_responseInput>
    connectOrCreate?: activityCreateOrConnectWithoutActivity_sentences_users_responseInput
    upsert?: activityUpsertWithoutActivity_sentences_users_responseInput
    disconnect?: boolean
    delete?: boolean
    connect?: activityWhereUniqueInput
    update?: XOR<activityUpdateWithoutActivity_sentences_users_responseInput, activityUncheckedUpdateWithoutActivity_sentences_users_responseInput>
  }

  export type usersUpdateOneWithoutActivity_sentences_users_responseInput = {
    create?: XOR<usersCreateWithoutActivity_sentences_users_responseInput, usersUncheckedCreateWithoutActivity_sentences_users_responseInput>
    connectOrCreate?: usersCreateOrConnectWithoutActivity_sentences_users_responseInput
    upsert?: usersUpsertWithoutActivity_sentences_users_responseInput
    disconnect?: boolean
    delete?: boolean
    connect?: usersWhereUniqueInput
    update?: XOR<usersUpdateWithoutActivity_sentences_users_responseInput, usersUncheckedUpdateWithoutActivity_sentences_users_responseInput>
  }

  export type usersCreateNestedOneWithoutNotificationInput = {
    create?: XOR<usersCreateWithoutNotificationInput, usersUncheckedCreateWithoutNotificationInput>
    connectOrCreate?: usersCreateOrConnectWithoutNotificationInput
    connect?: usersWhereUniqueInput
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type usersUpdateOneRequiredWithoutNotificationInput = {
    create?: XOR<usersCreateWithoutNotificationInput, usersUncheckedCreateWithoutNotificationInput>
    connectOrCreate?: usersCreateOrConnectWithoutNotificationInput
    upsert?: usersUpsertWithoutNotificationInput
    connect?: usersWhereUniqueInput
    update?: XOR<usersUpdateWithoutNotificationInput, usersUncheckedUpdateWithoutNotificationInput>
  }

  export type usersCreateNestedOneWithoutEduvidaInput = {
    create?: XOR<usersCreateWithoutEduvidaInput, usersUncheckedCreateWithoutEduvidaInput>
    connectOrCreate?: usersCreateOrConnectWithoutEduvidaInput
    connect?: usersWhereUniqueInput
  }

  export type eduvida_commentCreateNestedManyWithoutEduvidaInput = {
    create?: XOR<Enumerable<eduvida_commentCreateWithoutEduvidaInput>, Enumerable<eduvida_commentUncheckedCreateWithoutEduvidaInput>>
    connectOrCreate?: Enumerable<eduvida_commentCreateOrConnectWithoutEduvidaInput>
    createMany?: eduvida_commentCreateManyEduvidaInputEnvelope
    connect?: Enumerable<eduvida_commentWhereUniqueInput>
  }

  export type eduvida_commentUncheckedCreateNestedManyWithoutEduvidaInput = {
    create?: XOR<Enumerable<eduvida_commentCreateWithoutEduvidaInput>, Enumerable<eduvida_commentUncheckedCreateWithoutEduvidaInput>>
    connectOrCreate?: Enumerable<eduvida_commentCreateOrConnectWithoutEduvidaInput>
    createMany?: eduvida_commentCreateManyEduvidaInputEnvelope
    connect?: Enumerable<eduvida_commentWhereUniqueInput>
  }

  export type usersUpdateOneRequiredWithoutEduvidaInput = {
    create?: XOR<usersCreateWithoutEduvidaInput, usersUncheckedCreateWithoutEduvidaInput>
    connectOrCreate?: usersCreateOrConnectWithoutEduvidaInput
    upsert?: usersUpsertWithoutEduvidaInput
    connect?: usersWhereUniqueInput
    update?: XOR<usersUpdateWithoutEduvidaInput, usersUncheckedUpdateWithoutEduvidaInput>
  }

  export type eduvida_commentUpdateManyWithoutEduvidaInput = {
    create?: XOR<Enumerable<eduvida_commentCreateWithoutEduvidaInput>, Enumerable<eduvida_commentUncheckedCreateWithoutEduvidaInput>>
    connectOrCreate?: Enumerable<eduvida_commentCreateOrConnectWithoutEduvidaInput>
    upsert?: Enumerable<eduvida_commentUpsertWithWhereUniqueWithoutEduvidaInput>
    createMany?: eduvida_commentCreateManyEduvidaInputEnvelope
    set?: Enumerable<eduvida_commentWhereUniqueInput>
    disconnect?: Enumerable<eduvida_commentWhereUniqueInput>
    delete?: Enumerable<eduvida_commentWhereUniqueInput>
    connect?: Enumerable<eduvida_commentWhereUniqueInput>
    update?: Enumerable<eduvida_commentUpdateWithWhereUniqueWithoutEduvidaInput>
    updateMany?: Enumerable<eduvida_commentUpdateManyWithWhereWithoutEduvidaInput>
    deleteMany?: Enumerable<eduvida_commentScalarWhereInput>
  }

  export type eduvida_commentUncheckedUpdateManyWithoutEduvidaInput = {
    create?: XOR<Enumerable<eduvida_commentCreateWithoutEduvidaInput>, Enumerable<eduvida_commentUncheckedCreateWithoutEduvidaInput>>
    connectOrCreate?: Enumerable<eduvida_commentCreateOrConnectWithoutEduvidaInput>
    upsert?: Enumerable<eduvida_commentUpsertWithWhereUniqueWithoutEduvidaInput>
    createMany?: eduvida_commentCreateManyEduvidaInputEnvelope
    set?: Enumerable<eduvida_commentWhereUniqueInput>
    disconnect?: Enumerable<eduvida_commentWhereUniqueInput>
    delete?: Enumerable<eduvida_commentWhereUniqueInput>
    connect?: Enumerable<eduvida_commentWhereUniqueInput>
    update?: Enumerable<eduvida_commentUpdateWithWhereUniqueWithoutEduvidaInput>
    updateMany?: Enumerable<eduvida_commentUpdateManyWithWhereWithoutEduvidaInput>
    deleteMany?: Enumerable<eduvida_commentScalarWhereInput>
  }

  export type eduvidaCreateNestedOneWithoutEduvida_commentInput = {
    create?: XOR<eduvidaCreateWithoutEduvida_commentInput, eduvidaUncheckedCreateWithoutEduvida_commentInput>
    connectOrCreate?: eduvidaCreateOrConnectWithoutEduvida_commentInput
    connect?: eduvidaWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutEduvida_commentInput = {
    create?: XOR<usersCreateWithoutEduvida_commentInput, usersUncheckedCreateWithoutEduvida_commentInput>
    connectOrCreate?: usersCreateOrConnectWithoutEduvida_commentInput
    connect?: usersWhereUniqueInput
  }

  export type eduvidaUpdateOneWithoutEduvida_commentInput = {
    create?: XOR<eduvidaCreateWithoutEduvida_commentInput, eduvidaUncheckedCreateWithoutEduvida_commentInput>
    connectOrCreate?: eduvidaCreateOrConnectWithoutEduvida_commentInput
    upsert?: eduvidaUpsertWithoutEduvida_commentInput
    disconnect?: boolean
    delete?: boolean
    connect?: eduvidaWhereUniqueInput
    update?: XOR<eduvidaUpdateWithoutEduvida_commentInput, eduvidaUncheckedUpdateWithoutEduvida_commentInput>
  }

  export type usersUpdateOneWithoutEduvida_commentInput = {
    create?: XOR<usersCreateWithoutEduvida_commentInput, usersUncheckedCreateWithoutEduvida_commentInput>
    connectOrCreate?: usersCreateOrConnectWithoutEduvida_commentInput
    upsert?: usersUpsertWithoutEduvida_commentInput
    disconnect?: boolean
    delete?: boolean
    connect?: usersWhereUniqueInput
    update?: XOR<usersUpdateWithoutEduvida_commentInput, usersUncheckedUpdateWithoutEduvida_commentInput>
  }

  export type NestedIntFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntFilter | number
  }

  export type NestedStringFilter = {
    equals?: string
    in?: Enumerable<string>
    notIn?: Enumerable<string>
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringFilter | string
  }

  export type NestedStringNullableFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringNullableFilter | string | null
  }

  export type NestedDecimalNullableFilter = {
    equals?: Decimal | number | string | null
    in?: Enumerable<Decimal> | Enumerable<number> | Enumerable<string> | null
    notIn?: Enumerable<Decimal> | Enumerable<number> | Enumerable<string> | null
    lt?: Decimal | number | string
    lte?: Decimal | number | string
    gt?: Decimal | number | string
    gte?: Decimal | number | string
    not?: NestedDecimalNullableFilter | Decimal | number | string | null
  }

  export type NestedIntWithAggregatesFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntWithAggregatesFilter | number
    _count?: NestedIntFilter
    _avg?: NestedFloatFilter
    _sum?: NestedIntFilter
    _min?: NestedIntFilter
    _max?: NestedIntFilter
  }

  export type NestedFloatFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedFloatFilter | number
  }

  export type NestedStringWithAggregatesFilter = {
    equals?: string
    in?: Enumerable<string>
    notIn?: Enumerable<string>
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringWithAggregatesFilter | string
    _count?: NestedIntFilter
    _min?: NestedStringFilter
    _max?: NestedStringFilter
  }

  export type NestedStringNullableWithAggregatesFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringNullableWithAggregatesFilter | string | null
    _count?: NestedIntNullableFilter
    _min?: NestedStringNullableFilter
    _max?: NestedStringNullableFilter
  }

  export type NestedIntNullableFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntNullableFilter | number | null
  }

  export type NestedDecimalNullableWithAggregatesFilter = {
    equals?: Decimal | number | string | null
    in?: Enumerable<Decimal> | Enumerable<number> | Enumerable<string> | null
    notIn?: Enumerable<Decimal> | Enumerable<number> | Enumerable<string> | null
    lt?: Decimal | number | string
    lte?: Decimal | number | string
    gt?: Decimal | number | string
    gte?: Decimal | number | string
    not?: NestedDecimalNullableWithAggregatesFilter | Decimal | number | string | null
    _count?: NestedIntNullableFilter
    _avg?: NestedDecimalNullableFilter
    _sum?: NestedDecimalNullableFilter
    _min?: NestedDecimalNullableFilter
    _max?: NestedDecimalNullableFilter
  }

  export type NestedDateTimeNullableFilter = {
    equals?: Date | string | null
    in?: Enumerable<Date> | Enumerable<string> | null
    notIn?: Enumerable<Date> | Enumerable<string> | null
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeNullableFilter | Date | string | null
  }

  export type NestedIntNullableWithAggregatesFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntNullableWithAggregatesFilter | number | null
    _count?: NestedIntNullableFilter
    _avg?: NestedFloatNullableFilter
    _sum?: NestedIntNullableFilter
    _min?: NestedIntNullableFilter
    _max?: NestedIntNullableFilter
  }

  export type NestedFloatNullableFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedFloatNullableFilter | number | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter = {
    equals?: Date | string | null
    in?: Enumerable<Date> | Enumerable<string> | null
    notIn?: Enumerable<Date> | Enumerable<string> | null
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeNullableWithAggregatesFilter | Date | string | null
    _count?: NestedIntNullableFilter
    _min?: NestedDateTimeNullableFilter
    _max?: NestedDateTimeNullableFilter
  }

  export type NestedDecimalFilter = {
    equals?: Decimal | number | string
    in?: Enumerable<Decimal> | Enumerable<number> | Enumerable<string>
    notIn?: Enumerable<Decimal> | Enumerable<number> | Enumerable<string>
    lt?: Decimal | number | string
    lte?: Decimal | number | string
    gt?: Decimal | number | string
    gte?: Decimal | number | string
    not?: NestedDecimalFilter | Decimal | number | string
  }

  export type NestedDecimalWithAggregatesFilter = {
    equals?: Decimal | number | string
    in?: Enumerable<Decimal> | Enumerable<number> | Enumerable<string>
    notIn?: Enumerable<Decimal> | Enumerable<number> | Enumerable<string>
    lt?: Decimal | number | string
    lte?: Decimal | number | string
    gt?: Decimal | number | string
    gte?: Decimal | number | string
    not?: NestedDecimalWithAggregatesFilter | Decimal | number | string
    _count?: NestedIntFilter
    _avg?: NestedDecimalFilter
    _sum?: NestedDecimalFilter
    _min?: NestedDecimalFilter
    _max?: NestedDecimalFilter
  }

  export type NestedDateTimeFilter = {
    equals?: Date | string
    in?: Enumerable<Date> | Enumerable<string>
    notIn?: Enumerable<Date> | Enumerable<string>
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeFilter | Date | string
  }

  export type NestedDateTimeWithAggregatesFilter = {
    equals?: Date | string
    in?: Enumerable<Date> | Enumerable<string>
    notIn?: Enumerable<Date> | Enumerable<string>
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeWithAggregatesFilter | Date | string
    _count?: NestedIntFilter
    _min?: NestedDateTimeFilter
    _max?: NestedDateTimeFilter
  }

  export type activityCreateWithoutUsersInput = {
    title: string
    with_password: number
    password?: string | null
    type_activity?: string | null
    excluded?: number | null
    created?: Date | string | null
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
    difficulty_level?: string | null
    activity_question_response?: activity_question_responseCreateNestedManyWithoutActivityInput
    activity_question_users?: activity_question_usersCreateNestedManyWithoutActivityInput
    activity_question_users_response?: activity_question_users_responseCreateNestedManyWithoutActivityInput
    activity_sentences_users?: activity_sentences_usersCreateNestedManyWithoutActivityInput
    activity_sentences_users_response?: activity_sentences_users_responseCreateNestedManyWithoutActivityInput
  }

  export type activityUncheckedCreateWithoutUsersInput = {
    id?: number
    title: string
    with_password: number
    password?: string | null
    type_activity?: string | null
    excluded?: number | null
    created?: Date | string | null
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
    difficulty_level?: string | null
    activity_question_response?: activity_question_responseUncheckedCreateNestedManyWithoutActivityInput
    activity_question_users?: activity_question_usersUncheckedCreateNestedManyWithoutActivityInput
    activity_question_users_response?: activity_question_users_responseUncheckedCreateNestedManyWithoutActivityInput
    activity_sentences_users?: activity_sentences_usersUncheckedCreateNestedManyWithoutActivityInput
    activity_sentences_users_response?: activity_sentences_users_responseUncheckedCreateNestedManyWithoutActivityInput
  }

  export type activityCreateOrConnectWithoutUsersInput = {
    where: activityWhereUniqueInput
    create: XOR<activityCreateWithoutUsersInput, activityUncheckedCreateWithoutUsersInput>
  }

  export type activityCreateManyUsersInputEnvelope = {
    data: Enumerable<activityCreateManyUsersInput>
    skipDuplicates?: boolean
  }

  export type activity_question_usersCreateWithoutUsersInput = {
    value?: Decimal | number | string | null
    processed?: number | null
    created?: Date | string | null
    display_to_user?: number | null
    evaluated?: number | null
    activity?: activityCreateNestedOneWithoutActivity_question_usersInput
  }

  export type activity_question_usersUncheckedCreateWithoutUsersInput = {
    id?: number
    activity_id?: number | null
    value?: Decimal | number | string | null
    processed?: number | null
    created?: Date | string | null
    display_to_user?: number | null
    evaluated?: number | null
  }

  export type activity_question_usersCreateOrConnectWithoutUsersInput = {
    where: activity_question_usersWhereUniqueInput
    create: XOR<activity_question_usersCreateWithoutUsersInput, activity_question_usersUncheckedCreateWithoutUsersInput>
  }

  export type activity_question_usersCreateManyUsersInputEnvelope = {
    data: Enumerable<activity_question_usersCreateManyUsersInput>
    skipDuplicates?: boolean
  }

  export type activity_question_users_responseCreateWithoutUsersInput = {
    number_question: number
    answer: string
    comments?: string | null
    activity?: activityCreateNestedOneWithoutActivity_question_users_responseInput
  }

  export type activity_question_users_responseUncheckedCreateWithoutUsersInput = {
    id?: number
    activity_id?: number | null
    number_question: number
    answer: string
    comments?: string | null
  }

  export type activity_question_users_responseCreateOrConnectWithoutUsersInput = {
    where: activity_question_users_responseWhereUniqueInput
    create: XOR<activity_question_users_responseCreateWithoutUsersInput, activity_question_users_responseUncheckedCreateWithoutUsersInput>
  }

  export type activity_question_users_responseCreateManyUsersInputEnvelope = {
    data: Enumerable<activity_question_users_responseCreateManyUsersInput>
    skipDuplicates?: boolean
  }

  export type activity_sentences_usersCreateWithoutUsersInput = {
    value?: Decimal | number | string | null
    processed?: number | null
    activity?: activityCreateNestedOneWithoutActivity_sentences_usersInput
  }

  export type activity_sentences_usersUncheckedCreateWithoutUsersInput = {
    id?: number
    activity_id?: number | null
    value?: Decimal | number | string | null
    processed?: number | null
  }

  export type activity_sentences_usersCreateOrConnectWithoutUsersInput = {
    where: activity_sentences_usersWhereUniqueInput
    create: XOR<activity_sentences_usersCreateWithoutUsersInput, activity_sentences_usersUncheckedCreateWithoutUsersInput>
  }

  export type activity_sentences_usersCreateManyUsersInputEnvelope = {
    data: Enumerable<activity_sentences_usersCreateManyUsersInput>
    skipDuplicates?: boolean
  }

  export type activity_sentences_users_responseCreateWithoutUsersInput = {
    number_sentence: number
    sentences_informed: string
    comments?: string | null
    activity?: activityCreateNestedOneWithoutActivity_sentences_users_responseInput
  }

  export type activity_sentences_users_responseUncheckedCreateWithoutUsersInput = {
    id?: number
    activity_id?: number | null
    number_sentence: number
    sentences_informed: string
    comments?: string | null
  }

  export type activity_sentences_users_responseCreateOrConnectWithoutUsersInput = {
    where: activity_sentences_users_responseWhereUniqueInput
    create: XOR<activity_sentences_users_responseCreateWithoutUsersInput, activity_sentences_users_responseUncheckedCreateWithoutUsersInput>
  }

  export type activity_sentences_users_responseCreateManyUsersInputEnvelope = {
    data: Enumerable<activity_sentences_users_responseCreateManyUsersInput>
    skipDuplicates?: boolean
  }

  export type eduvidaCreateWithoutUsersInput = {
    title: string
    help_text: string
    help_type?: string | null
    help_close: number
    created: Date | string
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
    eduvida_comment?: eduvida_commentCreateNestedManyWithoutEduvidaInput
  }

  export type eduvidaUncheckedCreateWithoutUsersInput = {
    id?: number
    title: string
    help_text: string
    help_type?: string | null
    help_close: number
    created: Date | string
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
    eduvida_comment?: eduvida_commentUncheckedCreateNestedManyWithoutEduvidaInput
  }

  export type eduvidaCreateOrConnectWithoutUsersInput = {
    where: eduvidaWhereUniqueInput
    create: XOR<eduvidaCreateWithoutUsersInput, eduvidaUncheckedCreateWithoutUsersInput>
  }

  export type eduvidaCreateManyUsersInputEnvelope = {
    data: Enumerable<eduvidaCreateManyUsersInput>
    skipDuplicates?: boolean
  }

  export type eduvida_commentCreateWithoutUsersInput = {
    comment: string
    created: Date | string
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
    eduvida?: eduvidaCreateNestedOneWithoutEduvida_commentInput
  }

  export type eduvida_commentUncheckedCreateWithoutUsersInput = {
    id?: number
    eduvida_id?: number | null
    comment: string
    created: Date | string
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
  }

  export type eduvida_commentCreateOrConnectWithoutUsersInput = {
    where: eduvida_commentWhereUniqueInput
    create: XOR<eduvida_commentCreateWithoutUsersInput, eduvida_commentUncheckedCreateWithoutUsersInput>
  }

  export type eduvida_commentCreateManyUsersInputEnvelope = {
    data: Enumerable<eduvida_commentCreateManyUsersInput>
    skipDuplicates?: boolean
  }

  export type notificationCreateWithoutUsersInput = {
    recipient_uid: string
    notification_text: string
    notification_date: Date | string
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
  }

  export type notificationUncheckedCreateWithoutUsersInput = {
    id?: number
    recipient_uid: string
    notification_text: string
    notification_date: Date | string
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
  }

  export type notificationCreateOrConnectWithoutUsersInput = {
    where: notificationWhereUniqueInput
    create: XOR<notificationCreateWithoutUsersInput, notificationUncheckedCreateWithoutUsersInput>
  }

  export type notificationCreateManyUsersInputEnvelope = {
    data: Enumerable<notificationCreateManyUsersInput>
    skipDuplicates?: boolean
  }

  export type reward_usersCreateWithoutUsersInput = {
    amount: number
    reward?: rewardCreateNestedOneWithoutReward_usersInput
  }

  export type reward_usersUncheckedCreateWithoutUsersInput = {
    id?: number
    reward_id?: number | null
    amount: number
  }

  export type reward_usersCreateOrConnectWithoutUsersInput = {
    where: reward_usersWhereUniqueInput
    create: XOR<reward_usersCreateWithoutUsersInput, reward_usersUncheckedCreateWithoutUsersInput>
  }

  export type reward_usersCreateManyUsersInputEnvelope = {
    data: Enumerable<reward_usersCreateManyUsersInput>
    skipDuplicates?: boolean
  }

  export type activityUpsertWithWhereUniqueWithoutUsersInput = {
    where: activityWhereUniqueInput
    update: XOR<activityUpdateWithoutUsersInput, activityUncheckedUpdateWithoutUsersInput>
    create: XOR<activityCreateWithoutUsersInput, activityUncheckedCreateWithoutUsersInput>
  }

  export type activityUpdateWithWhereUniqueWithoutUsersInput = {
    where: activityWhereUniqueInput
    data: XOR<activityUpdateWithoutUsersInput, activityUncheckedUpdateWithoutUsersInput>
  }

  export type activityUpdateManyWithWhereWithoutUsersInput = {
    where: activityScalarWhereInput
    data: XOR<activityUpdateManyMutationInput, activityUncheckedUpdateManyWithoutActivityInput>
  }

  export type activityScalarWhereInput = {
    AND?: Enumerable<activityScalarWhereInput>
    OR?: Enumerable<activityScalarWhereInput>
    NOT?: Enumerable<activityScalarWhereInput>
    id?: IntFilter | number
    author_uid?: StringFilter | string
    title?: StringFilter | string
    with_password?: IntFilter | number
    password?: StringNullableFilter | string | null
    type_activity?: StringNullableFilter | string | null
    excluded?: IntNullableFilter | number | null
    created?: DateTimeNullableFilter | Date | string | null
    image_reference?: StringNullableFilter | string | null
    image_url?: StringNullableFilter | string | null
    image_type?: StringNullableFilter | string | null
    image_size_wh?: StringNullableFilter | string | null
    difficulty_level?: StringNullableFilter | string | null
  }

  export type activity_question_usersUpsertWithWhereUniqueWithoutUsersInput = {
    where: activity_question_usersWhereUniqueInput
    update: XOR<activity_question_usersUpdateWithoutUsersInput, activity_question_usersUncheckedUpdateWithoutUsersInput>
    create: XOR<activity_question_usersCreateWithoutUsersInput, activity_question_usersUncheckedCreateWithoutUsersInput>
  }

  export type activity_question_usersUpdateWithWhereUniqueWithoutUsersInput = {
    where: activity_question_usersWhereUniqueInput
    data: XOR<activity_question_usersUpdateWithoutUsersInput, activity_question_usersUncheckedUpdateWithoutUsersInput>
  }

  export type activity_question_usersUpdateManyWithWhereWithoutUsersInput = {
    where: activity_question_usersScalarWhereInput
    data: XOR<activity_question_usersUpdateManyMutationInput, activity_question_usersUncheckedUpdateManyWithoutActivity_question_usersInput>
  }

  export type activity_question_usersScalarWhereInput = {
    AND?: Enumerable<activity_question_usersScalarWhereInput>
    OR?: Enumerable<activity_question_usersScalarWhereInput>
    NOT?: Enumerable<activity_question_usersScalarWhereInput>
    id?: IntFilter | number
    activity_id?: IntNullableFilter | number | null
    user_uid?: StringNullableFilter | string | null
    value?: DecimalNullableFilter | Decimal | number | string | null
    processed?: IntNullableFilter | number | null
    created?: DateTimeNullableFilter | Date | string | null
    display_to_user?: IntNullableFilter | number | null
    evaluated?: IntNullableFilter | number | null
  }

  export type activity_question_users_responseUpsertWithWhereUniqueWithoutUsersInput = {
    where: activity_question_users_responseWhereUniqueInput
    update: XOR<activity_question_users_responseUpdateWithoutUsersInput, activity_question_users_responseUncheckedUpdateWithoutUsersInput>
    create: XOR<activity_question_users_responseCreateWithoutUsersInput, activity_question_users_responseUncheckedCreateWithoutUsersInput>
  }

  export type activity_question_users_responseUpdateWithWhereUniqueWithoutUsersInput = {
    where: activity_question_users_responseWhereUniqueInput
    data: XOR<activity_question_users_responseUpdateWithoutUsersInput, activity_question_users_responseUncheckedUpdateWithoutUsersInput>
  }

  export type activity_question_users_responseUpdateManyWithWhereWithoutUsersInput = {
    where: activity_question_users_responseScalarWhereInput
    data: XOR<activity_question_users_responseUpdateManyMutationInput, activity_question_users_responseUncheckedUpdateManyWithoutActivity_question_users_responseInput>
  }

  export type activity_question_users_responseScalarWhereInput = {
    AND?: Enumerable<activity_question_users_responseScalarWhereInput>
    OR?: Enumerable<activity_question_users_responseScalarWhereInput>
    NOT?: Enumerable<activity_question_users_responseScalarWhereInput>
    id?: IntFilter | number
    activity_id?: IntNullableFilter | number | null
    user_uid?: StringNullableFilter | string | null
    number_question?: IntFilter | number
    answer?: StringFilter | string
    comments?: StringNullableFilter | string | null
  }

  export type activity_sentences_usersUpsertWithWhereUniqueWithoutUsersInput = {
    where: activity_sentences_usersWhereUniqueInput
    update: XOR<activity_sentences_usersUpdateWithoutUsersInput, activity_sentences_usersUncheckedUpdateWithoutUsersInput>
    create: XOR<activity_sentences_usersCreateWithoutUsersInput, activity_sentences_usersUncheckedCreateWithoutUsersInput>
  }

  export type activity_sentences_usersUpdateWithWhereUniqueWithoutUsersInput = {
    where: activity_sentences_usersWhereUniqueInput
    data: XOR<activity_sentences_usersUpdateWithoutUsersInput, activity_sentences_usersUncheckedUpdateWithoutUsersInput>
  }

  export type activity_sentences_usersUpdateManyWithWhereWithoutUsersInput = {
    where: activity_sentences_usersScalarWhereInput
    data: XOR<activity_sentences_usersUpdateManyMutationInput, activity_sentences_usersUncheckedUpdateManyWithoutActivity_sentences_usersInput>
  }

  export type activity_sentences_usersScalarWhereInput = {
    AND?: Enumerable<activity_sentences_usersScalarWhereInput>
    OR?: Enumerable<activity_sentences_usersScalarWhereInput>
    NOT?: Enumerable<activity_sentences_usersScalarWhereInput>
    id?: IntFilter | number
    activity_id?: IntNullableFilter | number | null
    user_uid?: StringNullableFilter | string | null
    value?: DecimalNullableFilter | Decimal | number | string | null
    processed?: IntNullableFilter | number | null
  }

  export type activity_sentences_users_responseUpsertWithWhereUniqueWithoutUsersInput = {
    where: activity_sentences_users_responseWhereUniqueInput
    update: XOR<activity_sentences_users_responseUpdateWithoutUsersInput, activity_sentences_users_responseUncheckedUpdateWithoutUsersInput>
    create: XOR<activity_sentences_users_responseCreateWithoutUsersInput, activity_sentences_users_responseUncheckedCreateWithoutUsersInput>
  }

  export type activity_sentences_users_responseUpdateWithWhereUniqueWithoutUsersInput = {
    where: activity_sentences_users_responseWhereUniqueInput
    data: XOR<activity_sentences_users_responseUpdateWithoutUsersInput, activity_sentences_users_responseUncheckedUpdateWithoutUsersInput>
  }

  export type activity_sentences_users_responseUpdateManyWithWhereWithoutUsersInput = {
    where: activity_sentences_users_responseScalarWhereInput
    data: XOR<activity_sentences_users_responseUpdateManyMutationInput, activity_sentences_users_responseUncheckedUpdateManyWithoutActivity_sentences_users_responseInput>
  }

  export type activity_sentences_users_responseScalarWhereInput = {
    AND?: Enumerable<activity_sentences_users_responseScalarWhereInput>
    OR?: Enumerable<activity_sentences_users_responseScalarWhereInput>
    NOT?: Enumerable<activity_sentences_users_responseScalarWhereInput>
    id?: IntFilter | number
    activity_id?: IntNullableFilter | number | null
    user_uid?: StringNullableFilter | string | null
    number_sentence?: IntFilter | number
    sentences_informed?: StringFilter | string
    comments?: StringNullableFilter | string | null
  }

  export type eduvidaUpsertWithWhereUniqueWithoutUsersInput = {
    where: eduvidaWhereUniqueInput
    update: XOR<eduvidaUpdateWithoutUsersInput, eduvidaUncheckedUpdateWithoutUsersInput>
    create: XOR<eduvidaCreateWithoutUsersInput, eduvidaUncheckedCreateWithoutUsersInput>
  }

  export type eduvidaUpdateWithWhereUniqueWithoutUsersInput = {
    where: eduvidaWhereUniqueInput
    data: XOR<eduvidaUpdateWithoutUsersInput, eduvidaUncheckedUpdateWithoutUsersInput>
  }

  export type eduvidaUpdateManyWithWhereWithoutUsersInput = {
    where: eduvidaScalarWhereInput
    data: XOR<eduvidaUpdateManyMutationInput, eduvidaUncheckedUpdateManyWithoutEduvidaInput>
  }

  export type eduvidaScalarWhereInput = {
    AND?: Enumerable<eduvidaScalarWhereInput>
    OR?: Enumerable<eduvidaScalarWhereInput>
    NOT?: Enumerable<eduvidaScalarWhereInput>
    id?: IntFilter | number
    author_uid?: StringFilter | string
    title?: StringFilter | string
    help_text?: StringFilter | string
    help_type?: StringNullableFilter | string | null
    help_close?: IntFilter | number
    created?: DateTimeFilter | Date | string
    image_reference?: StringNullableFilter | string | null
    image_url?: StringNullableFilter | string | null
    image_type?: StringNullableFilter | string | null
    image_size_wh?: StringNullableFilter | string | null
  }

  export type eduvida_commentUpsertWithWhereUniqueWithoutUsersInput = {
    where: eduvida_commentWhereUniqueInput
    update: XOR<eduvida_commentUpdateWithoutUsersInput, eduvida_commentUncheckedUpdateWithoutUsersInput>
    create: XOR<eduvida_commentCreateWithoutUsersInput, eduvida_commentUncheckedCreateWithoutUsersInput>
  }

  export type eduvida_commentUpdateWithWhereUniqueWithoutUsersInput = {
    where: eduvida_commentWhereUniqueInput
    data: XOR<eduvida_commentUpdateWithoutUsersInput, eduvida_commentUncheckedUpdateWithoutUsersInput>
  }

  export type eduvida_commentUpdateManyWithWhereWithoutUsersInput = {
    where: eduvida_commentScalarWhereInput
    data: XOR<eduvida_commentUpdateManyMutationInput, eduvida_commentUncheckedUpdateManyWithoutEduvida_commentInput>
  }

  export type eduvida_commentScalarWhereInput = {
    AND?: Enumerable<eduvida_commentScalarWhereInput>
    OR?: Enumerable<eduvida_commentScalarWhereInput>
    NOT?: Enumerable<eduvida_commentScalarWhereInput>
    id?: IntFilter | number
    eduvida_id?: IntNullableFilter | number | null
    user_uid?: StringNullableFilter | string | null
    comment?: StringFilter | string
    created?: DateTimeFilter | Date | string
    image_reference?: StringNullableFilter | string | null
    image_url?: StringNullableFilter | string | null
    image_type?: StringNullableFilter | string | null
    image_size_wh?: StringNullableFilter | string | null
  }

  export type notificationUpsertWithWhereUniqueWithoutUsersInput = {
    where: notificationWhereUniqueInput
    update: XOR<notificationUpdateWithoutUsersInput, notificationUncheckedUpdateWithoutUsersInput>
    create: XOR<notificationCreateWithoutUsersInput, notificationUncheckedCreateWithoutUsersInput>
  }

  export type notificationUpdateWithWhereUniqueWithoutUsersInput = {
    where: notificationWhereUniqueInput
    data: XOR<notificationUpdateWithoutUsersInput, notificationUncheckedUpdateWithoutUsersInput>
  }

  export type notificationUpdateManyWithWhereWithoutUsersInput = {
    where: notificationScalarWhereInput
    data: XOR<notificationUpdateManyMutationInput, notificationUncheckedUpdateManyWithoutNotificationInput>
  }

  export type notificationScalarWhereInput = {
    AND?: Enumerable<notificationScalarWhereInput>
    OR?: Enumerable<notificationScalarWhereInput>
    NOT?: Enumerable<notificationScalarWhereInput>
    id?: IntFilter | number
    sender_uid?: StringFilter | string
    recipient_uid?: StringFilter | string
    notification_text?: StringFilter | string
    notification_date?: DateTimeFilter | Date | string
    image_reference?: StringNullableFilter | string | null
    image_url?: StringNullableFilter | string | null
    image_type?: StringNullableFilter | string | null
    image_size_wh?: StringNullableFilter | string | null
  }

  export type reward_usersUpsertWithWhereUniqueWithoutUsersInput = {
    where: reward_usersWhereUniqueInput
    update: XOR<reward_usersUpdateWithoutUsersInput, reward_usersUncheckedUpdateWithoutUsersInput>
    create: XOR<reward_usersCreateWithoutUsersInput, reward_usersUncheckedCreateWithoutUsersInput>
  }

  export type reward_usersUpdateWithWhereUniqueWithoutUsersInput = {
    where: reward_usersWhereUniqueInput
    data: XOR<reward_usersUpdateWithoutUsersInput, reward_usersUncheckedUpdateWithoutUsersInput>
  }

  export type reward_usersUpdateManyWithWhereWithoutUsersInput = {
    where: reward_usersScalarWhereInput
    data: XOR<reward_usersUpdateManyMutationInput, reward_usersUncheckedUpdateManyWithoutReward_usersInput>
  }

  export type reward_usersScalarWhereInput = {
    AND?: Enumerable<reward_usersScalarWhereInput>
    OR?: Enumerable<reward_usersScalarWhereInput>
    NOT?: Enumerable<reward_usersScalarWhereInput>
    id?: IntFilter | number
    user_uid?: StringNullableFilter | string | null
    reward_id?: IntNullableFilter | number | null
    amount?: IntFilter | number
  }

  export type usersCreateWithoutActivityInput = {
    id?: number
    firebase_uid: string
    email?: string | null
    name?: string | null
    last_name?: string | null
    score?: Decimal | number | string | null
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
    activity_question_users?: activity_question_usersCreateNestedManyWithoutUsersInput
    activity_question_users_response?: activity_question_users_responseCreateNestedManyWithoutUsersInput
    activity_sentences_users?: activity_sentences_usersCreateNestedManyWithoutUsersInput
    activity_sentences_users_response?: activity_sentences_users_responseCreateNestedManyWithoutUsersInput
    eduvida?: eduvidaCreateNestedManyWithoutUsersInput
    eduvida_comment?: eduvida_commentCreateNestedManyWithoutUsersInput
    notification?: notificationCreateNestedManyWithoutUsersInput
    reward_users?: reward_usersCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutActivityInput = {
    id?: number
    firebase_uid: string
    email?: string | null
    name?: string | null
    last_name?: string | null
    score?: Decimal | number | string | null
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
    activity_question_users?: activity_question_usersUncheckedCreateNestedManyWithoutUsersInput
    activity_question_users_response?: activity_question_users_responseUncheckedCreateNestedManyWithoutUsersInput
    activity_sentences_users?: activity_sentences_usersUncheckedCreateNestedManyWithoutUsersInput
    activity_sentences_users_response?: activity_sentences_users_responseUncheckedCreateNestedManyWithoutUsersInput
    eduvida?: eduvidaUncheckedCreateNestedManyWithoutUsersInput
    eduvida_comment?: eduvida_commentUncheckedCreateNestedManyWithoutUsersInput
    notification?: notificationUncheckedCreateNestedManyWithoutUsersInput
    reward_users?: reward_usersUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutActivityInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutActivityInput, usersUncheckedCreateWithoutActivityInput>
  }

  export type activity_question_responseCreateWithoutActivityInput = {
    number_question: number
    answer_one: string
    answer_two: string
    answer_tree: string
    answer_four: string
    right_answer: string
    question?: string | null
  }

  export type activity_question_responseUncheckedCreateWithoutActivityInput = {
    id?: number
    number_question: number
    answer_one: string
    answer_two: string
    answer_tree: string
    answer_four: string
    right_answer: string
    question?: string | null
  }

  export type activity_question_responseCreateOrConnectWithoutActivityInput = {
    where: activity_question_responseWhereUniqueInput
    create: XOR<activity_question_responseCreateWithoutActivityInput, activity_question_responseUncheckedCreateWithoutActivityInput>
  }

  export type activity_question_responseCreateManyActivityInputEnvelope = {
    data: Enumerable<activity_question_responseCreateManyActivityInput>
    skipDuplicates?: boolean
  }

  export type activity_question_usersCreateWithoutActivityInput = {
    value?: Decimal | number | string | null
    processed?: number | null
    created?: Date | string | null
    display_to_user?: number | null
    evaluated?: number | null
    users?: usersCreateNestedOneWithoutActivity_question_usersInput
  }

  export type activity_question_usersUncheckedCreateWithoutActivityInput = {
    id?: number
    user_uid?: string | null
    value?: Decimal | number | string | null
    processed?: number | null
    created?: Date | string | null
    display_to_user?: number | null
    evaluated?: number | null
  }

  export type activity_question_usersCreateOrConnectWithoutActivityInput = {
    where: activity_question_usersWhereUniqueInput
    create: XOR<activity_question_usersCreateWithoutActivityInput, activity_question_usersUncheckedCreateWithoutActivityInput>
  }

  export type activity_question_usersCreateManyActivityInputEnvelope = {
    data: Enumerable<activity_question_usersCreateManyActivityInput>
    skipDuplicates?: boolean
  }

  export type activity_question_users_responseCreateWithoutActivityInput = {
    number_question: number
    answer: string
    comments?: string | null
    users?: usersCreateNestedOneWithoutActivity_question_users_responseInput
  }

  export type activity_question_users_responseUncheckedCreateWithoutActivityInput = {
    id?: number
    user_uid?: string | null
    number_question: number
    answer: string
    comments?: string | null
  }

  export type activity_question_users_responseCreateOrConnectWithoutActivityInput = {
    where: activity_question_users_responseWhereUniqueInput
    create: XOR<activity_question_users_responseCreateWithoutActivityInput, activity_question_users_responseUncheckedCreateWithoutActivityInput>
  }

  export type activity_question_users_responseCreateManyActivityInputEnvelope = {
    data: Enumerable<activity_question_users_responseCreateManyActivityInput>
    skipDuplicates?: boolean
  }

  export type activity_sentences_usersCreateWithoutActivityInput = {
    value?: Decimal | number | string | null
    processed?: number | null
    users?: usersCreateNestedOneWithoutActivity_sentences_usersInput
  }

  export type activity_sentences_usersUncheckedCreateWithoutActivityInput = {
    id?: number
    user_uid?: string | null
    value?: Decimal | number | string | null
    processed?: number | null
  }

  export type activity_sentences_usersCreateOrConnectWithoutActivityInput = {
    where: activity_sentences_usersWhereUniqueInput
    create: XOR<activity_sentences_usersCreateWithoutActivityInput, activity_sentences_usersUncheckedCreateWithoutActivityInput>
  }

  export type activity_sentences_usersCreateManyActivityInputEnvelope = {
    data: Enumerable<activity_sentences_usersCreateManyActivityInput>
    skipDuplicates?: boolean
  }

  export type activity_sentences_users_responseCreateWithoutActivityInput = {
    number_sentence: number
    sentences_informed: string
    comments?: string | null
    users?: usersCreateNestedOneWithoutActivity_sentences_users_responseInput
  }

  export type activity_sentences_users_responseUncheckedCreateWithoutActivityInput = {
    id?: number
    user_uid?: string | null
    number_sentence: number
    sentences_informed: string
    comments?: string | null
  }

  export type activity_sentences_users_responseCreateOrConnectWithoutActivityInput = {
    where: activity_sentences_users_responseWhereUniqueInput
    create: XOR<activity_sentences_users_responseCreateWithoutActivityInput, activity_sentences_users_responseUncheckedCreateWithoutActivityInput>
  }

  export type activity_sentences_users_responseCreateManyActivityInputEnvelope = {
    data: Enumerable<activity_sentences_users_responseCreateManyActivityInput>
    skipDuplicates?: boolean
  }

  export type usersUpsertWithoutActivityInput = {
    update: XOR<usersUpdateWithoutActivityInput, usersUncheckedUpdateWithoutActivityInput>
    create: XOR<usersCreateWithoutActivityInput, usersUncheckedCreateWithoutActivityInput>
  }

  export type usersUpdateWithoutActivityInput = {
    id?: IntFieldUpdateOperationsInput | number
    firebase_uid?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    score?: NullableDecimalFieldUpdateOperationsInput | Decimal | number | string | null
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
    activity_question_users?: activity_question_usersUpdateManyWithoutUsersInput
    activity_question_users_response?: activity_question_users_responseUpdateManyWithoutUsersInput
    activity_sentences_users?: activity_sentences_usersUpdateManyWithoutUsersInput
    activity_sentences_users_response?: activity_sentences_users_responseUpdateManyWithoutUsersInput
    eduvida?: eduvidaUpdateManyWithoutUsersInput
    eduvida_comment?: eduvida_commentUpdateManyWithoutUsersInput
    notification?: notificationUpdateManyWithoutUsersInput
    reward_users?: reward_usersUpdateManyWithoutUsersInput
  }

  export type usersUncheckedUpdateWithoutActivityInput = {
    id?: IntFieldUpdateOperationsInput | number
    firebase_uid?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    score?: NullableDecimalFieldUpdateOperationsInput | Decimal | number | string | null
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
    activity_question_users?: activity_question_usersUncheckedUpdateManyWithoutUsersInput
    activity_question_users_response?: activity_question_users_responseUncheckedUpdateManyWithoutUsersInput
    activity_sentences_users?: activity_sentences_usersUncheckedUpdateManyWithoutUsersInput
    activity_sentences_users_response?: activity_sentences_users_responseUncheckedUpdateManyWithoutUsersInput
    eduvida?: eduvidaUncheckedUpdateManyWithoutUsersInput
    eduvida_comment?: eduvida_commentUncheckedUpdateManyWithoutUsersInput
    notification?: notificationUncheckedUpdateManyWithoutUsersInput
    reward_users?: reward_usersUncheckedUpdateManyWithoutUsersInput
  }

  export type activity_question_responseUpsertWithWhereUniqueWithoutActivityInput = {
    where: activity_question_responseWhereUniqueInput
    update: XOR<activity_question_responseUpdateWithoutActivityInput, activity_question_responseUncheckedUpdateWithoutActivityInput>
    create: XOR<activity_question_responseCreateWithoutActivityInput, activity_question_responseUncheckedCreateWithoutActivityInput>
  }

  export type activity_question_responseUpdateWithWhereUniqueWithoutActivityInput = {
    where: activity_question_responseWhereUniqueInput
    data: XOR<activity_question_responseUpdateWithoutActivityInput, activity_question_responseUncheckedUpdateWithoutActivityInput>
  }

  export type activity_question_responseUpdateManyWithWhereWithoutActivityInput = {
    where: activity_question_responseScalarWhereInput
    data: XOR<activity_question_responseUpdateManyMutationInput, activity_question_responseUncheckedUpdateManyWithoutActivity_question_responseInput>
  }

  export type activity_question_responseScalarWhereInput = {
    AND?: Enumerable<activity_question_responseScalarWhereInput>
    OR?: Enumerable<activity_question_responseScalarWhereInput>
    NOT?: Enumerable<activity_question_responseScalarWhereInput>
    id?: IntFilter | number
    activity_id?: IntNullableFilter | number | null
    number_question?: IntFilter | number
    answer_one?: StringFilter | string
    answer_two?: StringFilter | string
    answer_tree?: StringFilter | string
    answer_four?: StringFilter | string
    right_answer?: StringFilter | string
    question?: StringNullableFilter | string | null
  }

  export type activity_question_usersUpsertWithWhereUniqueWithoutActivityInput = {
    where: activity_question_usersWhereUniqueInput
    update: XOR<activity_question_usersUpdateWithoutActivityInput, activity_question_usersUncheckedUpdateWithoutActivityInput>
    create: XOR<activity_question_usersCreateWithoutActivityInput, activity_question_usersUncheckedCreateWithoutActivityInput>
  }

  export type activity_question_usersUpdateWithWhereUniqueWithoutActivityInput = {
    where: activity_question_usersWhereUniqueInput
    data: XOR<activity_question_usersUpdateWithoutActivityInput, activity_question_usersUncheckedUpdateWithoutActivityInput>
  }

  export type activity_question_usersUpdateManyWithWhereWithoutActivityInput = {
    where: activity_question_usersScalarWhereInput
    data: XOR<activity_question_usersUpdateManyMutationInput, activity_question_usersUncheckedUpdateManyWithoutActivity_question_usersInput>
  }

  export type activity_question_users_responseUpsertWithWhereUniqueWithoutActivityInput = {
    where: activity_question_users_responseWhereUniqueInput
    update: XOR<activity_question_users_responseUpdateWithoutActivityInput, activity_question_users_responseUncheckedUpdateWithoutActivityInput>
    create: XOR<activity_question_users_responseCreateWithoutActivityInput, activity_question_users_responseUncheckedCreateWithoutActivityInput>
  }

  export type activity_question_users_responseUpdateWithWhereUniqueWithoutActivityInput = {
    where: activity_question_users_responseWhereUniqueInput
    data: XOR<activity_question_users_responseUpdateWithoutActivityInput, activity_question_users_responseUncheckedUpdateWithoutActivityInput>
  }

  export type activity_question_users_responseUpdateManyWithWhereWithoutActivityInput = {
    where: activity_question_users_responseScalarWhereInput
    data: XOR<activity_question_users_responseUpdateManyMutationInput, activity_question_users_responseUncheckedUpdateManyWithoutActivity_question_users_responseInput>
  }

  export type activity_sentences_usersUpsertWithWhereUniqueWithoutActivityInput = {
    where: activity_sentences_usersWhereUniqueInput
    update: XOR<activity_sentences_usersUpdateWithoutActivityInput, activity_sentences_usersUncheckedUpdateWithoutActivityInput>
    create: XOR<activity_sentences_usersCreateWithoutActivityInput, activity_sentences_usersUncheckedCreateWithoutActivityInput>
  }

  export type activity_sentences_usersUpdateWithWhereUniqueWithoutActivityInput = {
    where: activity_sentences_usersWhereUniqueInput
    data: XOR<activity_sentences_usersUpdateWithoutActivityInput, activity_sentences_usersUncheckedUpdateWithoutActivityInput>
  }

  export type activity_sentences_usersUpdateManyWithWhereWithoutActivityInput = {
    where: activity_sentences_usersScalarWhereInput
    data: XOR<activity_sentences_usersUpdateManyMutationInput, activity_sentences_usersUncheckedUpdateManyWithoutActivity_sentences_usersInput>
  }

  export type activity_sentences_users_responseUpsertWithWhereUniqueWithoutActivityInput = {
    where: activity_sentences_users_responseWhereUniqueInput
    update: XOR<activity_sentences_users_responseUpdateWithoutActivityInput, activity_sentences_users_responseUncheckedUpdateWithoutActivityInput>
    create: XOR<activity_sentences_users_responseCreateWithoutActivityInput, activity_sentences_users_responseUncheckedCreateWithoutActivityInput>
  }

  export type activity_sentences_users_responseUpdateWithWhereUniqueWithoutActivityInput = {
    where: activity_sentences_users_responseWhereUniqueInput
    data: XOR<activity_sentences_users_responseUpdateWithoutActivityInput, activity_sentences_users_responseUncheckedUpdateWithoutActivityInput>
  }

  export type activity_sentences_users_responseUpdateManyWithWhereWithoutActivityInput = {
    where: activity_sentences_users_responseScalarWhereInput
    data: XOR<activity_sentences_users_responseUpdateManyMutationInput, activity_sentences_users_responseUncheckedUpdateManyWithoutActivity_sentences_users_responseInput>
  }

  export type activityCreateWithoutActivity_question_responseInput = {
    title: string
    with_password: number
    password?: string | null
    type_activity?: string | null
    excluded?: number | null
    created?: Date | string | null
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
    difficulty_level?: string | null
    users: usersCreateNestedOneWithoutActivityInput
    activity_question_users?: activity_question_usersCreateNestedManyWithoutActivityInput
    activity_question_users_response?: activity_question_users_responseCreateNestedManyWithoutActivityInput
    activity_sentences_users?: activity_sentences_usersCreateNestedManyWithoutActivityInput
    activity_sentences_users_response?: activity_sentences_users_responseCreateNestedManyWithoutActivityInput
  }

  export type activityUncheckedCreateWithoutActivity_question_responseInput = {
    id?: number
    author_uid: string
    title: string
    with_password: number
    password?: string | null
    type_activity?: string | null
    excluded?: number | null
    created?: Date | string | null
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
    difficulty_level?: string | null
    activity_question_users?: activity_question_usersUncheckedCreateNestedManyWithoutActivityInput
    activity_question_users_response?: activity_question_users_responseUncheckedCreateNestedManyWithoutActivityInput
    activity_sentences_users?: activity_sentences_usersUncheckedCreateNestedManyWithoutActivityInput
    activity_sentences_users_response?: activity_sentences_users_responseUncheckedCreateNestedManyWithoutActivityInput
  }

  export type activityCreateOrConnectWithoutActivity_question_responseInput = {
    where: activityWhereUniqueInput
    create: XOR<activityCreateWithoutActivity_question_responseInput, activityUncheckedCreateWithoutActivity_question_responseInput>
  }

  export type activityUpsertWithoutActivity_question_responseInput = {
    update: XOR<activityUpdateWithoutActivity_question_responseInput, activityUncheckedUpdateWithoutActivity_question_responseInput>
    create: XOR<activityCreateWithoutActivity_question_responseInput, activityUncheckedCreateWithoutActivity_question_responseInput>
  }

  export type activityUpdateWithoutActivity_question_responseInput = {
    title?: StringFieldUpdateOperationsInput | string
    with_password?: IntFieldUpdateOperationsInput | number
    password?: NullableStringFieldUpdateOperationsInput | string | null
    type_activity?: NullableStringFieldUpdateOperationsInput | string | null
    excluded?: NullableIntFieldUpdateOperationsInput | number | null
    created?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
    difficulty_level?: NullableStringFieldUpdateOperationsInput | string | null
    users?: usersUpdateOneRequiredWithoutActivityInput
    activity_question_users?: activity_question_usersUpdateManyWithoutActivityInput
    activity_question_users_response?: activity_question_users_responseUpdateManyWithoutActivityInput
    activity_sentences_users?: activity_sentences_usersUpdateManyWithoutActivityInput
    activity_sentences_users_response?: activity_sentences_users_responseUpdateManyWithoutActivityInput
  }

  export type activityUncheckedUpdateWithoutActivity_question_responseInput = {
    id?: IntFieldUpdateOperationsInput | number
    author_uid?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    with_password?: IntFieldUpdateOperationsInput | number
    password?: NullableStringFieldUpdateOperationsInput | string | null
    type_activity?: NullableStringFieldUpdateOperationsInput | string | null
    excluded?: NullableIntFieldUpdateOperationsInput | number | null
    created?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
    difficulty_level?: NullableStringFieldUpdateOperationsInput | string | null
    activity_question_users?: activity_question_usersUncheckedUpdateManyWithoutActivityInput
    activity_question_users_response?: activity_question_users_responseUncheckedUpdateManyWithoutActivityInput
    activity_sentences_users?: activity_sentences_usersUncheckedUpdateManyWithoutActivityInput
    activity_sentences_users_response?: activity_sentences_users_responseUncheckedUpdateManyWithoutActivityInput
  }

  export type activityCreateWithoutActivity_question_usersInput = {
    title: string
    with_password: number
    password?: string | null
    type_activity?: string | null
    excluded?: number | null
    created?: Date | string | null
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
    difficulty_level?: string | null
    users: usersCreateNestedOneWithoutActivityInput
    activity_question_response?: activity_question_responseCreateNestedManyWithoutActivityInput
    activity_question_users_response?: activity_question_users_responseCreateNestedManyWithoutActivityInput
    activity_sentences_users?: activity_sentences_usersCreateNestedManyWithoutActivityInput
    activity_sentences_users_response?: activity_sentences_users_responseCreateNestedManyWithoutActivityInput
  }

  export type activityUncheckedCreateWithoutActivity_question_usersInput = {
    id?: number
    author_uid: string
    title: string
    with_password: number
    password?: string | null
    type_activity?: string | null
    excluded?: number | null
    created?: Date | string | null
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
    difficulty_level?: string | null
    activity_question_response?: activity_question_responseUncheckedCreateNestedManyWithoutActivityInput
    activity_question_users_response?: activity_question_users_responseUncheckedCreateNestedManyWithoutActivityInput
    activity_sentences_users?: activity_sentences_usersUncheckedCreateNestedManyWithoutActivityInput
    activity_sentences_users_response?: activity_sentences_users_responseUncheckedCreateNestedManyWithoutActivityInput
  }

  export type activityCreateOrConnectWithoutActivity_question_usersInput = {
    where: activityWhereUniqueInput
    create: XOR<activityCreateWithoutActivity_question_usersInput, activityUncheckedCreateWithoutActivity_question_usersInput>
  }

  export type usersCreateWithoutActivity_question_usersInput = {
    id?: number
    firebase_uid: string
    email?: string | null
    name?: string | null
    last_name?: string | null
    score?: Decimal | number | string | null
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
    activity?: activityCreateNestedManyWithoutUsersInput
    activity_question_users_response?: activity_question_users_responseCreateNestedManyWithoutUsersInput
    activity_sentences_users?: activity_sentences_usersCreateNestedManyWithoutUsersInput
    activity_sentences_users_response?: activity_sentences_users_responseCreateNestedManyWithoutUsersInput
    eduvida?: eduvidaCreateNestedManyWithoutUsersInput
    eduvida_comment?: eduvida_commentCreateNestedManyWithoutUsersInput
    notification?: notificationCreateNestedManyWithoutUsersInput
    reward_users?: reward_usersCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutActivity_question_usersInput = {
    id?: number
    firebase_uid: string
    email?: string | null
    name?: string | null
    last_name?: string | null
    score?: Decimal | number | string | null
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
    activity?: activityUncheckedCreateNestedManyWithoutUsersInput
    activity_question_users_response?: activity_question_users_responseUncheckedCreateNestedManyWithoutUsersInput
    activity_sentences_users?: activity_sentences_usersUncheckedCreateNestedManyWithoutUsersInput
    activity_sentences_users_response?: activity_sentences_users_responseUncheckedCreateNestedManyWithoutUsersInput
    eduvida?: eduvidaUncheckedCreateNestedManyWithoutUsersInput
    eduvida_comment?: eduvida_commentUncheckedCreateNestedManyWithoutUsersInput
    notification?: notificationUncheckedCreateNestedManyWithoutUsersInput
    reward_users?: reward_usersUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutActivity_question_usersInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutActivity_question_usersInput, usersUncheckedCreateWithoutActivity_question_usersInput>
  }

  export type activityUpsertWithoutActivity_question_usersInput = {
    update: XOR<activityUpdateWithoutActivity_question_usersInput, activityUncheckedUpdateWithoutActivity_question_usersInput>
    create: XOR<activityCreateWithoutActivity_question_usersInput, activityUncheckedCreateWithoutActivity_question_usersInput>
  }

  export type activityUpdateWithoutActivity_question_usersInput = {
    title?: StringFieldUpdateOperationsInput | string
    with_password?: IntFieldUpdateOperationsInput | number
    password?: NullableStringFieldUpdateOperationsInput | string | null
    type_activity?: NullableStringFieldUpdateOperationsInput | string | null
    excluded?: NullableIntFieldUpdateOperationsInput | number | null
    created?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
    difficulty_level?: NullableStringFieldUpdateOperationsInput | string | null
    users?: usersUpdateOneRequiredWithoutActivityInput
    activity_question_response?: activity_question_responseUpdateManyWithoutActivityInput
    activity_question_users_response?: activity_question_users_responseUpdateManyWithoutActivityInput
    activity_sentences_users?: activity_sentences_usersUpdateManyWithoutActivityInput
    activity_sentences_users_response?: activity_sentences_users_responseUpdateManyWithoutActivityInput
  }

  export type activityUncheckedUpdateWithoutActivity_question_usersInput = {
    id?: IntFieldUpdateOperationsInput | number
    author_uid?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    with_password?: IntFieldUpdateOperationsInput | number
    password?: NullableStringFieldUpdateOperationsInput | string | null
    type_activity?: NullableStringFieldUpdateOperationsInput | string | null
    excluded?: NullableIntFieldUpdateOperationsInput | number | null
    created?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
    difficulty_level?: NullableStringFieldUpdateOperationsInput | string | null
    activity_question_response?: activity_question_responseUncheckedUpdateManyWithoutActivityInput
    activity_question_users_response?: activity_question_users_responseUncheckedUpdateManyWithoutActivityInput
    activity_sentences_users?: activity_sentences_usersUncheckedUpdateManyWithoutActivityInput
    activity_sentences_users_response?: activity_sentences_users_responseUncheckedUpdateManyWithoutActivityInput
  }

  export type usersUpsertWithoutActivity_question_usersInput = {
    update: XOR<usersUpdateWithoutActivity_question_usersInput, usersUncheckedUpdateWithoutActivity_question_usersInput>
    create: XOR<usersCreateWithoutActivity_question_usersInput, usersUncheckedCreateWithoutActivity_question_usersInput>
  }

  export type usersUpdateWithoutActivity_question_usersInput = {
    id?: IntFieldUpdateOperationsInput | number
    firebase_uid?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    score?: NullableDecimalFieldUpdateOperationsInput | Decimal | number | string | null
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
    activity?: activityUpdateManyWithoutUsersInput
    activity_question_users_response?: activity_question_users_responseUpdateManyWithoutUsersInput
    activity_sentences_users?: activity_sentences_usersUpdateManyWithoutUsersInput
    activity_sentences_users_response?: activity_sentences_users_responseUpdateManyWithoutUsersInput
    eduvida?: eduvidaUpdateManyWithoutUsersInput
    eduvida_comment?: eduvida_commentUpdateManyWithoutUsersInput
    notification?: notificationUpdateManyWithoutUsersInput
    reward_users?: reward_usersUpdateManyWithoutUsersInput
  }

  export type usersUncheckedUpdateWithoutActivity_question_usersInput = {
    id?: IntFieldUpdateOperationsInput | number
    firebase_uid?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    score?: NullableDecimalFieldUpdateOperationsInput | Decimal | number | string | null
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
    activity?: activityUncheckedUpdateManyWithoutUsersInput
    activity_question_users_response?: activity_question_users_responseUncheckedUpdateManyWithoutUsersInput
    activity_sentences_users?: activity_sentences_usersUncheckedUpdateManyWithoutUsersInput
    activity_sentences_users_response?: activity_sentences_users_responseUncheckedUpdateManyWithoutUsersInput
    eduvida?: eduvidaUncheckedUpdateManyWithoutUsersInput
    eduvida_comment?: eduvida_commentUncheckedUpdateManyWithoutUsersInput
    notification?: notificationUncheckedUpdateManyWithoutUsersInput
    reward_users?: reward_usersUncheckedUpdateManyWithoutUsersInput
  }

  export type activityCreateWithoutActivity_question_users_responseInput = {
    title: string
    with_password: number
    password?: string | null
    type_activity?: string | null
    excluded?: number | null
    created?: Date | string | null
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
    difficulty_level?: string | null
    users: usersCreateNestedOneWithoutActivityInput
    activity_question_response?: activity_question_responseCreateNestedManyWithoutActivityInput
    activity_question_users?: activity_question_usersCreateNestedManyWithoutActivityInput
    activity_sentences_users?: activity_sentences_usersCreateNestedManyWithoutActivityInput
    activity_sentences_users_response?: activity_sentences_users_responseCreateNestedManyWithoutActivityInput
  }

  export type activityUncheckedCreateWithoutActivity_question_users_responseInput = {
    id?: number
    author_uid: string
    title: string
    with_password: number
    password?: string | null
    type_activity?: string | null
    excluded?: number | null
    created?: Date | string | null
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
    difficulty_level?: string | null
    activity_question_response?: activity_question_responseUncheckedCreateNestedManyWithoutActivityInput
    activity_question_users?: activity_question_usersUncheckedCreateNestedManyWithoutActivityInput
    activity_sentences_users?: activity_sentences_usersUncheckedCreateNestedManyWithoutActivityInput
    activity_sentences_users_response?: activity_sentences_users_responseUncheckedCreateNestedManyWithoutActivityInput
  }

  export type activityCreateOrConnectWithoutActivity_question_users_responseInput = {
    where: activityWhereUniqueInput
    create: XOR<activityCreateWithoutActivity_question_users_responseInput, activityUncheckedCreateWithoutActivity_question_users_responseInput>
  }

  export type usersCreateWithoutActivity_question_users_responseInput = {
    id?: number
    firebase_uid: string
    email?: string | null
    name?: string | null
    last_name?: string | null
    score?: Decimal | number | string | null
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
    activity?: activityCreateNestedManyWithoutUsersInput
    activity_question_users?: activity_question_usersCreateNestedManyWithoutUsersInput
    activity_sentences_users?: activity_sentences_usersCreateNestedManyWithoutUsersInput
    activity_sentences_users_response?: activity_sentences_users_responseCreateNestedManyWithoutUsersInput
    eduvida?: eduvidaCreateNestedManyWithoutUsersInput
    eduvida_comment?: eduvida_commentCreateNestedManyWithoutUsersInput
    notification?: notificationCreateNestedManyWithoutUsersInput
    reward_users?: reward_usersCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutActivity_question_users_responseInput = {
    id?: number
    firebase_uid: string
    email?: string | null
    name?: string | null
    last_name?: string | null
    score?: Decimal | number | string | null
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
    activity?: activityUncheckedCreateNestedManyWithoutUsersInput
    activity_question_users?: activity_question_usersUncheckedCreateNestedManyWithoutUsersInput
    activity_sentences_users?: activity_sentences_usersUncheckedCreateNestedManyWithoutUsersInput
    activity_sentences_users_response?: activity_sentences_users_responseUncheckedCreateNestedManyWithoutUsersInput
    eduvida?: eduvidaUncheckedCreateNestedManyWithoutUsersInput
    eduvida_comment?: eduvida_commentUncheckedCreateNestedManyWithoutUsersInput
    notification?: notificationUncheckedCreateNestedManyWithoutUsersInput
    reward_users?: reward_usersUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutActivity_question_users_responseInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutActivity_question_users_responseInput, usersUncheckedCreateWithoutActivity_question_users_responseInput>
  }

  export type activityUpsertWithoutActivity_question_users_responseInput = {
    update: XOR<activityUpdateWithoutActivity_question_users_responseInput, activityUncheckedUpdateWithoutActivity_question_users_responseInput>
    create: XOR<activityCreateWithoutActivity_question_users_responseInput, activityUncheckedCreateWithoutActivity_question_users_responseInput>
  }

  export type activityUpdateWithoutActivity_question_users_responseInput = {
    title?: StringFieldUpdateOperationsInput | string
    with_password?: IntFieldUpdateOperationsInput | number
    password?: NullableStringFieldUpdateOperationsInput | string | null
    type_activity?: NullableStringFieldUpdateOperationsInput | string | null
    excluded?: NullableIntFieldUpdateOperationsInput | number | null
    created?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
    difficulty_level?: NullableStringFieldUpdateOperationsInput | string | null
    users?: usersUpdateOneRequiredWithoutActivityInput
    activity_question_response?: activity_question_responseUpdateManyWithoutActivityInput
    activity_question_users?: activity_question_usersUpdateManyWithoutActivityInput
    activity_sentences_users?: activity_sentences_usersUpdateManyWithoutActivityInput
    activity_sentences_users_response?: activity_sentences_users_responseUpdateManyWithoutActivityInput
  }

  export type activityUncheckedUpdateWithoutActivity_question_users_responseInput = {
    id?: IntFieldUpdateOperationsInput | number
    author_uid?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    with_password?: IntFieldUpdateOperationsInput | number
    password?: NullableStringFieldUpdateOperationsInput | string | null
    type_activity?: NullableStringFieldUpdateOperationsInput | string | null
    excluded?: NullableIntFieldUpdateOperationsInput | number | null
    created?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
    difficulty_level?: NullableStringFieldUpdateOperationsInput | string | null
    activity_question_response?: activity_question_responseUncheckedUpdateManyWithoutActivityInput
    activity_question_users?: activity_question_usersUncheckedUpdateManyWithoutActivityInput
    activity_sentences_users?: activity_sentences_usersUncheckedUpdateManyWithoutActivityInput
    activity_sentences_users_response?: activity_sentences_users_responseUncheckedUpdateManyWithoutActivityInput
  }

  export type usersUpsertWithoutActivity_question_users_responseInput = {
    update: XOR<usersUpdateWithoutActivity_question_users_responseInput, usersUncheckedUpdateWithoutActivity_question_users_responseInput>
    create: XOR<usersCreateWithoutActivity_question_users_responseInput, usersUncheckedCreateWithoutActivity_question_users_responseInput>
  }

  export type usersUpdateWithoutActivity_question_users_responseInput = {
    id?: IntFieldUpdateOperationsInput | number
    firebase_uid?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    score?: NullableDecimalFieldUpdateOperationsInput | Decimal | number | string | null
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
    activity?: activityUpdateManyWithoutUsersInput
    activity_question_users?: activity_question_usersUpdateManyWithoutUsersInput
    activity_sentences_users?: activity_sentences_usersUpdateManyWithoutUsersInput
    activity_sentences_users_response?: activity_sentences_users_responseUpdateManyWithoutUsersInput
    eduvida?: eduvidaUpdateManyWithoutUsersInput
    eduvida_comment?: eduvida_commentUpdateManyWithoutUsersInput
    notification?: notificationUpdateManyWithoutUsersInput
    reward_users?: reward_usersUpdateManyWithoutUsersInput
  }

  export type usersUncheckedUpdateWithoutActivity_question_users_responseInput = {
    id?: IntFieldUpdateOperationsInput | number
    firebase_uid?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    score?: NullableDecimalFieldUpdateOperationsInput | Decimal | number | string | null
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
    activity?: activityUncheckedUpdateManyWithoutUsersInput
    activity_question_users?: activity_question_usersUncheckedUpdateManyWithoutUsersInput
    activity_sentences_users?: activity_sentences_usersUncheckedUpdateManyWithoutUsersInput
    activity_sentences_users_response?: activity_sentences_users_responseUncheckedUpdateManyWithoutUsersInput
    eduvida?: eduvidaUncheckedUpdateManyWithoutUsersInput
    eduvida_comment?: eduvida_commentUncheckedUpdateManyWithoutUsersInput
    notification?: notificationUncheckedUpdateManyWithoutUsersInput
    reward_users?: reward_usersUncheckedUpdateManyWithoutUsersInput
  }

  export type reward_usersCreateWithoutRewardInput = {
    amount: number
    users?: usersCreateNestedOneWithoutReward_usersInput
  }

  export type reward_usersUncheckedCreateWithoutRewardInput = {
    id?: number
    user_uid?: string | null
    amount: number
  }

  export type reward_usersCreateOrConnectWithoutRewardInput = {
    where: reward_usersWhereUniqueInput
    create: XOR<reward_usersCreateWithoutRewardInput, reward_usersUncheckedCreateWithoutRewardInput>
  }

  export type reward_usersCreateManyRewardInputEnvelope = {
    data: Enumerable<reward_usersCreateManyRewardInput>
    skipDuplicates?: boolean
  }

  export type reward_usersUpsertWithWhereUniqueWithoutRewardInput = {
    where: reward_usersWhereUniqueInput
    update: XOR<reward_usersUpdateWithoutRewardInput, reward_usersUncheckedUpdateWithoutRewardInput>
    create: XOR<reward_usersCreateWithoutRewardInput, reward_usersUncheckedCreateWithoutRewardInput>
  }

  export type reward_usersUpdateWithWhereUniqueWithoutRewardInput = {
    where: reward_usersWhereUniqueInput
    data: XOR<reward_usersUpdateWithoutRewardInput, reward_usersUncheckedUpdateWithoutRewardInput>
  }

  export type reward_usersUpdateManyWithWhereWithoutRewardInput = {
    where: reward_usersScalarWhereInput
    data: XOR<reward_usersUpdateManyMutationInput, reward_usersUncheckedUpdateManyWithoutReward_usersInput>
  }

  export type rewardCreateWithoutReward_usersInput = {
    type: number
    name: string
    description: string
    value: Decimal | number | string
    picture?: string | null
  }

  export type rewardUncheckedCreateWithoutReward_usersInput = {
    id?: number
    type: number
    name: string
    description: string
    value: Decimal | number | string
    picture?: string | null
  }

  export type rewardCreateOrConnectWithoutReward_usersInput = {
    where: rewardWhereUniqueInput
    create: XOR<rewardCreateWithoutReward_usersInput, rewardUncheckedCreateWithoutReward_usersInput>
  }

  export type usersCreateWithoutReward_usersInput = {
    id?: number
    firebase_uid: string
    email?: string | null
    name?: string | null
    last_name?: string | null
    score?: Decimal | number | string | null
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
    activity?: activityCreateNestedManyWithoutUsersInput
    activity_question_users?: activity_question_usersCreateNestedManyWithoutUsersInput
    activity_question_users_response?: activity_question_users_responseCreateNestedManyWithoutUsersInput
    activity_sentences_users?: activity_sentences_usersCreateNestedManyWithoutUsersInput
    activity_sentences_users_response?: activity_sentences_users_responseCreateNestedManyWithoutUsersInput
    eduvida?: eduvidaCreateNestedManyWithoutUsersInput
    eduvida_comment?: eduvida_commentCreateNestedManyWithoutUsersInput
    notification?: notificationCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutReward_usersInput = {
    id?: number
    firebase_uid: string
    email?: string | null
    name?: string | null
    last_name?: string | null
    score?: Decimal | number | string | null
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
    activity?: activityUncheckedCreateNestedManyWithoutUsersInput
    activity_question_users?: activity_question_usersUncheckedCreateNestedManyWithoutUsersInput
    activity_question_users_response?: activity_question_users_responseUncheckedCreateNestedManyWithoutUsersInput
    activity_sentences_users?: activity_sentences_usersUncheckedCreateNestedManyWithoutUsersInput
    activity_sentences_users_response?: activity_sentences_users_responseUncheckedCreateNestedManyWithoutUsersInput
    eduvida?: eduvidaUncheckedCreateNestedManyWithoutUsersInput
    eduvida_comment?: eduvida_commentUncheckedCreateNestedManyWithoutUsersInput
    notification?: notificationUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutReward_usersInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutReward_usersInput, usersUncheckedCreateWithoutReward_usersInput>
  }

  export type rewardUpsertWithoutReward_usersInput = {
    update: XOR<rewardUpdateWithoutReward_usersInput, rewardUncheckedUpdateWithoutReward_usersInput>
    create: XOR<rewardCreateWithoutReward_usersInput, rewardUncheckedCreateWithoutReward_usersInput>
  }

  export type rewardUpdateWithoutReward_usersInput = {
    type?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    value?: DecimalFieldUpdateOperationsInput | Decimal | number | string
    picture?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type rewardUncheckedUpdateWithoutReward_usersInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    value?: DecimalFieldUpdateOperationsInput | Decimal | number | string
    picture?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type usersUpsertWithoutReward_usersInput = {
    update: XOR<usersUpdateWithoutReward_usersInput, usersUncheckedUpdateWithoutReward_usersInput>
    create: XOR<usersCreateWithoutReward_usersInput, usersUncheckedCreateWithoutReward_usersInput>
  }

  export type usersUpdateWithoutReward_usersInput = {
    id?: IntFieldUpdateOperationsInput | number
    firebase_uid?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    score?: NullableDecimalFieldUpdateOperationsInput | Decimal | number | string | null
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
    activity?: activityUpdateManyWithoutUsersInput
    activity_question_users?: activity_question_usersUpdateManyWithoutUsersInput
    activity_question_users_response?: activity_question_users_responseUpdateManyWithoutUsersInput
    activity_sentences_users?: activity_sentences_usersUpdateManyWithoutUsersInput
    activity_sentences_users_response?: activity_sentences_users_responseUpdateManyWithoutUsersInput
    eduvida?: eduvidaUpdateManyWithoutUsersInput
    eduvida_comment?: eduvida_commentUpdateManyWithoutUsersInput
    notification?: notificationUpdateManyWithoutUsersInput
  }

  export type usersUncheckedUpdateWithoutReward_usersInput = {
    id?: IntFieldUpdateOperationsInput | number
    firebase_uid?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    score?: NullableDecimalFieldUpdateOperationsInput | Decimal | number | string | null
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
    activity?: activityUncheckedUpdateManyWithoutUsersInput
    activity_question_users?: activity_question_usersUncheckedUpdateManyWithoutUsersInput
    activity_question_users_response?: activity_question_users_responseUncheckedUpdateManyWithoutUsersInput
    activity_sentences_users?: activity_sentences_usersUncheckedUpdateManyWithoutUsersInput
    activity_sentences_users_response?: activity_sentences_users_responseUncheckedUpdateManyWithoutUsersInput
    eduvida?: eduvidaUncheckedUpdateManyWithoutUsersInput
    eduvida_comment?: eduvida_commentUncheckedUpdateManyWithoutUsersInput
    notification?: notificationUncheckedUpdateManyWithoutUsersInput
  }

  export type activityCreateWithoutActivity_sentences_usersInput = {
    title: string
    with_password: number
    password?: string | null
    type_activity?: string | null
    excluded?: number | null
    created?: Date | string | null
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
    difficulty_level?: string | null
    users: usersCreateNestedOneWithoutActivityInput
    activity_question_response?: activity_question_responseCreateNestedManyWithoutActivityInput
    activity_question_users?: activity_question_usersCreateNestedManyWithoutActivityInput
    activity_question_users_response?: activity_question_users_responseCreateNestedManyWithoutActivityInput
    activity_sentences_users_response?: activity_sentences_users_responseCreateNestedManyWithoutActivityInput
  }

  export type activityUncheckedCreateWithoutActivity_sentences_usersInput = {
    id?: number
    author_uid: string
    title: string
    with_password: number
    password?: string | null
    type_activity?: string | null
    excluded?: number | null
    created?: Date | string | null
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
    difficulty_level?: string | null
    activity_question_response?: activity_question_responseUncheckedCreateNestedManyWithoutActivityInput
    activity_question_users?: activity_question_usersUncheckedCreateNestedManyWithoutActivityInput
    activity_question_users_response?: activity_question_users_responseUncheckedCreateNestedManyWithoutActivityInput
    activity_sentences_users_response?: activity_sentences_users_responseUncheckedCreateNestedManyWithoutActivityInput
  }

  export type activityCreateOrConnectWithoutActivity_sentences_usersInput = {
    where: activityWhereUniqueInput
    create: XOR<activityCreateWithoutActivity_sentences_usersInput, activityUncheckedCreateWithoutActivity_sentences_usersInput>
  }

  export type usersCreateWithoutActivity_sentences_usersInput = {
    id?: number
    firebase_uid: string
    email?: string | null
    name?: string | null
    last_name?: string | null
    score?: Decimal | number | string | null
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
    activity?: activityCreateNestedManyWithoutUsersInput
    activity_question_users?: activity_question_usersCreateNestedManyWithoutUsersInput
    activity_question_users_response?: activity_question_users_responseCreateNestedManyWithoutUsersInput
    activity_sentences_users_response?: activity_sentences_users_responseCreateNestedManyWithoutUsersInput
    eduvida?: eduvidaCreateNestedManyWithoutUsersInput
    eduvida_comment?: eduvida_commentCreateNestedManyWithoutUsersInput
    notification?: notificationCreateNestedManyWithoutUsersInput
    reward_users?: reward_usersCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutActivity_sentences_usersInput = {
    id?: number
    firebase_uid: string
    email?: string | null
    name?: string | null
    last_name?: string | null
    score?: Decimal | number | string | null
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
    activity?: activityUncheckedCreateNestedManyWithoutUsersInput
    activity_question_users?: activity_question_usersUncheckedCreateNestedManyWithoutUsersInput
    activity_question_users_response?: activity_question_users_responseUncheckedCreateNestedManyWithoutUsersInput
    activity_sentences_users_response?: activity_sentences_users_responseUncheckedCreateNestedManyWithoutUsersInput
    eduvida?: eduvidaUncheckedCreateNestedManyWithoutUsersInput
    eduvida_comment?: eduvida_commentUncheckedCreateNestedManyWithoutUsersInput
    notification?: notificationUncheckedCreateNestedManyWithoutUsersInput
    reward_users?: reward_usersUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutActivity_sentences_usersInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutActivity_sentences_usersInput, usersUncheckedCreateWithoutActivity_sentences_usersInput>
  }

  export type activityUpsertWithoutActivity_sentences_usersInput = {
    update: XOR<activityUpdateWithoutActivity_sentences_usersInput, activityUncheckedUpdateWithoutActivity_sentences_usersInput>
    create: XOR<activityCreateWithoutActivity_sentences_usersInput, activityUncheckedCreateWithoutActivity_sentences_usersInput>
  }

  export type activityUpdateWithoutActivity_sentences_usersInput = {
    title?: StringFieldUpdateOperationsInput | string
    with_password?: IntFieldUpdateOperationsInput | number
    password?: NullableStringFieldUpdateOperationsInput | string | null
    type_activity?: NullableStringFieldUpdateOperationsInput | string | null
    excluded?: NullableIntFieldUpdateOperationsInput | number | null
    created?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
    difficulty_level?: NullableStringFieldUpdateOperationsInput | string | null
    users?: usersUpdateOneRequiredWithoutActivityInput
    activity_question_response?: activity_question_responseUpdateManyWithoutActivityInput
    activity_question_users?: activity_question_usersUpdateManyWithoutActivityInput
    activity_question_users_response?: activity_question_users_responseUpdateManyWithoutActivityInput
    activity_sentences_users_response?: activity_sentences_users_responseUpdateManyWithoutActivityInput
  }

  export type activityUncheckedUpdateWithoutActivity_sentences_usersInput = {
    id?: IntFieldUpdateOperationsInput | number
    author_uid?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    with_password?: IntFieldUpdateOperationsInput | number
    password?: NullableStringFieldUpdateOperationsInput | string | null
    type_activity?: NullableStringFieldUpdateOperationsInput | string | null
    excluded?: NullableIntFieldUpdateOperationsInput | number | null
    created?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
    difficulty_level?: NullableStringFieldUpdateOperationsInput | string | null
    activity_question_response?: activity_question_responseUncheckedUpdateManyWithoutActivityInput
    activity_question_users?: activity_question_usersUncheckedUpdateManyWithoutActivityInput
    activity_question_users_response?: activity_question_users_responseUncheckedUpdateManyWithoutActivityInput
    activity_sentences_users_response?: activity_sentences_users_responseUncheckedUpdateManyWithoutActivityInput
  }

  export type usersUpsertWithoutActivity_sentences_usersInput = {
    update: XOR<usersUpdateWithoutActivity_sentences_usersInput, usersUncheckedUpdateWithoutActivity_sentences_usersInput>
    create: XOR<usersCreateWithoutActivity_sentences_usersInput, usersUncheckedCreateWithoutActivity_sentences_usersInput>
  }

  export type usersUpdateWithoutActivity_sentences_usersInput = {
    id?: IntFieldUpdateOperationsInput | number
    firebase_uid?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    score?: NullableDecimalFieldUpdateOperationsInput | Decimal | number | string | null
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
    activity?: activityUpdateManyWithoutUsersInput
    activity_question_users?: activity_question_usersUpdateManyWithoutUsersInput
    activity_question_users_response?: activity_question_users_responseUpdateManyWithoutUsersInput
    activity_sentences_users_response?: activity_sentences_users_responseUpdateManyWithoutUsersInput
    eduvida?: eduvidaUpdateManyWithoutUsersInput
    eduvida_comment?: eduvida_commentUpdateManyWithoutUsersInput
    notification?: notificationUpdateManyWithoutUsersInput
    reward_users?: reward_usersUpdateManyWithoutUsersInput
  }

  export type usersUncheckedUpdateWithoutActivity_sentences_usersInput = {
    id?: IntFieldUpdateOperationsInput | number
    firebase_uid?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    score?: NullableDecimalFieldUpdateOperationsInput | Decimal | number | string | null
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
    activity?: activityUncheckedUpdateManyWithoutUsersInput
    activity_question_users?: activity_question_usersUncheckedUpdateManyWithoutUsersInput
    activity_question_users_response?: activity_question_users_responseUncheckedUpdateManyWithoutUsersInput
    activity_sentences_users_response?: activity_sentences_users_responseUncheckedUpdateManyWithoutUsersInput
    eduvida?: eduvidaUncheckedUpdateManyWithoutUsersInput
    eduvida_comment?: eduvida_commentUncheckedUpdateManyWithoutUsersInput
    notification?: notificationUncheckedUpdateManyWithoutUsersInput
    reward_users?: reward_usersUncheckedUpdateManyWithoutUsersInput
  }

  export type activityCreateWithoutActivity_sentences_users_responseInput = {
    title: string
    with_password: number
    password?: string | null
    type_activity?: string | null
    excluded?: number | null
    created?: Date | string | null
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
    difficulty_level?: string | null
    users: usersCreateNestedOneWithoutActivityInput
    activity_question_response?: activity_question_responseCreateNestedManyWithoutActivityInput
    activity_question_users?: activity_question_usersCreateNestedManyWithoutActivityInput
    activity_question_users_response?: activity_question_users_responseCreateNestedManyWithoutActivityInput
    activity_sentences_users?: activity_sentences_usersCreateNestedManyWithoutActivityInput
  }

  export type activityUncheckedCreateWithoutActivity_sentences_users_responseInput = {
    id?: number
    author_uid: string
    title: string
    with_password: number
    password?: string | null
    type_activity?: string | null
    excluded?: number | null
    created?: Date | string | null
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
    difficulty_level?: string | null
    activity_question_response?: activity_question_responseUncheckedCreateNestedManyWithoutActivityInput
    activity_question_users?: activity_question_usersUncheckedCreateNestedManyWithoutActivityInput
    activity_question_users_response?: activity_question_users_responseUncheckedCreateNestedManyWithoutActivityInput
    activity_sentences_users?: activity_sentences_usersUncheckedCreateNestedManyWithoutActivityInput
  }

  export type activityCreateOrConnectWithoutActivity_sentences_users_responseInput = {
    where: activityWhereUniqueInput
    create: XOR<activityCreateWithoutActivity_sentences_users_responseInput, activityUncheckedCreateWithoutActivity_sentences_users_responseInput>
  }

  export type usersCreateWithoutActivity_sentences_users_responseInput = {
    id?: number
    firebase_uid: string
    email?: string | null
    name?: string | null
    last_name?: string | null
    score?: Decimal | number | string | null
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
    activity?: activityCreateNestedManyWithoutUsersInput
    activity_question_users?: activity_question_usersCreateNestedManyWithoutUsersInput
    activity_question_users_response?: activity_question_users_responseCreateNestedManyWithoutUsersInput
    activity_sentences_users?: activity_sentences_usersCreateNestedManyWithoutUsersInput
    eduvida?: eduvidaCreateNestedManyWithoutUsersInput
    eduvida_comment?: eduvida_commentCreateNestedManyWithoutUsersInput
    notification?: notificationCreateNestedManyWithoutUsersInput
    reward_users?: reward_usersCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutActivity_sentences_users_responseInput = {
    id?: number
    firebase_uid: string
    email?: string | null
    name?: string | null
    last_name?: string | null
    score?: Decimal | number | string | null
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
    activity?: activityUncheckedCreateNestedManyWithoutUsersInput
    activity_question_users?: activity_question_usersUncheckedCreateNestedManyWithoutUsersInput
    activity_question_users_response?: activity_question_users_responseUncheckedCreateNestedManyWithoutUsersInput
    activity_sentences_users?: activity_sentences_usersUncheckedCreateNestedManyWithoutUsersInput
    eduvida?: eduvidaUncheckedCreateNestedManyWithoutUsersInput
    eduvida_comment?: eduvida_commentUncheckedCreateNestedManyWithoutUsersInput
    notification?: notificationUncheckedCreateNestedManyWithoutUsersInput
    reward_users?: reward_usersUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutActivity_sentences_users_responseInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutActivity_sentences_users_responseInput, usersUncheckedCreateWithoutActivity_sentences_users_responseInput>
  }

  export type activityUpsertWithoutActivity_sentences_users_responseInput = {
    update: XOR<activityUpdateWithoutActivity_sentences_users_responseInput, activityUncheckedUpdateWithoutActivity_sentences_users_responseInput>
    create: XOR<activityCreateWithoutActivity_sentences_users_responseInput, activityUncheckedCreateWithoutActivity_sentences_users_responseInput>
  }

  export type activityUpdateWithoutActivity_sentences_users_responseInput = {
    title?: StringFieldUpdateOperationsInput | string
    with_password?: IntFieldUpdateOperationsInput | number
    password?: NullableStringFieldUpdateOperationsInput | string | null
    type_activity?: NullableStringFieldUpdateOperationsInput | string | null
    excluded?: NullableIntFieldUpdateOperationsInput | number | null
    created?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
    difficulty_level?: NullableStringFieldUpdateOperationsInput | string | null
    users?: usersUpdateOneRequiredWithoutActivityInput
    activity_question_response?: activity_question_responseUpdateManyWithoutActivityInput
    activity_question_users?: activity_question_usersUpdateManyWithoutActivityInput
    activity_question_users_response?: activity_question_users_responseUpdateManyWithoutActivityInput
    activity_sentences_users?: activity_sentences_usersUpdateManyWithoutActivityInput
  }

  export type activityUncheckedUpdateWithoutActivity_sentences_users_responseInput = {
    id?: IntFieldUpdateOperationsInput | number
    author_uid?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    with_password?: IntFieldUpdateOperationsInput | number
    password?: NullableStringFieldUpdateOperationsInput | string | null
    type_activity?: NullableStringFieldUpdateOperationsInput | string | null
    excluded?: NullableIntFieldUpdateOperationsInput | number | null
    created?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
    difficulty_level?: NullableStringFieldUpdateOperationsInput | string | null
    activity_question_response?: activity_question_responseUncheckedUpdateManyWithoutActivityInput
    activity_question_users?: activity_question_usersUncheckedUpdateManyWithoutActivityInput
    activity_question_users_response?: activity_question_users_responseUncheckedUpdateManyWithoutActivityInput
    activity_sentences_users?: activity_sentences_usersUncheckedUpdateManyWithoutActivityInput
  }

  export type usersUpsertWithoutActivity_sentences_users_responseInput = {
    update: XOR<usersUpdateWithoutActivity_sentences_users_responseInput, usersUncheckedUpdateWithoutActivity_sentences_users_responseInput>
    create: XOR<usersCreateWithoutActivity_sentences_users_responseInput, usersUncheckedCreateWithoutActivity_sentences_users_responseInput>
  }

  export type usersUpdateWithoutActivity_sentences_users_responseInput = {
    id?: IntFieldUpdateOperationsInput | number
    firebase_uid?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    score?: NullableDecimalFieldUpdateOperationsInput | Decimal | number | string | null
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
    activity?: activityUpdateManyWithoutUsersInput
    activity_question_users?: activity_question_usersUpdateManyWithoutUsersInput
    activity_question_users_response?: activity_question_users_responseUpdateManyWithoutUsersInput
    activity_sentences_users?: activity_sentences_usersUpdateManyWithoutUsersInput
    eduvida?: eduvidaUpdateManyWithoutUsersInput
    eduvida_comment?: eduvida_commentUpdateManyWithoutUsersInput
    notification?: notificationUpdateManyWithoutUsersInput
    reward_users?: reward_usersUpdateManyWithoutUsersInput
  }

  export type usersUncheckedUpdateWithoutActivity_sentences_users_responseInput = {
    id?: IntFieldUpdateOperationsInput | number
    firebase_uid?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    score?: NullableDecimalFieldUpdateOperationsInput | Decimal | number | string | null
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
    activity?: activityUncheckedUpdateManyWithoutUsersInput
    activity_question_users?: activity_question_usersUncheckedUpdateManyWithoutUsersInput
    activity_question_users_response?: activity_question_users_responseUncheckedUpdateManyWithoutUsersInput
    activity_sentences_users?: activity_sentences_usersUncheckedUpdateManyWithoutUsersInput
    eduvida?: eduvidaUncheckedUpdateManyWithoutUsersInput
    eduvida_comment?: eduvida_commentUncheckedUpdateManyWithoutUsersInput
    notification?: notificationUncheckedUpdateManyWithoutUsersInput
    reward_users?: reward_usersUncheckedUpdateManyWithoutUsersInput
  }

  export type usersCreateWithoutNotificationInput = {
    id?: number
    firebase_uid: string
    email?: string | null
    name?: string | null
    last_name?: string | null
    score?: Decimal | number | string | null
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
    activity?: activityCreateNestedManyWithoutUsersInput
    activity_question_users?: activity_question_usersCreateNestedManyWithoutUsersInput
    activity_question_users_response?: activity_question_users_responseCreateNestedManyWithoutUsersInput
    activity_sentences_users?: activity_sentences_usersCreateNestedManyWithoutUsersInput
    activity_sentences_users_response?: activity_sentences_users_responseCreateNestedManyWithoutUsersInput
    eduvida?: eduvidaCreateNestedManyWithoutUsersInput
    eduvida_comment?: eduvida_commentCreateNestedManyWithoutUsersInput
    reward_users?: reward_usersCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutNotificationInput = {
    id?: number
    firebase_uid: string
    email?: string | null
    name?: string | null
    last_name?: string | null
    score?: Decimal | number | string | null
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
    activity?: activityUncheckedCreateNestedManyWithoutUsersInput
    activity_question_users?: activity_question_usersUncheckedCreateNestedManyWithoutUsersInput
    activity_question_users_response?: activity_question_users_responseUncheckedCreateNestedManyWithoutUsersInput
    activity_sentences_users?: activity_sentences_usersUncheckedCreateNestedManyWithoutUsersInput
    activity_sentences_users_response?: activity_sentences_users_responseUncheckedCreateNestedManyWithoutUsersInput
    eduvida?: eduvidaUncheckedCreateNestedManyWithoutUsersInput
    eduvida_comment?: eduvida_commentUncheckedCreateNestedManyWithoutUsersInput
    reward_users?: reward_usersUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutNotificationInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutNotificationInput, usersUncheckedCreateWithoutNotificationInput>
  }

  export type usersUpsertWithoutNotificationInput = {
    update: XOR<usersUpdateWithoutNotificationInput, usersUncheckedUpdateWithoutNotificationInput>
    create: XOR<usersCreateWithoutNotificationInput, usersUncheckedCreateWithoutNotificationInput>
  }

  export type usersUpdateWithoutNotificationInput = {
    id?: IntFieldUpdateOperationsInput | number
    firebase_uid?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    score?: NullableDecimalFieldUpdateOperationsInput | Decimal | number | string | null
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
    activity?: activityUpdateManyWithoutUsersInput
    activity_question_users?: activity_question_usersUpdateManyWithoutUsersInput
    activity_question_users_response?: activity_question_users_responseUpdateManyWithoutUsersInput
    activity_sentences_users?: activity_sentences_usersUpdateManyWithoutUsersInput
    activity_sentences_users_response?: activity_sentences_users_responseUpdateManyWithoutUsersInput
    eduvida?: eduvidaUpdateManyWithoutUsersInput
    eduvida_comment?: eduvida_commentUpdateManyWithoutUsersInput
    reward_users?: reward_usersUpdateManyWithoutUsersInput
  }

  export type usersUncheckedUpdateWithoutNotificationInput = {
    id?: IntFieldUpdateOperationsInput | number
    firebase_uid?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    score?: NullableDecimalFieldUpdateOperationsInput | Decimal | number | string | null
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
    activity?: activityUncheckedUpdateManyWithoutUsersInput
    activity_question_users?: activity_question_usersUncheckedUpdateManyWithoutUsersInput
    activity_question_users_response?: activity_question_users_responseUncheckedUpdateManyWithoutUsersInput
    activity_sentences_users?: activity_sentences_usersUncheckedUpdateManyWithoutUsersInput
    activity_sentences_users_response?: activity_sentences_users_responseUncheckedUpdateManyWithoutUsersInput
    eduvida?: eduvidaUncheckedUpdateManyWithoutUsersInput
    eduvida_comment?: eduvida_commentUncheckedUpdateManyWithoutUsersInput
    reward_users?: reward_usersUncheckedUpdateManyWithoutUsersInput
  }

  export type usersCreateWithoutEduvidaInput = {
    id?: number
    firebase_uid: string
    email?: string | null
    name?: string | null
    last_name?: string | null
    score?: Decimal | number | string | null
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
    activity?: activityCreateNestedManyWithoutUsersInput
    activity_question_users?: activity_question_usersCreateNestedManyWithoutUsersInput
    activity_question_users_response?: activity_question_users_responseCreateNestedManyWithoutUsersInput
    activity_sentences_users?: activity_sentences_usersCreateNestedManyWithoutUsersInput
    activity_sentences_users_response?: activity_sentences_users_responseCreateNestedManyWithoutUsersInput
    eduvida_comment?: eduvida_commentCreateNestedManyWithoutUsersInput
    notification?: notificationCreateNestedManyWithoutUsersInput
    reward_users?: reward_usersCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutEduvidaInput = {
    id?: number
    firebase_uid: string
    email?: string | null
    name?: string | null
    last_name?: string | null
    score?: Decimal | number | string | null
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
    activity?: activityUncheckedCreateNestedManyWithoutUsersInput
    activity_question_users?: activity_question_usersUncheckedCreateNestedManyWithoutUsersInput
    activity_question_users_response?: activity_question_users_responseUncheckedCreateNestedManyWithoutUsersInput
    activity_sentences_users?: activity_sentences_usersUncheckedCreateNestedManyWithoutUsersInput
    activity_sentences_users_response?: activity_sentences_users_responseUncheckedCreateNestedManyWithoutUsersInput
    eduvida_comment?: eduvida_commentUncheckedCreateNestedManyWithoutUsersInput
    notification?: notificationUncheckedCreateNestedManyWithoutUsersInput
    reward_users?: reward_usersUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutEduvidaInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutEduvidaInput, usersUncheckedCreateWithoutEduvidaInput>
  }

  export type eduvida_commentCreateWithoutEduvidaInput = {
    comment: string
    created: Date | string
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
    users?: usersCreateNestedOneWithoutEduvida_commentInput
  }

  export type eduvida_commentUncheckedCreateWithoutEduvidaInput = {
    id?: number
    user_uid?: string | null
    comment: string
    created: Date | string
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
  }

  export type eduvida_commentCreateOrConnectWithoutEduvidaInput = {
    where: eduvida_commentWhereUniqueInput
    create: XOR<eduvida_commentCreateWithoutEduvidaInput, eduvida_commentUncheckedCreateWithoutEduvidaInput>
  }

  export type eduvida_commentCreateManyEduvidaInputEnvelope = {
    data: Enumerable<eduvida_commentCreateManyEduvidaInput>
    skipDuplicates?: boolean
  }

  export type usersUpsertWithoutEduvidaInput = {
    update: XOR<usersUpdateWithoutEduvidaInput, usersUncheckedUpdateWithoutEduvidaInput>
    create: XOR<usersCreateWithoutEduvidaInput, usersUncheckedCreateWithoutEduvidaInput>
  }

  export type usersUpdateWithoutEduvidaInput = {
    id?: IntFieldUpdateOperationsInput | number
    firebase_uid?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    score?: NullableDecimalFieldUpdateOperationsInput | Decimal | number | string | null
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
    activity?: activityUpdateManyWithoutUsersInput
    activity_question_users?: activity_question_usersUpdateManyWithoutUsersInput
    activity_question_users_response?: activity_question_users_responseUpdateManyWithoutUsersInput
    activity_sentences_users?: activity_sentences_usersUpdateManyWithoutUsersInput
    activity_sentences_users_response?: activity_sentences_users_responseUpdateManyWithoutUsersInput
    eduvida_comment?: eduvida_commentUpdateManyWithoutUsersInput
    notification?: notificationUpdateManyWithoutUsersInput
    reward_users?: reward_usersUpdateManyWithoutUsersInput
  }

  export type usersUncheckedUpdateWithoutEduvidaInput = {
    id?: IntFieldUpdateOperationsInput | number
    firebase_uid?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    score?: NullableDecimalFieldUpdateOperationsInput | Decimal | number | string | null
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
    activity?: activityUncheckedUpdateManyWithoutUsersInput
    activity_question_users?: activity_question_usersUncheckedUpdateManyWithoutUsersInput
    activity_question_users_response?: activity_question_users_responseUncheckedUpdateManyWithoutUsersInput
    activity_sentences_users?: activity_sentences_usersUncheckedUpdateManyWithoutUsersInput
    activity_sentences_users_response?: activity_sentences_users_responseUncheckedUpdateManyWithoutUsersInput
    eduvida_comment?: eduvida_commentUncheckedUpdateManyWithoutUsersInput
    notification?: notificationUncheckedUpdateManyWithoutUsersInput
    reward_users?: reward_usersUncheckedUpdateManyWithoutUsersInput
  }

  export type eduvida_commentUpsertWithWhereUniqueWithoutEduvidaInput = {
    where: eduvida_commentWhereUniqueInput
    update: XOR<eduvida_commentUpdateWithoutEduvidaInput, eduvida_commentUncheckedUpdateWithoutEduvidaInput>
    create: XOR<eduvida_commentCreateWithoutEduvidaInput, eduvida_commentUncheckedCreateWithoutEduvidaInput>
  }

  export type eduvida_commentUpdateWithWhereUniqueWithoutEduvidaInput = {
    where: eduvida_commentWhereUniqueInput
    data: XOR<eduvida_commentUpdateWithoutEduvidaInput, eduvida_commentUncheckedUpdateWithoutEduvidaInput>
  }

  export type eduvida_commentUpdateManyWithWhereWithoutEduvidaInput = {
    where: eduvida_commentScalarWhereInput
    data: XOR<eduvida_commentUpdateManyMutationInput, eduvida_commentUncheckedUpdateManyWithoutEduvida_commentInput>
  }

  export type eduvidaCreateWithoutEduvida_commentInput = {
    title: string
    help_text: string
    help_type?: string | null
    help_close: number
    created: Date | string
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
    users: usersCreateNestedOneWithoutEduvidaInput
  }

  export type eduvidaUncheckedCreateWithoutEduvida_commentInput = {
    id?: number
    author_uid: string
    title: string
    help_text: string
    help_type?: string | null
    help_close: number
    created: Date | string
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
  }

  export type eduvidaCreateOrConnectWithoutEduvida_commentInput = {
    where: eduvidaWhereUniqueInput
    create: XOR<eduvidaCreateWithoutEduvida_commentInput, eduvidaUncheckedCreateWithoutEduvida_commentInput>
  }

  export type usersCreateWithoutEduvida_commentInput = {
    id?: number
    firebase_uid: string
    email?: string | null
    name?: string | null
    last_name?: string | null
    score?: Decimal | number | string | null
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
    activity?: activityCreateNestedManyWithoutUsersInput
    activity_question_users?: activity_question_usersCreateNestedManyWithoutUsersInput
    activity_question_users_response?: activity_question_users_responseCreateNestedManyWithoutUsersInput
    activity_sentences_users?: activity_sentences_usersCreateNestedManyWithoutUsersInput
    activity_sentences_users_response?: activity_sentences_users_responseCreateNestedManyWithoutUsersInput
    eduvida?: eduvidaCreateNestedManyWithoutUsersInput
    notification?: notificationCreateNestedManyWithoutUsersInput
    reward_users?: reward_usersCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutEduvida_commentInput = {
    id?: number
    firebase_uid: string
    email?: string | null
    name?: string | null
    last_name?: string | null
    score?: Decimal | number | string | null
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
    activity?: activityUncheckedCreateNestedManyWithoutUsersInput
    activity_question_users?: activity_question_usersUncheckedCreateNestedManyWithoutUsersInput
    activity_question_users_response?: activity_question_users_responseUncheckedCreateNestedManyWithoutUsersInput
    activity_sentences_users?: activity_sentences_usersUncheckedCreateNestedManyWithoutUsersInput
    activity_sentences_users_response?: activity_sentences_users_responseUncheckedCreateNestedManyWithoutUsersInput
    eduvida?: eduvidaUncheckedCreateNestedManyWithoutUsersInput
    notification?: notificationUncheckedCreateNestedManyWithoutUsersInput
    reward_users?: reward_usersUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutEduvida_commentInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutEduvida_commentInput, usersUncheckedCreateWithoutEduvida_commentInput>
  }

  export type eduvidaUpsertWithoutEduvida_commentInput = {
    update: XOR<eduvidaUpdateWithoutEduvida_commentInput, eduvidaUncheckedUpdateWithoutEduvida_commentInput>
    create: XOR<eduvidaCreateWithoutEduvida_commentInput, eduvidaUncheckedCreateWithoutEduvida_commentInput>
  }

  export type eduvidaUpdateWithoutEduvida_commentInput = {
    title?: StringFieldUpdateOperationsInput | string
    help_text?: StringFieldUpdateOperationsInput | string
    help_type?: NullableStringFieldUpdateOperationsInput | string | null
    help_close?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
    users?: usersUpdateOneRequiredWithoutEduvidaInput
  }

  export type eduvidaUncheckedUpdateWithoutEduvida_commentInput = {
    id?: IntFieldUpdateOperationsInput | number
    author_uid?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    help_text?: StringFieldUpdateOperationsInput | string
    help_type?: NullableStringFieldUpdateOperationsInput | string | null
    help_close?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type usersUpsertWithoutEduvida_commentInput = {
    update: XOR<usersUpdateWithoutEduvida_commentInput, usersUncheckedUpdateWithoutEduvida_commentInput>
    create: XOR<usersCreateWithoutEduvida_commentInput, usersUncheckedCreateWithoutEduvida_commentInput>
  }

  export type usersUpdateWithoutEduvida_commentInput = {
    id?: IntFieldUpdateOperationsInput | number
    firebase_uid?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    score?: NullableDecimalFieldUpdateOperationsInput | Decimal | number | string | null
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
    activity?: activityUpdateManyWithoutUsersInput
    activity_question_users?: activity_question_usersUpdateManyWithoutUsersInput
    activity_question_users_response?: activity_question_users_responseUpdateManyWithoutUsersInput
    activity_sentences_users?: activity_sentences_usersUpdateManyWithoutUsersInput
    activity_sentences_users_response?: activity_sentences_users_responseUpdateManyWithoutUsersInput
    eduvida?: eduvidaUpdateManyWithoutUsersInput
    notification?: notificationUpdateManyWithoutUsersInput
    reward_users?: reward_usersUpdateManyWithoutUsersInput
  }

  export type usersUncheckedUpdateWithoutEduvida_commentInput = {
    id?: IntFieldUpdateOperationsInput | number
    firebase_uid?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    score?: NullableDecimalFieldUpdateOperationsInput | Decimal | number | string | null
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
    activity?: activityUncheckedUpdateManyWithoutUsersInput
    activity_question_users?: activity_question_usersUncheckedUpdateManyWithoutUsersInput
    activity_question_users_response?: activity_question_users_responseUncheckedUpdateManyWithoutUsersInput
    activity_sentences_users?: activity_sentences_usersUncheckedUpdateManyWithoutUsersInput
    activity_sentences_users_response?: activity_sentences_users_responseUncheckedUpdateManyWithoutUsersInput
    eduvida?: eduvidaUncheckedUpdateManyWithoutUsersInput
    notification?: notificationUncheckedUpdateManyWithoutUsersInput
    reward_users?: reward_usersUncheckedUpdateManyWithoutUsersInput
  }

  export type activityCreateManyUsersInput = {
    id?: number
    title: string
    with_password: number
    password?: string | null
    type_activity?: string | null
    excluded?: number | null
    created?: Date | string | null
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
    difficulty_level?: string | null
  }

  export type activity_question_usersCreateManyUsersInput = {
    id?: number
    activity_id?: number | null
    value?: Decimal | number | string | null
    processed?: number | null
    created?: Date | string | null
    display_to_user?: number | null
    evaluated?: number | null
  }

  export type activity_question_users_responseCreateManyUsersInput = {
    id?: number
    activity_id?: number | null
    number_question: number
    answer: string
    comments?: string | null
  }

  export type activity_sentences_usersCreateManyUsersInput = {
    id?: number
    activity_id?: number | null
    value?: Decimal | number | string | null
    processed?: number | null
  }

  export type activity_sentences_users_responseCreateManyUsersInput = {
    id?: number
    activity_id?: number | null
    number_sentence: number
    sentences_informed: string
    comments?: string | null
  }

  export type eduvidaCreateManyUsersInput = {
    id?: number
    title: string
    help_text: string
    help_type?: string | null
    help_close: number
    created: Date | string
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
  }

  export type eduvida_commentCreateManyUsersInput = {
    id?: number
    eduvida_id?: number | null
    comment: string
    created: Date | string
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
  }

  export type notificationCreateManyUsersInput = {
    id?: number
    recipient_uid: string
    notification_text: string
    notification_date: Date | string
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
  }

  export type reward_usersCreateManyUsersInput = {
    id?: number
    reward_id?: number | null
    amount: number
  }

  export type activityUpdateWithoutUsersInput = {
    title?: StringFieldUpdateOperationsInput | string
    with_password?: IntFieldUpdateOperationsInput | number
    password?: NullableStringFieldUpdateOperationsInput | string | null
    type_activity?: NullableStringFieldUpdateOperationsInput | string | null
    excluded?: NullableIntFieldUpdateOperationsInput | number | null
    created?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
    difficulty_level?: NullableStringFieldUpdateOperationsInput | string | null
    activity_question_response?: activity_question_responseUpdateManyWithoutActivityInput
    activity_question_users?: activity_question_usersUpdateManyWithoutActivityInput
    activity_question_users_response?: activity_question_users_responseUpdateManyWithoutActivityInput
    activity_sentences_users?: activity_sentences_usersUpdateManyWithoutActivityInput
    activity_sentences_users_response?: activity_sentences_users_responseUpdateManyWithoutActivityInput
  }

  export type activityUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    with_password?: IntFieldUpdateOperationsInput | number
    password?: NullableStringFieldUpdateOperationsInput | string | null
    type_activity?: NullableStringFieldUpdateOperationsInput | string | null
    excluded?: NullableIntFieldUpdateOperationsInput | number | null
    created?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
    difficulty_level?: NullableStringFieldUpdateOperationsInput | string | null
    activity_question_response?: activity_question_responseUncheckedUpdateManyWithoutActivityInput
    activity_question_users?: activity_question_usersUncheckedUpdateManyWithoutActivityInput
    activity_question_users_response?: activity_question_users_responseUncheckedUpdateManyWithoutActivityInput
    activity_sentences_users?: activity_sentences_usersUncheckedUpdateManyWithoutActivityInput
    activity_sentences_users_response?: activity_sentences_users_responseUncheckedUpdateManyWithoutActivityInput
  }

  export type activityUncheckedUpdateManyWithoutActivityInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    with_password?: IntFieldUpdateOperationsInput | number
    password?: NullableStringFieldUpdateOperationsInput | string | null
    type_activity?: NullableStringFieldUpdateOperationsInput | string | null
    excluded?: NullableIntFieldUpdateOperationsInput | number | null
    created?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
    difficulty_level?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type activity_question_usersUpdateWithoutUsersInput = {
    value?: NullableDecimalFieldUpdateOperationsInput | Decimal | number | string | null
    processed?: NullableIntFieldUpdateOperationsInput | number | null
    created?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    display_to_user?: NullableIntFieldUpdateOperationsInput | number | null
    evaluated?: NullableIntFieldUpdateOperationsInput | number | null
    activity?: activityUpdateOneWithoutActivity_question_usersInput
  }

  export type activity_question_usersUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    activity_id?: NullableIntFieldUpdateOperationsInput | number | null
    value?: NullableDecimalFieldUpdateOperationsInput | Decimal | number | string | null
    processed?: NullableIntFieldUpdateOperationsInput | number | null
    created?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    display_to_user?: NullableIntFieldUpdateOperationsInput | number | null
    evaluated?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type activity_question_usersUncheckedUpdateManyWithoutActivity_question_usersInput = {
    id?: IntFieldUpdateOperationsInput | number
    activity_id?: NullableIntFieldUpdateOperationsInput | number | null
    value?: NullableDecimalFieldUpdateOperationsInput | Decimal | number | string | null
    processed?: NullableIntFieldUpdateOperationsInput | number | null
    created?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    display_to_user?: NullableIntFieldUpdateOperationsInput | number | null
    evaluated?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type activity_question_users_responseUpdateWithoutUsersInput = {
    number_question?: IntFieldUpdateOperationsInput | number
    answer?: StringFieldUpdateOperationsInput | string
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    activity?: activityUpdateOneWithoutActivity_question_users_responseInput
  }

  export type activity_question_users_responseUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    activity_id?: NullableIntFieldUpdateOperationsInput | number | null
    number_question?: IntFieldUpdateOperationsInput | number
    answer?: StringFieldUpdateOperationsInput | string
    comments?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type activity_question_users_responseUncheckedUpdateManyWithoutActivity_question_users_responseInput = {
    id?: IntFieldUpdateOperationsInput | number
    activity_id?: NullableIntFieldUpdateOperationsInput | number | null
    number_question?: IntFieldUpdateOperationsInput | number
    answer?: StringFieldUpdateOperationsInput | string
    comments?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type activity_sentences_usersUpdateWithoutUsersInput = {
    value?: NullableDecimalFieldUpdateOperationsInput | Decimal | number | string | null
    processed?: NullableIntFieldUpdateOperationsInput | number | null
    activity?: activityUpdateOneWithoutActivity_sentences_usersInput
  }

  export type activity_sentences_usersUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    activity_id?: NullableIntFieldUpdateOperationsInput | number | null
    value?: NullableDecimalFieldUpdateOperationsInput | Decimal | number | string | null
    processed?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type activity_sentences_usersUncheckedUpdateManyWithoutActivity_sentences_usersInput = {
    id?: IntFieldUpdateOperationsInput | number
    activity_id?: NullableIntFieldUpdateOperationsInput | number | null
    value?: NullableDecimalFieldUpdateOperationsInput | Decimal | number | string | null
    processed?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type activity_sentences_users_responseUpdateWithoutUsersInput = {
    number_sentence?: IntFieldUpdateOperationsInput | number
    sentences_informed?: StringFieldUpdateOperationsInput | string
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    activity?: activityUpdateOneWithoutActivity_sentences_users_responseInput
  }

  export type activity_sentences_users_responseUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    activity_id?: NullableIntFieldUpdateOperationsInput | number | null
    number_sentence?: IntFieldUpdateOperationsInput | number
    sentences_informed?: StringFieldUpdateOperationsInput | string
    comments?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type activity_sentences_users_responseUncheckedUpdateManyWithoutActivity_sentences_users_responseInput = {
    id?: IntFieldUpdateOperationsInput | number
    activity_id?: NullableIntFieldUpdateOperationsInput | number | null
    number_sentence?: IntFieldUpdateOperationsInput | number
    sentences_informed?: StringFieldUpdateOperationsInput | string
    comments?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type eduvidaUpdateWithoutUsersInput = {
    title?: StringFieldUpdateOperationsInput | string
    help_text?: StringFieldUpdateOperationsInput | string
    help_type?: NullableStringFieldUpdateOperationsInput | string | null
    help_close?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
    eduvida_comment?: eduvida_commentUpdateManyWithoutEduvidaInput
  }

  export type eduvidaUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    help_text?: StringFieldUpdateOperationsInput | string
    help_type?: NullableStringFieldUpdateOperationsInput | string | null
    help_close?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
    eduvida_comment?: eduvida_commentUncheckedUpdateManyWithoutEduvidaInput
  }

  export type eduvidaUncheckedUpdateManyWithoutEduvidaInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    help_text?: StringFieldUpdateOperationsInput | string
    help_type?: NullableStringFieldUpdateOperationsInput | string | null
    help_close?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type eduvida_commentUpdateWithoutUsersInput = {
    comment?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
    eduvida?: eduvidaUpdateOneWithoutEduvida_commentInput
  }

  export type eduvida_commentUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    eduvida_id?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type eduvida_commentUncheckedUpdateManyWithoutEduvida_commentInput = {
    id?: IntFieldUpdateOperationsInput | number
    eduvida_id?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type notificationUpdateWithoutUsersInput = {
    recipient_uid?: StringFieldUpdateOperationsInput | string
    notification_text?: StringFieldUpdateOperationsInput | string
    notification_date?: DateTimeFieldUpdateOperationsInput | Date | string
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type notificationUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    recipient_uid?: StringFieldUpdateOperationsInput | string
    notification_text?: StringFieldUpdateOperationsInput | string
    notification_date?: DateTimeFieldUpdateOperationsInput | Date | string
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type notificationUncheckedUpdateManyWithoutNotificationInput = {
    id?: IntFieldUpdateOperationsInput | number
    recipient_uid?: StringFieldUpdateOperationsInput | string
    notification_text?: StringFieldUpdateOperationsInput | string
    notification_date?: DateTimeFieldUpdateOperationsInput | Date | string
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type reward_usersUpdateWithoutUsersInput = {
    amount?: IntFieldUpdateOperationsInput | number
    reward?: rewardUpdateOneWithoutReward_usersInput
  }

  export type reward_usersUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    reward_id?: NullableIntFieldUpdateOperationsInput | number | null
    amount?: IntFieldUpdateOperationsInput | number
  }

  export type reward_usersUncheckedUpdateManyWithoutReward_usersInput = {
    id?: IntFieldUpdateOperationsInput | number
    reward_id?: NullableIntFieldUpdateOperationsInput | number | null
    amount?: IntFieldUpdateOperationsInput | number
  }

  export type activity_question_responseCreateManyActivityInput = {
    id?: number
    number_question: number
    answer_one: string
    answer_two: string
    answer_tree: string
    answer_four: string
    right_answer: string
    question?: string | null
  }

  export type activity_question_usersCreateManyActivityInput = {
    id?: number
    user_uid?: string | null
    value?: Decimal | number | string | null
    processed?: number | null
    created?: Date | string | null
    display_to_user?: number | null
    evaluated?: number | null
  }

  export type activity_question_users_responseCreateManyActivityInput = {
    id?: number
    user_uid?: string | null
    number_question: number
    answer: string
    comments?: string | null
  }

  export type activity_sentences_usersCreateManyActivityInput = {
    id?: number
    user_uid?: string | null
    value?: Decimal | number | string | null
    processed?: number | null
  }

  export type activity_sentences_users_responseCreateManyActivityInput = {
    id?: number
    user_uid?: string | null
    number_sentence: number
    sentences_informed: string
    comments?: string | null
  }

  export type activity_question_responseUpdateWithoutActivityInput = {
    number_question?: IntFieldUpdateOperationsInput | number
    answer_one?: StringFieldUpdateOperationsInput | string
    answer_two?: StringFieldUpdateOperationsInput | string
    answer_tree?: StringFieldUpdateOperationsInput | string
    answer_four?: StringFieldUpdateOperationsInput | string
    right_answer?: StringFieldUpdateOperationsInput | string
    question?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type activity_question_responseUncheckedUpdateWithoutActivityInput = {
    id?: IntFieldUpdateOperationsInput | number
    number_question?: IntFieldUpdateOperationsInput | number
    answer_one?: StringFieldUpdateOperationsInput | string
    answer_two?: StringFieldUpdateOperationsInput | string
    answer_tree?: StringFieldUpdateOperationsInput | string
    answer_four?: StringFieldUpdateOperationsInput | string
    right_answer?: StringFieldUpdateOperationsInput | string
    question?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type activity_question_responseUncheckedUpdateManyWithoutActivity_question_responseInput = {
    id?: IntFieldUpdateOperationsInput | number
    number_question?: IntFieldUpdateOperationsInput | number
    answer_one?: StringFieldUpdateOperationsInput | string
    answer_two?: StringFieldUpdateOperationsInput | string
    answer_tree?: StringFieldUpdateOperationsInput | string
    answer_four?: StringFieldUpdateOperationsInput | string
    right_answer?: StringFieldUpdateOperationsInput | string
    question?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type activity_question_usersUpdateWithoutActivityInput = {
    value?: NullableDecimalFieldUpdateOperationsInput | Decimal | number | string | null
    processed?: NullableIntFieldUpdateOperationsInput | number | null
    created?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    display_to_user?: NullableIntFieldUpdateOperationsInput | number | null
    evaluated?: NullableIntFieldUpdateOperationsInput | number | null
    users?: usersUpdateOneWithoutActivity_question_usersInput
  }

  export type activity_question_usersUncheckedUpdateWithoutActivityInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_uid?: NullableStringFieldUpdateOperationsInput | string | null
    value?: NullableDecimalFieldUpdateOperationsInput | Decimal | number | string | null
    processed?: NullableIntFieldUpdateOperationsInput | number | null
    created?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    display_to_user?: NullableIntFieldUpdateOperationsInput | number | null
    evaluated?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type activity_question_users_responseUpdateWithoutActivityInput = {
    number_question?: IntFieldUpdateOperationsInput | number
    answer?: StringFieldUpdateOperationsInput | string
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    users?: usersUpdateOneWithoutActivity_question_users_responseInput
  }

  export type activity_question_users_responseUncheckedUpdateWithoutActivityInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_uid?: NullableStringFieldUpdateOperationsInput | string | null
    number_question?: IntFieldUpdateOperationsInput | number
    answer?: StringFieldUpdateOperationsInput | string
    comments?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type activity_sentences_usersUpdateWithoutActivityInput = {
    value?: NullableDecimalFieldUpdateOperationsInput | Decimal | number | string | null
    processed?: NullableIntFieldUpdateOperationsInput | number | null
    users?: usersUpdateOneWithoutActivity_sentences_usersInput
  }

  export type activity_sentences_usersUncheckedUpdateWithoutActivityInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_uid?: NullableStringFieldUpdateOperationsInput | string | null
    value?: NullableDecimalFieldUpdateOperationsInput | Decimal | number | string | null
    processed?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type activity_sentences_users_responseUpdateWithoutActivityInput = {
    number_sentence?: IntFieldUpdateOperationsInput | number
    sentences_informed?: StringFieldUpdateOperationsInput | string
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    users?: usersUpdateOneWithoutActivity_sentences_users_responseInput
  }

  export type activity_sentences_users_responseUncheckedUpdateWithoutActivityInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_uid?: NullableStringFieldUpdateOperationsInput | string | null
    number_sentence?: IntFieldUpdateOperationsInput | number
    sentences_informed?: StringFieldUpdateOperationsInput | string
    comments?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type reward_usersCreateManyRewardInput = {
    id?: number
    user_uid?: string | null
    amount: number
  }

  export type reward_usersUpdateWithoutRewardInput = {
    amount?: IntFieldUpdateOperationsInput | number
    users?: usersUpdateOneWithoutReward_usersInput
  }

  export type reward_usersUncheckedUpdateWithoutRewardInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_uid?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: IntFieldUpdateOperationsInput | number
  }

  export type eduvida_commentCreateManyEduvidaInput = {
    id?: number
    user_uid?: string | null
    comment: string
    created: Date | string
    image_reference?: string | null
    image_url?: string | null
    image_type?: string | null
    image_size_wh?: string | null
  }

  export type eduvida_commentUpdateWithoutEduvidaInput = {
    comment?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
    users?: usersUpdateOneWithoutEduvida_commentInput
  }

  export type eduvida_commentUncheckedUpdateWithoutEduvidaInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_uid?: NullableStringFieldUpdateOperationsInput | string | null
    comment?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    image_reference?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    image_type?: NullableStringFieldUpdateOperationsInput | string | null
    image_size_wh?: NullableStringFieldUpdateOperationsInput | string | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.DMMF.Document;
}